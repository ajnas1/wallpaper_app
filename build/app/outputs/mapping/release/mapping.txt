# compiler: R8
# compiler_version: 8.1.56
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: 58dc981
# pg_map_hash: SHA-256 58dc981f3c273f696e3e064e087ea18b721753a8be59ff30557bf89d025586a2
_COROUTINE.ArtificialStackFrames -> a.a:
    void <init>() -> <init>
    1:1:java.lang.StackTraceElement coroutineBoundary():0:0 -> a
_COROUTINE.CoroutineDebuggingKt -> a.b:
    java.lang.String ARTIFICIAL_FRAME_PACKAGE_NAME -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.StackTraceElement access$artificialFrame(java.lang.Throwable,java.lang.String):0:0 -> a
    1:1:java.lang.StackTraceElement artificialFrame(java.lang.Throwable,java.lang.String):0:0 -> b
_COROUTINE._BOUNDARY -> a.c:
androidx.activity.ComponentActivity -> b.a:
androidx.activity.OnBackPressedCallback -> b.b:
    boolean isEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList cancellables -> b
    kotlin.jvm.functions.Function0 enabledChangedCallback -> c
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:void setEnabled(boolean):0:0 -> a
androidx.arch.core.executor.ArchTaskExecutor -> c.c:
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    java.util.concurrent.Executor sMainThreadExecutor -> d
    java.util.concurrent.Executor sIOThreadExecutor -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:1:boolean isMainThread():0:0 -> b
    1:1:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:1:void $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M(java.lang.Runnable):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs(java.lang.Runnable):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc/c;"}
    1:1:void lambda$static$0(java.lang.Runnable):0:0 -> g
    1:1:void lambda$static$1(java.lang.Runnable):0:0 -> h
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> c.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1 -> c.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> c.d:
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    android.os.Handler mMainHandler -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:1:boolean isMainThread():0:0 -> b
    1:1:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> d
androidx.arch.core.executor.DefaultTaskExecutor$1 -> c.d$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    androidx.arch.core.executor.DefaultTaskExecutor this$0 -> b
    1:1:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/d;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl -> c.d$b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.arch.core.executor.TaskExecutor -> c.e:
    void <init>() -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> b
    void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.internal.FastSafeIterableMap -> d.a:
    java.util.HashMap mHashMap -> i
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ld/b$c;"}
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> h
    1:1:java.util.Map$Entry ceil(java.lang.Object):0:0 -> i
androidx.arch.core.internal.SafeIterableMap -> d.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> e
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> f
    java.util.WeakHashMap mIterators -> g
    int mSize -> h
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Iterator descendingIterator():0:0 -> a
    1:1:java.util.Map$Entry eldest():0:0 -> b
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ld/b$c;"}
    1:1:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld/b$d;"}
    1:1:java.util.Map$Entry newest():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ld/b$c;"}
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> d.b$a:
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;Ld/b$c;)V"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)Ld/b$c;"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)Ld/b$c;"}
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> d.b$b:
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;Ld/b$c;)V"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)Ld/b$c;"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)Ld/b$c;"}
androidx.arch.core.internal.SafeIterableMap$Entry -> d.b$c:
    java.lang.Object mKey -> a
    java.lang.Object mValue -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> d.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    boolean mBeforeStart -> b
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b;)V"}
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)V"}
    1:1:java.util.Map$Entry next():0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> d.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;Ld/b$c;)V"}
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)V"}
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)Ld/b$c;"}
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)Ld/b$c;"}
    1:1:java.util.Map$Entry next():0:0 -> d
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld/b$c;"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> d.b$f:
    void <init>() -> <init>
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/b$c;)V"}
androidx.collection.ArrayMap -> e.a:
    androidx.collection.MapCollections mCollections -> l
    void <init>() -> <init>
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:androidx.collection.MapCollections getCollection():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le/c;"}
    1:1:boolean retainAll(java.util.Collection):0:0 -> o
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.util.Collection values():0:0 -> values
androidx.collection.ArrayMap$1 -> e.a$a:
    androidx.collection.ArrayMap this$0 -> d
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/a;)V"}
    1:1:void colClear():0:0 -> a
    1:1:java.lang.Object colGetEntry(int,int):0:0 -> b
    1:1:java.util.Map colGetMap():0:0 -> c
    1:1:int colGetSize():0:0 -> d
    1:1:int colIndexOfKey(java.lang.Object):0:0 -> e
    1:1:int colIndexOfValue(java.lang.Object):0:0 -> f
    1:1:void colPut(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:void colRemoveAt(int):0:0 -> h
    1:1:java.lang.Object colSetValue(int,java.lang.Object):0:0 -> i
androidx.collection.ContainerHelpers -> e.b:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int binarySearch(int[],int,int):0:0 -> a
    1:1:boolean equal(java.lang.Object,java.lang.Object):0:0 -> b
    1:1:int idealByteArraySize(int):0:0 -> c
    1:1:int idealIntArraySize(int):0:0 -> d
androidx.collection.MapCollections -> e.c:
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    void <init>() -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
    1:1:boolean containsAllHelper(java.util.Map,java.util.Collection):0:0 -> j
    1:1:boolean equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> k
    1:1:java.util.Set getEntrySet():0:0 -> l
    1:1:java.util.Set getKeySet():0:0 -> m
    1:1:java.util.Collection getValues():0:0 -> n
    1:1:boolean removeAllHelper(java.util.Map,java.util.Collection):0:0 -> o
    1:1:boolean retainAllHelper(java.util.Map,java.util.Collection):0:0 -> p
    1:1:java.lang.Object[] toArrayHelper(int):0:0 -> q
    1:1:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0:0 -> r
androidx.collection.MapCollections$ArrayIterator -> e.c$a:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/c;I)V"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
androidx.collection.MapCollections$EntrySet -> e.c$b:
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/c;)V"}
    1:1:boolean add(java.util.Map$Entry):0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.MapCollections$KeySet -> e.c$c:
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/c;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.MapCollections$MapIterator -> e.c$d:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/c;)V"}
    1:1:java.util.Map$Entry next():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections$ValuesCollection -> e.c$e:
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/c;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.SimpleArrayMap -> e.d:
    int[] mHashes -> e
    java.lang.Object[] mArray -> f
    int mSize -> g
    java.lang.Object[] mBaseCache -> h
    int mBaseCacheSize -> i
    java.lang.Object[] mTwiceBaseCache -> j
    int mTwiceBaseCacheSize -> k
    1:1:void <init>():0:0 -> <init>
    1:1:void allocArrays(int):0:0 -> a
    1:1:int binarySearchHashes(int[],int,int):0:0 -> b
    1:1:void ensureCapacity(int):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:void freeArrays(int[],java.lang.Object[],int):0:0 -> d
    1:1:int indexOf(java.lang.Object,int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int indexOfKey(java.lang.Object):0:0 -> f
    1:1:int indexOfNull():0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
    1:1:int indexOfValue(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object keyAt(int):0:0 -> i
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:void putAll(androidx.collection.SimpleArrayMap):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/d;)V"}
    1:1:java.lang.Object removeAt(int):0:0 -> k
    1:1:java.lang.Object setValueAt(int,java.lang.Object):0:0 -> l
    1:1:java.lang.Object valueAt(int):0:0 -> m
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0:0 -> replace
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> replace
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.SparseArrayCompat -> e.e:
    boolean mGarbage -> e
    int[] mKeys -> f
    java.lang.Object[] mValues -> g
    int mSize -> h
    java.lang.Object DELETED -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void clear():0:0 -> a
    1:1:androidx.collection.SparseArrayCompat clone():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le/e;"}
    1:1:void gc():0:0 -> c
    1:1:java.lang.Object clone():0:0 -> clone
    1:1:int keyAt(int):0:0 -> d
    1:1:int size():0:0 -> e
    1:1:java.lang.Object valueAt(int):0:0 -> f
    1:1:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.a:
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
    java.lang.Object NULL -> g
    1:1:void addDoneString(java.lang.StringBuilder):0:0 -> a
    1:1:void afterDone():0:0 -> b
    1:1:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> c
    1:1:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$e;)Landroidx/concurrent/futures/a$e;"}
    1:1:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;)V"}
    1:1:void executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> f
    1:1:java.lang.Object getDoneValue(java.lang.Object):0:0 -> g
    1:1:java.lang.Object get():0:0 -> get
    2:2:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:java.lang.Object getUninterruptibly(java.util.concurrent.Future):0:0 -> h
    1:1:void interruptTask():0:0 -> i
    1:1:java.lang.String pendingToString():0:0 -> j
    1:1:void releaseWaiters():0:0 -> k
    1:1:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;)V"}
    1:1:boolean set(java.lang.Object):0:0 -> m
    1:1:java.lang.String userObjectToString(java.lang.Object):0:0 -> n
androidx.concurrent.futures.AbstractResolvableFuture$1 -> androidx.concurrent.futures.a$a:
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.a$b:
    void <init>() -> <init>
    1:1:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$a;)V"}
    boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.a$c:
    boolean wasInterrupted -> a
    java.lang.Throwable cause -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> d
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.a$d:
    java.lang.Throwable exception -> a
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.a$e:
    java.lang.Runnable task -> a
    java.util.concurrent.Executor executor -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> d
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.a$f:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> e
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.concurrent.futures.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$2$58dd097c22a157c6fc915c3ca83711e3efdab037cd14fe4274f47b3cf6d48957$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.a$g:
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.a$h:
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
    1:1:void <init>():0:0 -> <init>
    void <init>(boolean) -> <init>
    1:1:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;)V"}
    1:1:void unpark():0:0 -> b
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.c:
    1:1:boolean set(java.lang.Object):0:0 -> m
    1:1:androidx.concurrent.futures.ResolvableFuture create():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/concurrent/futures/c;"}
androidx.core.R$id -> f.a:
    int accessibility_custom_action_4 -> A
    int accessibility_custom_action_5 -> B
    int accessibility_custom_action_6 -> C
    int accessibility_custom_action_7 -> D
    int accessibility_custom_action_8 -> E
    int accessibility_custom_action_9 -> F
    int tag_accessibility_pane_title -> G
    int tag_on_apply_window_listener -> H
    int tag_unhandled_key_listeners -> I
    int tag_window_insets_animation_callback -> J
    int accessibility_custom_action_0 -> a
    int accessibility_custom_action_1 -> b
    int accessibility_custom_action_10 -> c
    int accessibility_custom_action_11 -> d
    int accessibility_custom_action_12 -> e
    int accessibility_custom_action_13 -> f
    int accessibility_custom_action_14 -> g
    int accessibility_custom_action_15 -> h
    int accessibility_custom_action_16 -> i
    int accessibility_custom_action_17 -> j
    int accessibility_custom_action_18 -> k
    int accessibility_custom_action_19 -> l
    int accessibility_custom_action_2 -> m
    int accessibility_custom_action_20 -> n
    int accessibility_custom_action_21 -> o
    int accessibility_custom_action_22 -> p
    int accessibility_custom_action_23 -> q
    int accessibility_custom_action_24 -> r
    int accessibility_custom_action_25 -> s
    int accessibility_custom_action_26 -> t
    int accessibility_custom_action_27 -> u
    int accessibility_custom_action_28 -> v
    int accessibility_custom_action_29 -> w
    int accessibility_custom_action_3 -> x
    int accessibility_custom_action_30 -> y
    int accessibility_custom_action_31 -> z
androidx.core.app.ActivityCompat -> androidx.core.app.a:
    1:1:void requestPermissions(android.app.Activity,java.lang.String[],int):0:0 -> d
androidx.core.app.ActivityCompat$Api23Impl -> androidx.core.app.a$a:
    1:1:void onSharedElementsReady(java.lang.Object):0:0 -> a
    1:1:void requestPermissions(android.app.Activity,java.lang.String[],int):0:0 -> b
    1:1:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String):0:0 -> c
androidx.core.app.ComponentActivity -> androidx.core.app.b:
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    1:1:java.lang.Object checkCompatWrapper(java.lang.Object):0:0 -> a
androidx.core.app.MultiWindowModeChangedInfo -> androidx.core.app.c:
androidx.core.app.NotificationManagerCompat -> androidx.core.app.d:
    android.content.Context mContext -> a
    android.app.NotificationManager mNotificationManager -> b
    java.lang.Object sEnabledNotificationListenersLock -> c
    java.util.Set sEnabledNotificationListenerPackages -> d
    java.lang.Object sLock -> e
    1:1:boolean areNotificationsEnabled():0:0 -> a
    1:1:androidx.core.app.NotificationManagerCompat from(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/app/d;"}
androidx.core.app.NotificationManagerCompat$Api24Impl -> androidx.core.app.d$a:
    1:1:boolean areNotificationsEnabled(android.app.NotificationManager):0:0 -> a
    1:1:int getImportance(android.app.NotificationManager):0:0 -> b
androidx.core.app.PictureInPictureModeChangedInfo -> androidx.core.app.e:
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.app.SharedElementCallback -> androidx.core.app.f:
androidx.core.content.ContextCompat -> androidx.core.content.a:
    java.lang.Object sSync -> a
    1:1:int checkSelfPermission(android.content.Context,java.lang.String):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> b
    1:1:java.util.concurrent.Executor getMainExecutor(android.content.Context):0:0 -> c
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.a$a:
    1:1:java.io.File getCodeCacheDir(android.content.Context):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int):0:0 -> b
    1:1:java.io.File getNoBackupFilesDir(android.content.Context):0:0 -> c
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.a$b:
    1:1:java.util.concurrent.Executor getMainExecutor(android.content.Context):0:0 -> a
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.a:
    java.lang.ThreadLocal sTempTypedValue -> a
    java.util.WeakHashMap sColorStateCaches -> b
    java.lang.Object sColorStateCacheLock -> c
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
androidx.core.content.res.ResourcesCompat$Api21Impl -> androidx.core.content.res.a$a:
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme):0:0 -> b
androidx.core.graphics.Insets -> androidx.core.graphics.e:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    androidx.core.graphics.Insets NONE -> e
    1:1:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;Landroidx/core/graphics/e;)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets of(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets of(android.graphics.Rect):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Insets;)Landroidx/core/graphics/e;"}
    1:1:android.graphics.Insets toPlatformInsets():0:0 -> e
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$0.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline1 -> androidx.core.graphics.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$1.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline2 -> androidx.core.graphics.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$2.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline3 -> androidx.core.graphics.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$3.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.e$a:
    1:1:android.graphics.Insets of(int,int,int,int):0:0 -> a
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    1:1:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean):0:0 -> a
    1:1:int getResId():0:0 -> b
    1:1:java.lang.String getResPackage():0:0 -> c
    1:1:android.net.Uri getUri():0:0 -> d
    1:1:java.io.InputStream getUriInputStream(android.content.Context):0:0 -> e
    1:1:void onPostParceling():0:0 -> f
    1:1:void onPreParceling(boolean):0:0 -> g
    1:1:java.lang.String typeToString(int):0:0 -> h
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$a:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> c
    1:1:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context):0:0 -> d
    1:1:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context):0:0 -> e
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$b:
    1:1:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> a
    1:1:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap):0:0 -> b
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$c:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:int getType(java.lang.Object):0:0 -> c
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> d
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$d:
    1:1:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri):0:0 -> a
androidx.core.os.CancellationSignal -> g.a:
    boolean mIsCanceled -> a
    java.lang.Object mCancellationSignalObj -> b
    boolean mCancelInProgress -> c
    void <init>() -> <init>
    1:1:void cancel():0:0 -> a
androidx.core.os.ExecutorCompat -> g.b:
    1:1:java.util.concurrent.Executor create(android.os.Handler):0:0 -> a
androidx.core.os.ExecutorCompat$HandlerExecutor -> g.b$a:
    android.os.Handler mHandler -> e
    1:1:void <init>(android.os.Handler):0:0 -> <init>
    1:1:void execute(java.lang.Runnable):0:0 -> execute
androidx.core.util.Consumer -> h.a:
    void accept(java.lang.Object) -> accept
androidx.core.util.DebugUtils -> h.b:
    1:1:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder):0:0 -> a
androidx.core.util.ObjectsCompat -> h.c:
    1:1:boolean equals(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:int hash(java.lang.Object[]):0:0 -> b
    1:1:java.lang.Object requireNonNull(java.lang.Object,java.lang.String):0:0 -> c
androidx.core.util.Pools$Pool -> h.d:
    boolean release(java.lang.Object) -> a
    java.lang.Object acquire() -> b
androidx.core.util.Pools$SimplePool -> h.e:
    java.lang.Object[] pool -> a
    int poolSize -> b
    1:1:void <init>(int):0:0 -> <init>
    1:1:boolean release(java.lang.Object):0:0 -> a
    1:1:java.lang.Object acquire():0:0 -> b
    1:1:boolean isInPool(java.lang.Object):0:0 -> c
androidx.core.util.Pools$SynchronizedPool -> h.f:
    java.lang.Object lock -> c
    1:1:void <init>(int):0:0 -> <init>
    1:1:boolean release(java.lang.Object):0:0 -> a
    1:1:java.lang.Object acquire():0:0 -> b
androidx.core.util.Preconditions -> h.g:
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> a
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.b:
    android.view.DisplayCutout mDisplayCutout -> a
    1:1:int getSafeInsetBottom():0:0 -> a
    1:1:int getSafeInsetLeft():0:0 -> b
    1:1:int getSafeInsetRight():0:0 -> c
    1:1:int getSafeInsetTop():0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/DisplayCutout;)Landroidx/core/view/b;"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.DisplayCutoutCompat$$InternalSyntheticApiModelOutline$3$5995697582f938161ab89c8390e62ddcc8be8764d4286173706240625ed8d046$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.b$a:
    1:1:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List):0:0 -> a
    1:1:java.util.List getBoundingRects(android.view.DisplayCutout):0:0 -> b
    1:1:int getSafeInsetBottom(android.view.DisplayCutout):0:0 -> c
    1:1:int getSafeInsetLeft(android.view.DisplayCutout):0:0 -> d
    1:1:int getSafeInsetRight(android.view.DisplayCutout):0:0 -> e
    1:1:int getSafeInsetTop(android.view.DisplayCutout):0:0 -> f
androidx.core.view.MenuProvider -> androidx.core.view.c:
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.view.d:
androidx.core.view.OnReceiveContentViewBehavior -> androidx.core.view.e:
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.f:
    android.view.View mView -> a
    android.view.ViewTreeObserver mViewTreeObserver -> b
    java.lang.Runnable mRunnable -> c
    1:1:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ljava/lang/Runnable;)Landroidx/core/view/f;"}
    1:1:void removeListener():0:0 -> b
androidx.core.view.SoftwareKeyboardControllerCompat -> androidx.core.view.g:
    androidx.core.view.SoftwareKeyboardControllerCompat$Impl mImpl -> a
androidx.core.view.SoftwareKeyboardControllerCompat$Impl -> androidx.core.view.g$c:
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20 -> androidx.core.view.g$a:
    android.view.View mView -> a
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30 -> androidx.core.view.g$b:
    android.view.View mView -> b
androidx.core.view.ViewCompat -> androidx.core.view.i:
    int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS -> a
    androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR -> b
    androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager -> c
    1:1:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/l;)Landroidx/core/view/l;"}
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> b
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/l;"}
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> d
    1:1:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> e
    1:1:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/l;)Landroidx/core/view/l;"}
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i$c;"}
    1:1:void requestApplyInsets(android.view.View):0:0 -> h
    1:1:void setImportantForAccessibilityIfNeeded(android.view.View):0:0 -> i
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> j
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$2$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$2 -> androidx.core.view.i$a:
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> b
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> d
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.i$b:
    java.util.WeakHashMap mPanesToVisible -> a
    1:1:void checkPaneVisibility(java.util.Map$Entry):0:0 -> a
    1:1:void registerForLayoutCallback(android.view.View):0:0 -> b
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.i$c:
    int mTagKey -> a
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mContentChangeType -> d
    1:1:boolean frameworkAvailable():0:0 -> a
    java.lang.Object frameworkGet(android.view.View) -> b
    1:1:java.lang.Object get(android.view.View):0:0 -> c
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.i$d:
    1:1:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> a
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> b
    1:1:void requestApplyInsets(android.view.View):0:0 -> c
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.i$e:
    1:1:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/l;Landroid/graphics/Rect;)Landroidx/core/view/l;"}
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean):0:0 -> c
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float):0:0 -> d
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]):0:0 -> e
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]):0:0 -> f
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View):0:0 -> g
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View):0:0 -> h
    1:1:float getElevation(android.view.View):0:0 -> i
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/l;"}
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> k
    1:1:float getTranslationZ(android.view.View):0:0 -> l
    1:1:float getZ(android.view.View):0:0 -> m
    1:1:boolean hasNestedScrollingParent(android.view.View):0:0 -> n
    1:1:boolean isImportantForAccessibility(android.view.View):0:0 -> o
    1:1:boolean isNestedScrollingEnabled(android.view.View):0:0 -> p
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> q
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> r
    1:1:void setElevation(android.view.View,float):0:0 -> s
    1:1:void setNestedScrollingEnabled(android.view.View,boolean):0:0 -> t
    1:1:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/d;)V"}
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> v
    1:1:void setTranslationZ(android.view.View,float):0:0 -> w
    1:1:void setZ(android.view.View,float):0:0 -> x
    1:1:boolean startNestedScroll(android.view.View,int):0:0 -> y
    1:1:void stopNestedScroll(android.view.View):0:0 -> z
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.i$e$a:
    androidx.core.view.WindowInsetsCompat mLastInsets -> a
    android.view.View val$v -> b
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.i$f:
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/l;"}
    1:1:int getScrollIndicators(android.view.View):0:0 -> b
    1:1:void setScrollIndicators(android.view.View,int):0:0 -> c
    1:1:void setScrollIndicators(android.view.View,int,int):0:0 -> d
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.i$g:
    1:1:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/i$h;)V"}
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> b
    1:1:boolean isAccessibilityHeading(android.view.View):0:0 -> c
    1:1:boolean isScreenReaderFocusable(android.view.View):0:0 -> d
    1:1:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/i$h;)V"}
    1:1:java.lang.Object requireViewById(android.view.View,int):0:0 -> f
    1:1:void setAccessibilityHeading(android.view.View,boolean):0:0 -> g
    1:1:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence):0:0 -> h
    1:1:void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Li/a;)V"}
    1:1:void setScreenReaderFocusable(android.view.View,boolean):0:0 -> j
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$3$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i$h;)V"}
    1:1:boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$3$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent):0:0 -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.view.i$h:
androidx.core.view.ViewGroupCompat -> androidx.core.view.k:
    1:1:boolean isTransitionGroup(android.view.ViewGroup):0:0 -> a
androidx.core.view.ViewGroupCompat$Api21Impl -> androidx.core.view.k$a:
    1:1:int getNestedScrollAxes(android.view.ViewGroup):0:0 -> a
    1:1:boolean isTransitionGroup(android.view.ViewGroup):0:0 -> b
    1:1:void setTransitionGroup(android.view.ViewGroup,boolean):0:0 -> c
androidx.core.view.WindowInsetsCompat -> androidx.core.view.l:
    androidx.core.view.WindowInsetsCompat$Impl mImpl -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    1:1:void <init>(android.view.WindowInsets):0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> h
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:android.view.WindowInsets toWindowInsets():0:0 -> m
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;)Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;Landroid/view/View;)Landroidx/core/view/l;"}
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.l$a:
    java.lang.reflect.Field sViewAttachInfoField -> a
    java.lang.reflect.Field sStableInsets -> b
    java.lang.reflect.Field sContentInsets -> c
    boolean sReflectionSucceeded -> d
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/l;"}
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.l$b:
    androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl -> a
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)Landroidx/core/view/l$b;"}
    1:1:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)Landroidx/core/view/l$b;"}
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.l$f:
    androidx.core.view.WindowInsetsCompat mInsets -> a
    androidx.core.graphics.Insets[] mInsetsTypeMask -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:void applyInsetTypes():0:0 -> a
    androidx.core.view.WindowInsetsCompat build() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    void setStableInsets(androidx.core.graphics.Insets) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    void setSystemWindowInsets(androidx.core.graphics.Insets) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.l$c:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets mStableInsets -> d
    java.lang.reflect.Field sConsumedField -> e
    boolean sConsumedFieldFetched -> f
    java.lang.reflect.Constructor sConstructor -> g
    boolean sConstructorFetched -> h
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:android.view.WindowInsets createWindowInsetsInstance():0:0 -> h
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.l$d:
    android.view.WindowInsets$Builder mPlatBuilder -> c
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$59943e04c37930a0531d4f6494ed649568ab127f92ede377b1f504d2dcd54863$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$9d187abb3bbc9745a880878a21bef611d92809b2198c7b753440a50ba682397e$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$a7bac0df715b28c98a7dcfbd576701be30c0b9593556f6a2c1e40d1cb3582ae7$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$e2db7d8c486f2bd0b97fa630bde348b860e908278df8e0203f613641cfeefcc4$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$e9cf16e04656d3d7361528f4e1263ec758c19a703cd1553ad658eb1456381f1b$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$ee8cb0ef857f0d92636e84006869a5dab776eec7bf08e3331dcf284032d49109$0.m(android.view.WindowInsets$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$9$a204b8eefc41564daf6595e28b0232288c13e496630a36581a3f2c9667b5b6be$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.l$e:
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.l$l:
    androidx.core.view.WindowInsetsCompat mHost -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> m
    1:1:boolean isRound():0:0 -> n
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.l$g:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets[] mOverriddenInsets -> d
    androidx.core.graphics.Insets mSystemWindowInsets -> e
    androidx.core.view.WindowInsetsCompat mRootWindowInsets -> f
    androidx.core.graphics.Insets mRootViewVisibleInsets -> g
    boolean sVisibleRectReflectionFetched -> h
    java.lang.reflect.Method sGetViewRootImplMethod -> i
    java.lang.Class sAttachInfoClass -> j
    java.lang.reflect.Field sVisibleInsetsField -> k
    java.lang.reflect.Field sAttachInfoField -> l
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroidx/core/view/l$g;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isRound():0:0 -> n
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;)V"}
    1:1:androidx.core.graphics.Insets getInsets(int,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getInsetsForType(int,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getRootStableInsets():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/graphics/e;"}
    1:1:void loadReflectionField():0:0 -> w
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.l$h:
    androidx.core.graphics.Insets mStableInsets -> m
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroidx/core/view/l$h;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> m
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.l$i:
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroidx/core/view/l$i;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/l;"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$2$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$2$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.l$j:
    androidx.core.graphics.Insets mSystemGestureInsets -> n
    androidx.core.graphics.Insets mMandatorySystemGestureInsets -> o
    androidx.core.graphics.Insets mTappableElementInsets -> p
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroidx/core/view/l$j;)V"}
    1:1:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$463f5d2e905bee7a94c5e1e784176828b7f74fb1bd3f21ce4d1229a6ccfdd624$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$8f53c81c8f092140ac3e804e5c1bbe674a9a15bae1dde5747b904aef74c08e69$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$a095b61c286ceceac8def73d5e6718b1c88d3a7c271856e1785f04ff68e4f101$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.l$k:
    androidx.core.view.WindowInsetsCompat CONSUMED -> q
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/l;Landroidx/core/view/l$k;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$2$7c95e3cf87277cc9e90a5ee20212fa74552db1fed9bbd019afd18ee3ae455fac$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$2$f14b93863108dc0e407f09f9bde286f72e692d6f9a2448abe9587c9d544bc2bf$0.m(android.view.WindowInsets,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.l$m:
    1:1:int captionBar():0:0 -> a
    1:1:int displayCutout():0:0 -> b
    1:1:int ime():0:0 -> c
    1:1:int indexOf(int):0:0 -> d
    1:1:int mandatorySystemGestures():0:0 -> e
    1:1:int navigationBars():0:0 -> f
    1:1:int statusBars():0:0 -> g
    1:1:int systemGestures():0:0 -> h
    1:1:int tappableElement():0:0 -> i
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.l$n:
    1:1:int toPlatformType(int):0:0 -> a
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$2.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$4.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$5.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$6.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$7.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.i0:
    androidx.core.view.WindowInsetsControllerCompat$Impl mImpl -> a
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.i0$e:
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.i0$a:
    android.view.Window mWindow -> a
    androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat -> b
    1:1:void setSystemUiFlag(int):0:0 -> c
    1:1:void setWindowFlag(int):0:0 -> d
    1:1:void unsetSystemUiFlag(int):0:0 -> e
    1:1:void unsetWindowFlag(int):0:0 -> f
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.i0$b:
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.i0$c:
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.i0$d:
    androidx.core.view.WindowInsetsControllerCompat mCompatController -> a
    android.view.WindowInsetsController mInsetsController -> b
    androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat -> c
    androidx.collection.SimpleArrayMap mListeners -> d
    android.view.Window mWindow -> e
    1:1:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Window;Landroidx/core/view/i0;Landroidx/core/view/g;)V"}
    2:2:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsetsController;Landroidx/core/view/i0;Landroidx/core/view/g;)V"}
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
    1:1:void setSystemUiFlag(int):0:0 -> c
    1:1:void unsetSystemUiFlag(int):0:0 -> d
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsController androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$2$2c36919335bf4dcdedc394bc02623914235fa7fa3145ee8adfaceb2f1be0ab75$0.m(android.view.Window):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$2$d6fb3db9c12ac2c8a355cda7e3de6180a104013a10776c246d439dbb950c3f8b$0.m(android.view.WindowInsetsController,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.autofill.AutofillIdCompat -> i.a:
androidx.core.view.inputmethod.EditorInfoCompat -> j.b:
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline0 -> j.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.inputmethod.EditorInfoCompat$$InternalSyntheticApiModelOutline$1$146b49169c1e54fa61ed4a40cd4c1de6db19541b4186361dd99f2554fe43f4a5$0.m(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.exifinterface.media.ExifInterface -> androidx.exifinterface.media.a:
    byte[] JPEG_SIGNATURE -> A
    byte[] HEIF_TYPE_FTYP -> B
    byte[] HEIF_BRAND_MIF1 -> C
    byte[] HEIF_BRAND_HEIC -> D
    byte[] ORF_MAKER_NOTE_HEADER_1 -> E
    byte[] ORF_MAKER_NOTE_HEADER_2 -> F
    byte[] PNG_SIGNATURE -> G
    byte[] PNG_CHUNK_TYPE_EXIF -> H
    byte[] PNG_CHUNK_TYPE_IHDR -> I
    byte[] PNG_CHUNK_TYPE_IEND -> J
    byte[] WEBP_SIGNATURE_1 -> K
    byte[] WEBP_SIGNATURE_2 -> L
    byte[] WEBP_CHUNK_TYPE_EXIF -> M
    byte[] WEBP_VP8_SIGNATURE -> N
    byte[] WEBP_CHUNK_TYPE_VP8X -> O
    byte[] WEBP_CHUNK_TYPE_VP8L -> P
    byte[] WEBP_CHUNK_TYPE_VP8 -> Q
    byte[] WEBP_CHUNK_TYPE_ANIM -> R
    byte[] WEBP_CHUNK_TYPE_ANMF -> S
    java.text.SimpleDateFormat sFormatterPrimary -> T
    java.text.SimpleDateFormat sFormatterSecondary -> U
    java.lang.String[] IFD_FORMAT_NAMES -> V
    int[] IFD_FORMAT_BYTES_PER_FORMAT -> W
    byte[] EXIF_ASCII_PREFIX -> X
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS -> Y
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS -> Z
    java.lang.String mFilename -> a
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS -> a0
    java.io.FileDescriptor mSeekableFileDescriptor -> b
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS -> b0
    android.content.res.AssetManager$AssetInputStream mAssetInputStream -> c
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS -> c0
    int mMimeType -> d
    androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE -> d0
    boolean mIsExifDataOnly -> e
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS -> e0
    java.util.HashMap[] mAttributes -> f
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS -> f0
    java.util.Set mAttributesOffsets -> g
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS -> g0
    java.nio.ByteOrder mExifByteOrder -> h
    androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS -> h0
    boolean mHasThumbnail -> i
    androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS -> i0
    boolean mHasThumbnailStrips -> j
    androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS -> j0
    boolean mAreThumbnailStripsConsecutive -> k
    java.util.HashMap[] sExifTagMapsForReading -> k0
    int mThumbnailOffset -> l
    java.util.HashMap[] sExifTagMapsForWriting -> l0
    int mThumbnailLength -> m
    java.util.HashSet sTagSetForCompatibility -> m0
    byte[] mThumbnailBytes -> n
    java.util.HashMap sExifPointerTagMap -> n0
    int mThumbnailCompression -> o
    java.nio.charset.Charset ASCII -> o0
    int mOffsetToExifData -> p
    byte[] IDENTIFIER_EXIF_APP1 -> p0
    int mOrfMakerNoteOffset -> q
    byte[] IDENTIFIER_XMP_APP1 -> q0
    int mOrfThumbnailOffset -> r
    java.util.regex.Pattern NON_ZERO_TIME_PATTERN -> r0
    int mOrfThumbnailLength -> s
    java.util.regex.Pattern GPS_TIMESTAMP_PATTERN -> s0
    boolean mXmpIsFromSeparateMarker -> t
    java.util.regex.Pattern DATETIME_PRIMARY_FORMAT_PATTERN -> t0
    boolean DEBUG -> u
    java.util.regex.Pattern DATETIME_SECONDARY_FORMAT_PATTERN -> u0
    java.util.List ROTATION_ORDER -> v
    java.util.List FLIPPED_ROTATION_ORDER -> w
    int[] BITS_PER_SAMPLE_RGB -> x
    int[] BITS_PER_SAMPLE_GREYSCALE_1 -> y
    int[] BITS_PER_SAMPLE_GREYSCALE_2 -> z
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    2:2:void <init>(java.io.InputStream,int):0:0 -> <init>
    3:3:void <init>(java.lang.String):0:0 -> <init>
    1:1:boolean isRw2Format(byte[]):0:0 -> A
    1:1:boolean isSeekableFD(java.io.FileDescriptor):0:0 -> B
    1:1:boolean isSupportedDataType(java.util.HashMap):0:0 -> C
    1:1:boolean isThumbnail(java.util.HashMap):0:0 -> D
    1:1:boolean isWebpFormat(byte[]):0:0 -> E
    1:1:void loadAttributes(java.io.InputStream):0:0 -> F
    1:1:void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void printAttributes():0:0 -> H
    1:1:java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)Ljava/nio/ByteOrder;"}
    1:1:void readExifSegment(byte[],int):0:0 -> J
    1:1:void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;I)V"}
    1:1:void replaceInvalidTags(int,java.lang.String,java.lang.String):0:0 -> L
    1:1:void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;I)V"}
    1:1:void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:boolean shouldSupportSeek(int):0:0 -> O
    1:1:void swapBasedOnImageSize(int,int):0:0 -> P
    1:1:void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;I)V"}
    1:1:void validateImages():0:0 -> R
    1:1:void addDefaultValuesForCompatibility():0:0 -> a
    1:1:double convertRationalLatLonToDouble(java.lang.String,java.lang.String):0:0 -> b
    1:1:java.lang.String getAttribute(java.lang.String):0:0 -> c
    1:1:int getAttributeInt(java.lang.String,int):0:0 -> d
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/exifinterface/media/a$c;"}
    1:1:void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;II)V"}
    1:1:double[] getLatLong():0:0 -> h
    1:1:int getMimeType(java.io.BufferedInputStream):0:0 -> i
    1:1:void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:int getRotationDegrees():0:0 -> n
    1:1:void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;Ljava/util/HashMap;)V"}
    1:1:void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;Ljava/util/HashMap;)V"}
    1:1:void initForFilename(java.lang.String):0:0 -> t
    1:1:boolean isExifDataOnly(java.io.BufferedInputStream):0:0 -> u
    1:1:boolean isHeifFormat(byte[]):0:0 -> v
    1:1:boolean isJpegFormat(byte[]):0:0 -> w
    1:1:boolean isOrfFormat(byte[]):0:0 -> x
    1:1:boolean isPngFormat(byte[]):0:0 -> y
    1:1:boolean isRafFormat(byte[]):0:0 -> z
androidx.exifinterface.media.ExifInterface$1 -> androidx.exifinterface.media.a$a:
    long mPosition -> e
    androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in -> f
    androidx.exifinterface.media.ExifInterface this$0 -> g
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream -> androidx.exifinterface.media.a$b:
    java.io.DataInputStream mDataInputStream -> e
    int mPosition -> f
    java.nio.ByteOrder mByteOrder -> g
    byte[] mSkipBuffer -> h
    int mLength -> i
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    2:2:void <init>(java.io.InputStream,java.nio.ByteOrder):0:0 -> <init>
    3:3:void <init>(byte[]):0:0 -> <init>
    1:1:int length():0:0 -> a
    1:1:int position():0:0 -> b
    1:1:long readUnsignedInt():0:0 -> c
    1:1:void setByteOrder(java.nio.ByteOrder):0:0 -> d
    1:1:void skipFully(int):0:0 -> e
    1:1:int read():0:0 -> read
    2:2:int read(byte[],int,int):0:0 -> read
    1:1:void readFully(byte[]):0:0 -> readFully
    2:2:void readFully(byte[],int,int):0:0 -> readFully
androidx.exifinterface.media.ExifInterface$ExifAttribute -> androidx.exifinterface.media.a$c:
    int format -> a
    int numberOfComponents -> b
    long bytesOffset -> c
    byte[] bytes -> d
    1:1:void <init>(int,int,long,byte[]):0:0 -> <init>
    2:2:void <init>(int,int,byte[]):0:0 -> <init>
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([JLjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$e;Ljava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/exifinterface/media/a$e;Ljava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([ILjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:double getDoubleValue(java.nio.ByteOrder):0:0 -> h
    1:1:int getIntValue(java.nio.ByteOrder):0:0 -> i
    1:1:java.lang.String getStringValue(java.nio.ByteOrder):0:0 -> j
    1:1:java.lang.Object getValue(java.nio.ByteOrder):0:0 -> k
androidx.exifinterface.media.ExifInterface$ExifTag -> androidx.exifinterface.media.a$d:
    int number -> a
    java.lang.String name -> b
    int primaryFormat -> c
    int secondaryFormat -> d
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int,int,int):0:0 -> <init>
    1:1:boolean isFormatCompatible(int):0:0 -> a
androidx.exifinterface.media.ExifInterface$Rational -> androidx.exifinterface.media.a$e:
    long numerator -> a
    long denominator -> b
    1:1:double calculate():0:0 -> a
androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream -> androidx.exifinterface.media.a$f:
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    2:2:void <init>(byte[]):0:0 -> <init>
    1:1:void seek(long):0:0 -> f
androidx.exifinterface.media.ExifInterfaceUtils -> androidx.exifinterface.media.b:
    1:1:void closeQuietly(java.io.Closeable):0:0 -> a
    1:1:long[] convertToLongArray(java.lang.Object):0:0 -> b
    1:1:boolean startsWith(byte[],byte[]):0:0 -> c
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl -> androidx.exifinterface.media.b$a:
    1:1:void close(java.io.FileDescriptor):0:0 -> a
    1:1:java.io.FileDescriptor dup(java.io.FileDescriptor):0:0 -> b
    1:1:long lseek(java.io.FileDescriptor,long,int):0:0 -> c
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl -> androidx.exifinterface.media.b$b:
    1:1:void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource):0:0 -> a
androidx.fragment.R$animator -> k.a:
    int fragment_close_enter -> a
    int fragment_close_exit -> b
    int fragment_fade_enter -> c
    int fragment_fade_exit -> d
    int fragment_open_enter -> e
    int fragment_open_exit -> f
androidx.fragment.R$id -> k.b:
    int fragment_container_view_tag -> a
    int special_effects_controller_view_tag -> b
    int visible_removing_fragment_view_tag -> c
androidx.fragment.R$styleable -> k.c:
    int[] Fragment -> a
    int Fragment_android_name -> b
    int Fragment_android_id -> c
    int Fragment_android_tag -> d
    int[] FragmentContainerView -> e
    int FragmentContainerView_android_name -> f
    int FragmentContainerView_android_tag -> g
    1:1:void <clinit>():0:0 -> <clinit>
androidx.fragment.app.BackStackRecord -> l.a:
    androidx.fragment.app.FragmentManager mManager -> t
    boolean mCommitted -> u
    int mIndex -> v
    boolean mBeingSaved -> w
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:boolean generateOps(java.util.ArrayList,java.util.ArrayList):0:0 -> a
    1:1:void commitNowAllowingStateLoss():0:0 -> f
    1:1:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl/p;Ljava/lang/String;I)V"}
    1:1:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/k0;"}
    1:1:void bumpBackStackNesting(int):0:0 -> k
    1:1:void dump(java.lang.String,java.io.PrintWriter,boolean):0:0 -> l
    1:1:void executeOps():0:0 -> m
    1:1:void executePopOps():0:0 -> n
    1:1:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ll/p;)Ll/p;"}
    1:1:void runOnCommitRunnables():0:0 -> p
    1:1:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ll/p;)Ll/p;"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.fragment.app.BackStackRecordState -> l.b:
    int[] mOps -> a
    java.util.ArrayList mFragmentWhos -> b
    int[] mOldMaxLifecycleStates -> c
    int[] mCurrentMaxLifecycleStates -> d
    int mTransition -> e
    java.lang.String mName -> f
    int mIndex -> g
    int mBreadCrumbTitleRes -> h
    java.lang.CharSequence mBreadCrumbTitleText -> i
    int mBreadCrumbShortTitleRes -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> k
    java.util.ArrayList mSharedElementSourceNames -> l
    java.util.ArrayList mSharedElementTargetNames -> m
    boolean mReorderingAllowed -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.BackStackRecord):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    1:1:void fillInBackStackRecord(androidx.fragment.app.BackStackRecord):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    1:1:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)Ll/a;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.fragment.app.BackStackRecordState$1 -> l.b$a:
    void <init>() -> <init>
    1:1:androidx.fragment.app.BackStackRecordState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ll/b;"}
    1:1:androidx.fragment.app.BackStackRecordState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ll/b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.fragment.app.BackStackState -> l.c:
    java.util.List mFragments -> a
    java.util.List mTransactions -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.fragment.app.BackStackState$1 -> l.c$a:
    void <init>() -> <init>
    1:1:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ll/c;"}
    1:1:androidx.fragment.app.BackStackState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ll/c;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> l.g:
    1:1:void <init>(android.view.ViewGroup):0:0 -> <init>
    1:1:void collectAnimEffects(java.util.List):0:0 -> A
    1:1:void collectEffects$lambda$2(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g;Ll/s0$d;)V"}
    1:1:void createTransitionEffect(java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;ZLl/s0$d;Ll/s0$d;)V"}
    1:1:void findNamedViews(java.util.Map,android.view.View):0:0 -> D
    1:1:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/a;Ljava/util/Collection;)V"}
    1:1:void syncAnimations(java.util.List):0:0 -> F
    1:1:void collectEffects(java.util.List,boolean):0:0 -> d
    1:1:void $r8$lambda$5VwLkTlY0z0PAQdqu55uskWPV9Y(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g;Ll/s0$d;)V"}
androidx.fragment.app.DefaultSpecialEffectsController$$ExternalSyntheticLambda1 -> l.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.DefaultSpecialEffectsController androidx.fragment.app.DefaultSpecialEffectsController$$InternalSyntheticLambda$3$8c65947accad20bdf17f6e8851f33d5c84de4d3dd1578b9d5c81fb9fecd5a59d$0.f$0 -> e
    androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$$InternalSyntheticLambda$3$8c65947accad20bdf17f6e8851f33d5c84de4d3dd1578b9d5c81fb9fecd5a59d$0.f$1 -> f
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$$InternalSyntheticLambda$3$8c65947accad20bdf17f6e8851f33d5c84de4d3dd1578b9d5c81fb9fecd5a59d$0.<init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g;Ll/s0$d;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$$InternalSyntheticLambda$3$8c65947accad20bdf17f6e8851f33d5c84de4d3dd1578b9d5c81fb9fecd5a59d$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$$ExternalSyntheticThrowCCEIfNotNull0 -> l.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$$InternalSyntheticThrowCCEIfNotNull$9$50a8eafc77c8fa848156ab204795e95af0dcc69218a88b48473b0eb16b023900$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect -> l.g$a:
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo animationInfo -> d
    1:1:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$b;)V"}
    1:1:void onCancel(android.view.ViewGroup):0:0 -> c
    1:1:void onCommit(android.view.ViewGroup):0:0 -> d
    1:1:androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo getAnimationInfo():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/g$b;"}
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1 -> l.g$a$a:
    androidx.fragment.app.SpecialEffectsController$Operation $operation -> a
    android.view.ViewGroup $container -> b
    android.view.View $viewToAnimate -> c
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect this$0 -> d
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Landroid/view/ViewGroup;Landroid/view/View;Ll/g$a;)V"}
    1:1:void $r8$lambda$C0WAYd8PEEB82kmFEBdngw5o-nM(android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Landroid/view/View;Ll/g$a;)V"}
    1:1:void onAnimationEnd$lambda$0(android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Landroid/view/View;Ll/g$a;)V"}
    1:1:void onAnimationEnd(android.view.animation.Animation):0:0 -> onAnimationEnd
    1:1:void onAnimationRepeat(android.view.animation.Animation):0:0 -> onAnimationRepeat
    1:1:void onAnimationStart(android.view.animation.Animation):0:0 -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1$$ExternalSyntheticLambda0 -> l.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.view.ViewGroup androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1$$InternalSyntheticLambda$4$f9e72876b85222df5b17664951e026dde7aab6350eb98b9b09b5e698abdd18f5$0.f$0 -> e
    android.view.View androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1$$InternalSyntheticLambda$4$f9e72876b85222df5b17664951e026dde7aab6350eb98b9b09b5e698abdd18f5$0.f$1 -> f
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1$$InternalSyntheticLambda$4$f9e72876b85222df5b17664951e026dde7aab6350eb98b9b09b5e698abdd18f5$0.f$2 -> g
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1$$InternalSyntheticLambda$4$f9e72876b85222df5b17664951e026dde7aab6350eb98b9b09b5e698abdd18f5$0.<init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Landroid/view/View;Ll/g$a;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$AnimationEffect$onCommit$1$$InternalSyntheticLambda$4$f9e72876b85222df5b17664951e026dde7aab6350eb98b9b09b5e698abdd18f5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> l.g$b:
    boolean isPop -> b
    boolean isAnimLoaded -> c
    androidx.fragment.app.FragmentAnim$AnimationOrAnimator animation -> d
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Z)V"}
    1:1:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll/r$a;"}
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect -> l.g$c:
    androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo animatorInfo -> d
    android.animation.AnimatorSet animator -> e
    1:1:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$b;)V"}
    1:1:boolean isSeekingSupported():0:0 -> b
    1:1:void onCancel(android.view.ViewGroup):0:0 -> c
    1:1:void onCommit(android.view.ViewGroup):0:0 -> d
    1:1:void onStart(android.view.ViewGroup):0:0 -> e
    1:1:androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo getAnimatorInfo():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/g$b;"}
androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect$onStart$1 -> l.g$c$a:
    android.view.ViewGroup $container -> a
    android.view.View $viewToAnimate -> b
    boolean $isHideOperation -> c
    androidx.fragment.app.SpecialEffectsController$Operation $operation -> d
    androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect this$0 -> e
    1:1:void <init>(android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimatorEffect):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Landroid/view/View;ZLl/s0$d;Ll/g$c;)V"}
    1:1:void onAnimationEnd(android.animation.Animator):0:0 -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl -> l.g$d:
    androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void reverse(android.animation.AnimatorSet):0:0 -> a
    1:1:void setCurrentPlayTime(android.animation.AnimatorSet,long):0:0 -> b
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> l.g$e:
    androidx.fragment.app.SpecialEffectsController$Operation operation -> a
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;)V"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation getOperation():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s0$d;"}
    1:1:boolean isVisibilityUnchanged():0:0 -> b
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect -> l.g$f:
    java.util.List transitionInfos -> d
    androidx.fragment.app.SpecialEffectsController$Operation firstOut -> e
    androidx.fragment.app.SpecialEffectsController$Operation lastIn -> f
    androidx.fragment.app.FragmentTransitionImpl transitionImpl -> g
    java.lang.Object sharedElementTransition -> h
    java.util.ArrayList sharedElementFirstOutViews -> i
    java.util.ArrayList sharedElementLastInViews -> j
    androidx.collection.ArrayMap sharedElementNameMapping -> k
    java.util.ArrayList enteringNames -> l
    java.util.ArrayList exitingNames -> m
    androidx.collection.ArrayMap firstOutViews -> n
    androidx.collection.ArrayMap lastInViews -> o
    boolean isPop -> p
    androidx.core.os.CancellationSignal transitionSignal -> q
    java.lang.Object controller -> r
    1:1:void <init>(java.util.List,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.util.ArrayList,java.util.ArrayList,androidx.collection.ArrayMap,java.util.ArrayList,java.util.ArrayList,androidx.collection.ArrayMap,androidx.collection.ArrayMap,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ll/s0$d;Ll/s0$d;Ll/n0;Ljava/lang/Object;Ljava/util/ArrayList;Ljava/util/ArrayList;Le/a;Ljava/util/ArrayList;Ljava/util/ArrayList;Le/a;Le/a;Z)V"}
    1:1:void runTransition(java.util.ArrayList,android.view.ViewGroup,kotlin.jvm.functions.Function0):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Landroid/view/ViewGroup;Lr2/a;)V"}
    1:1:void setController(java.lang.Object):0:0 -> B
    1:1:boolean isSeekingSupported():0:0 -> b
    1:1:void onCancel(android.view.ViewGroup):0:0 -> c
    1:1:void onCommit(android.view.ViewGroup):0:0 -> d
    1:1:void onStart(android.view.ViewGroup):0:0 -> e
    1:1:void $r8$lambda$5JH3akoMh4lp1BB1ML7cSWQKQ9o(kotlin.jvm.internal.Ref$ObjectRef):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;)V"}
    1:1:void $r8$lambda$7dr4SnSFw_nnnvE_QPKv5F9_GyM(androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/n0;Landroid/view/View;Landroid/graphics/Rect;)V"}
    1:1:void $r8$lambda$_nud7isQej85MWlyOAGH5HdRErk(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/g$f;)V"}
    1:1:void $r8$lambda$_tWaEP-frC-0JIcZyfgI0ddps1o(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/s0$d;Ll/g$f;)V"}
    1:1:void $r8$lambda$nD9DelTbOXz2Ck61CpEweGEaV7U(java.util.ArrayList):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$pR_TsymCpCzgOpYUquwCqhbu5o0(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/g$f;)V"}
    1:1:void captureTransitioningViews(java.util.ArrayList,android.view.View):0:0 -> m
    1:1:kotlin.Pair createMergedTransition(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Ll/s0$d;Ll/s0$d;)Lg2/j;"}
    1:1:void createMergedTransition$lambda$12(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/s0$d;Ll/g$f;)V"}
    1:1:void createMergedTransition$lambda$13(androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/n0;Landroid/view/View;Landroid/graphics/Rect;)V"}
    1:1:void createMergedTransition$lambda$14(java.util.ArrayList):0:0 -> q
    1:1:java.lang.Object getController():0:0 -> r
    1:1:androidx.fragment.app.SpecialEffectsController$Operation getFirstOut():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s0$d;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation getLastIn():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s0$d;"}
    1:1:androidx.fragment.app.FragmentTransitionImpl getTransitionImpl():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/n0;"}
    1:1:java.util.List getTransitionInfos():0:0 -> v
    1:1:boolean getTransitioning():0:0 -> w
    1:1:void onCommit$lambda$11$lambda$10(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/g$f;)V"}
    1:1:void onStart$lambda$6$lambda$4(kotlin.jvm.internal.Ref$ObjectRef):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;)V"}
    1:1:void onStart$lambda$6$lambda$5(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/g$f;)V"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$ExternalSyntheticLambda0 -> l.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$636500a21945b2e944d66ea34161d227e3de529399e3f5b12da9eb3d3aabc238$0.f$0 -> e
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$636500a21945b2e944d66ea34161d227e3de529399e3f5b12da9eb3d3aabc238$0.f$1 -> f
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$636500a21945b2e944d66ea34161d227e3de529399e3f5b12da9eb3d3aabc238$0.<init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/g$f;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$636500a21945b2e944d66ea34161d227e3de529399e3f5b12da9eb3d3aabc238$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$ExternalSyntheticLambda1 -> l.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.internal.Ref$ObjectRef androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$0.f$0 -> e
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$0.<init>(kotlin.jvm.internal.Ref$ObjectRef):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$ExternalSyntheticLambda2 -> l.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$1.f$0 -> e
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$1.f$1 -> f
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$1.<init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/g$f;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$4$76512eb1ddcf75df7b4269aacfa9168719733957642acc90767456f04e71f944$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$ExternalSyntheticLambda3 -> l.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$0.f$0 -> e
    androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$0.f$1 -> f
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$0.f$2 -> g
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$0.<init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;Ll/s0$d;Ll/g$f;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$ExternalSyntheticLambda4 -> l.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentTransitionImpl androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$1.f$0 -> e
    android.view.View androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$1.f$1 -> f
    android.graphics.Rect androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$1.f$2 -> g
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$1.<init>(androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/n0;Landroid/view/View;Landroid/graphics/Rect;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$ExternalSyntheticLambda5 -> l.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.ArrayList androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$2.f$0 -> e
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$2.<init>(java.util.ArrayList):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$$InternalSyntheticLambda$5$a2faa9233c6408d221c6950c1dcdcbbb650615f60ea1ef33da193f8f73c415a9$2.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onCommit$4 -> l.g$f$a:
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect this$0 -> f
    android.view.ViewGroup $container -> g
    java.lang.Object $mergedTransition -> h
    1:1:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$f;Landroid/view/ViewGroup;Ljava/lang/Object;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4 -> l.g$f$b:
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect this$0 -> f
    android.view.ViewGroup $container -> g
    java.lang.Object $mergedTransition -> h
    kotlin.jvm.internal.Ref$ObjectRef $seekCancelLambda -> i
    1:1:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup,java.lang.Object,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$f;Landroid/view/ViewGroup;Ljava/lang/Object;Ls2/r;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2 -> l.g$f$b$a:
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect this$0 -> f
    android.view.ViewGroup $container -> g
    1:1:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$f;Landroid/view/ViewGroup;)V"}
    1:1:void $r8$lambda$5UDW9XzaDCF0sLUS8vtdx8jliJc(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$f;Landroid/view/ViewGroup;)V"}
    1:1:void invoke():0:0 -> b
    1:1:void invoke$lambda$1(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$f;Landroid/view/ViewGroup;)V"}
    1:1:java.lang.Object invoke():0:0 -> d
androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2$$ExternalSyntheticLambda0 -> l.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2$$InternalSyntheticLambda$5$b75d3bdc2b1696b231fee9b8fe54949edda6d5f4e98def4740266b61165e6261$0.f$0 -> e
    android.view.ViewGroup androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2$$InternalSyntheticLambda$5$b75d3bdc2b1696b231fee9b8fe54949edda6d5f4e98def4740266b61165e6261$0.f$1 -> f
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2$$InternalSyntheticLambda$5$b75d3bdc2b1696b231fee9b8fe54949edda6d5f4e98def4740266b61165e6261$0.<init>(androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect,android.view.ViewGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g$f;Landroid/view/ViewGroup;)V"}
    1:1:void androidx.fragment.app.DefaultSpecialEffectsController$TransitionEffect$onStart$4$2$$InternalSyntheticLambda$5$b75d3bdc2b1696b231fee9b8fe54949edda6d5f4e98def4740266b61165e6261$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> l.g$g:
    java.lang.Object transition -> b
    boolean isOverlapAllowed -> c
    java.lang.Object sharedElementTransition -> d
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;ZZ)V"}
    1:1:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/n0;"}
    1:1:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll/n0;"}
    1:1:java.lang.Object getSharedElementTransition():0:0 -> e
    1:1:java.lang.Object getTransition():0:0 -> f
    1:1:boolean hasSharedElementTransition():0:0 -> g
    1:1:boolean isOverlapAllowed():0:0 -> h
androidx.fragment.app.DefaultSpecialEffectsController$retainMatchingViews$1 -> l.g$h:
    java.util.Collection $names -> f
    1:1:void <init>(java.util.Collection):0:0 -> <init>
    1:1:java.lang.Boolean invoke(java.util.Map$Entry):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
androidx.fragment.app.Fragment -> l.p:
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetainInstanceChangedWhileDetached -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    android.view.ViewGroup mContainer -> G
    android.view.View mView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo -> K
    java.lang.Runnable mPostponedDurationRunnable -> L
    boolean mHiddenChanged -> M
    android.view.LayoutInflater mLayoutInflater -> N
    boolean mIsCreated -> O
    java.lang.String mPreviousWho -> P
    androidx.lifecycle.Lifecycle$State mMaxState -> Q
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> R
    androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner -> S
    androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData -> T
    androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory -> U
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> V
    int mContentLayoutId -> W
    java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode -> X
    java.util.ArrayList mOnPreAttachedListeners -> Y
    androidx.fragment.app.Fragment$OnPreAttachedListener mSavedStateAttachListener -> Z
    int mState -> a
    java.lang.Object USE_DEFAULT_TRANSITION -> a0
    android.os.Bundle mSavedFragmentState -> b
    android.util.SparseArray mSavedViewState -> c
    android.os.Bundle mSavedViewRegistryState -> d
    java.lang.String mWho -> e
    android.os.Bundle mArguments -> f
    androidx.fragment.app.Fragment mTarget -> g
    java.lang.String mTargetWho -> h
    int mTargetRequestCode -> i
    java.lang.Boolean mIsPrimaryNavigationFragment -> j
    boolean mAdded -> k
    boolean mRemoving -> l
    boolean mTransitioning -> m
    boolean mBeingSaved -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    boolean mPerformedCreateView -> r
    int mBackStackNesting -> s
    androidx.fragment.app.FragmentManager mFragmentManager -> t
    androidx.fragment.app.FragmentManager mChildFragmentManager -> u
    androidx.fragment.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int getPopEnterAnim():0:0 -> A
    1:1:void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p$f;)V"}
    1:1:int getPopExitAnim():0:0 -> B
    1:1:androidx.fragment.app.FragmentActivity requireActivity():0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/q;"}
    1:1:float getPostOnViewCreatedAlpha():0:0 -> C
    1:1:android.content.Context requireContext():0:0 -> C0
    1:1:java.lang.Object getReenterTransition():0:0 -> D
    1:1:android.view.View requireView():0:0 -> D0
    1:1:android.content.res.Resources getResources():0:0 -> E
    1:1:void restoreChildFragmentState():0:0 -> E0
    1:1:java.lang.Object getReturnTransition():0:0 -> F
    1:1:void restoreViewState():0:0 -> F0
    1:1:java.lang.Object getSharedElementEnterTransition():0:0 -> G
    1:1:void restoreViewState(android.os.Bundle):0:0 -> G0
    1:1:java.lang.Object getSharedElementReturnTransition():0:0 -> H
    1:1:void setAnimations(int,int,int,int):0:0 -> H0
    1:1:java.util.ArrayList getSharedElementSourceNames():0:0 -> I
    1:1:void setFocusedView(android.view.View):0:0 -> I0
    1:1:java.util.ArrayList getSharedElementTargetNames():0:0 -> J
    1:1:void setNextTransition(int):0:0 -> J0
    1:1:android.view.View getView():0:0 -> K
    1:1:void setPopDirection(boolean):0:0 -> K0
    1:1:void initLifecycle():0:0 -> L
    1:1:void setPostOnViewCreatedAlpha(float):0:0 -> L0
    1:1:void initState():0:0 -> M
    1:1:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList):0:0 -> M0
    1:1:boolean isAdded():0:0 -> N
    1:1:void startPostponedEnterTransition():0:0 -> N0
    1:1:boolean isHidden():0:0 -> O
    1:1:boolean isInBackStack():0:0 -> P
    1:1:boolean isPostponed():0:0 -> Q
    1:1:void lambda$performCreateView$0():0:0 -> R
    1:1:void onActivityCreated(android.os.Bundle):0:0 -> S
    1:1:void onCreate(android.os.Bundle):0:0 -> T
    1:1:android.view.animation.Animation onCreateAnimation(int,boolean,int):0:0 -> U
    1:1:android.animation.Animator onCreateAnimator(int,boolean,int):0:0 -> V
    1:1:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> W
    1:1:void onDestroyView():0:0 -> X
    1:1:void onDetach():0:0 -> Y
    1:1:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0:0 -> Z
    1:1:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/a;"}
    1:1:void onHiddenChanged(boolean):0:0 -> a0
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h0;"}
    1:1:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0:0 -> b0
    1:1:void $r8$lambda$Cl7MxTaA6NVZ8I5KAGBxRTLl1sc(androidx.fragment.app.Fragment):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void onPause():0:0 -> c0
    1:1:androidx.fragment.app.FragmentContainer createFragmentContainer():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s;"}
    1:1:void onPrimaryNavigationFragmentChanged(boolean):0:0 -> d0
    1:1:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p$e;"}
    1:1:void onResume():0:0 -> e0
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.fragment.app.FragmentActivity getActivity():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/q;"}
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> f0
    1:1:boolean getAllowEnterTransitionOverlap():0:0 -> g
    1:1:void onStart():0:0 -> g0
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i;"}
    1:1:void onStop():0:0 -> h0
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean getAllowReturnTransitionOverlap():0:0 -> i
    1:1:void onViewCreated(android.view.View,android.os.Bundle):0:0 -> i0
    1:1:android.os.Bundle getArguments():0:0 -> j
    1:1:void onViewStateRestored(android.os.Bundle):0:0 -> j0
    1:1:androidx.fragment.app.FragmentManager getChildFragmentManager():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/c0;"}
    1:1:void performActivityCreated(android.os.Bundle):0:0 -> k0
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d;"}
    1:1:void performAttach():0:0 -> l0
    1:1:android.content.Context getContext():0:0 -> m
    1:1:void performConfigurationChanged(android.content.res.Configuration):0:0 -> m0
    1:1:int getEnterAnim():0:0 -> n
    1:1:void performCreate(android.os.Bundle):0:0 -> n0
    1:1:java.lang.Object getEnterTransition():0:0 -> o
    1:1:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> o0
    1:1:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0:0 -> onCreateContextMenu
    1:1:void onLowMemory():0:0 -> onLowMemory
    1:1:androidx.core.app.SharedElementCallback getEnterTransitionCallback():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/app/f;"}
    1:1:void performDestroyView():0:0 -> p0
    1:1:int getExitAnim():0:0 -> q
    1:1:void performDetach():0:0 -> q0
    1:1:java.lang.Object getExitTransition():0:0 -> r
    1:1:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0:0 -> r0
    1:1:androidx.core.app.SharedElementCallback getExitTransitionCallback():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/app/f;"}
    1:1:void performLowMemory():0:0 -> s0
    1:1:android.view.View getFocusedView():0:0 -> t
    1:1:void performPause():0:0 -> t0
    1:1:java.lang.String toString():0:0 -> toString
    1:1:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> u
    1:1:void performPrimaryNavigationFragmentChanged():0:0 -> u0
    1:1:int getMinimumMaxLifecycleState():0:0 -> v
    1:1:void performResume():0:0 -> v0
    1:1:int getNextTransition():0:0 -> w
    1:1:void performSaveInstanceState(android.os.Bundle):0:0 -> w0
    1:1:androidx.fragment.app.Fragment getParentFragment():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:void performStart():0:0 -> x0
    1:1:androidx.fragment.app.FragmentManager getParentFragmentManager():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/c0;"}
    1:1:void performStop():0:0 -> y0
    1:1:boolean getPopDirection():0:0 -> z
    1:1:void performViewCreated():0:0 -> z0
androidx.fragment.app.Fragment$$ExternalSyntheticLambda0 -> l.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.Fragment androidx.fragment.app.Fragment$$InternalSyntheticLambda$2$7fdd33585234279e5e76ef45ddb2073d035f859948f5cbd6c08a62b3f14fd989$0.f$0 -> e
    1:1:void androidx.fragment.app.Fragment$$InternalSyntheticLambda$2$7fdd33585234279e5e76ef45ddb2073d035f859948f5cbd6c08a62b3f14fd989$0.<init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void androidx.fragment.app.Fragment$$InternalSyntheticLambda$2$7fdd33585234279e5e76ef45ddb2073d035f859948f5cbd6c08a62b3f14fd989$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.Fragment$1 -> l.p$a:
    androidx.fragment.app.Fragment this$0 -> e
    1:1:void <init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void run():0:0 -> run
androidx.fragment.app.Fragment$2 -> l.p$b:
    androidx.fragment.app.Fragment this$0 -> a
    1:1:void <init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void onPreAttached():0:0 -> a
androidx.fragment.app.Fragment$5 -> l.p$c:
    androidx.fragment.app.Fragment this$0 -> a
    1:1:void <init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:android.view.View onFindViewById(int):0:0 -> a
    1:1:boolean onHasView():0:0 -> b
androidx.fragment.app.Fragment$6 -> l.p$d:
    androidx.fragment.app.Fragment this$0 -> a
    1:1:void <init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.fragment.app.Fragment$AnimationInfo -> l.p$e:
    boolean mIsPop -> a
    int mEnterAnim -> b
    int mExitAnim -> c
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    int mNextTransition -> f
    java.util.ArrayList mSharedElementSourceNames -> g
    java.util.ArrayList mSharedElementTargetNames -> h
    java.lang.Object mEnterTransition -> i
    java.lang.Object mReturnTransition -> j
    java.lang.Object mExitTransition -> k
    java.lang.Object mReenterTransition -> l
    java.lang.Object mSharedElementEnterTransition -> m
    java.lang.Object mSharedElementReturnTransition -> n
    java.lang.Boolean mAllowReturnTransitionOverlap -> o
    java.lang.Boolean mAllowEnterTransitionOverlap -> p
    float mPostOnViewCreatedAlpha -> q
    android.view.View mFocusedView -> r
    boolean mEnterTransitionPostponed -> s
    1:1:void <init>():0:0 -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> l.p$f:
    void <init>() -> <init>
    1:1:void <init>(androidx.fragment.app.Fragment$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p$a;)V"}
    void onPreAttached() -> a
androidx.fragment.app.FragmentActivity -> l.q:
androidx.fragment.app.FragmentAnim -> l.r:
    1:1:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;ZZ)I"}
    1:1:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll/p;ZZ)Ll/r$a;"}
    1:1:int toActivityTransitResId(android.content.Context,int):0:0 -> c
    1:1:int transitToAnimResourceId(android.content.Context,int,boolean):0:0 -> d
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> l.r$a:
    android.view.animation.Animation animation -> a
    android.animation.AnimatorSet animator -> b
    1:1:void <init>(android.animation.Animator):0:0 -> <init>
    2:2:void <init>(android.view.animation.Animation):0:0 -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> l.r$b:
    android.view.ViewGroup mParent -> e
    android.view.View mChild -> f
    boolean mEnded -> g
    boolean mTransitionEnded -> h
    boolean mAnimating -> i
    1:1:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View):0:0 -> <init>
    1:1:boolean getTransformation(long,android.view.animation.Transformation):0:0 -> getTransformation
    2:2:boolean getTransformation(long,android.view.animation.Transformation,float):0:0 -> getTransformation
    1:1:void run():0:0 -> run
androidx.fragment.app.FragmentContainer -> l.s:
    void <init>() -> <init>
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> b
androidx.fragment.app.FragmentContainerView -> l.t:
    java.util.List disappearingFragmentChildren -> a
    java.util.List transitioningFragmentViews -> b
    android.view.View$OnApplyWindowInsetsListener applyWindowInsetsListener -> c
    boolean drawDisappearingViewsFirst -> d
    1:1:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Ll/c0;)V"}
    1:1:void addDisappearingFragmentView(android.view.View):0:0 -> a
    1:1:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):0:0 -> addView
    1:1:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets):0:0 -> dispatchApplyWindowInsets
    1:1:void dispatchDraw(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:boolean drawChild(android.graphics.Canvas,android.view.View,long):0:0 -> drawChild
    1:1:void endViewTransition(android.view.View):0:0 -> endViewTransition
    1:1:androidx.fragment.app.Fragment getFragment():0:0 -> getFragment
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):0:0 -> onApplyWindowInsets
    1:1:void removeAllViewsInLayout():0:0 -> removeAllViewsInLayout
    1:1:void removeView(android.view.View):0:0 -> removeView
    1:1:void removeViewAt(int):0:0 -> removeViewAt
    1:1:void removeViewInLayout(android.view.View):0:0 -> removeViewInLayout
    1:1:void removeViews(int,int):0:0 -> removeViews
    1:1:void removeViewsInLayout(int,int):0:0 -> removeViewsInLayout
    1:1:void setDrawDisappearingViewsLast(boolean):0:0 -> setDrawDisappearingViewsLast
    1:1:void setLayoutTransition(android.animation.LayoutTransition):0:0 -> setLayoutTransition
    1:1:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener):0:0 -> setOnApplyWindowInsetsListener
    1:1:void startViewTransition(android.view.View):0:0 -> startViewTransition
androidx.fragment.app.FragmentContainerView$Api20Impl -> l.t$a:
    androidx.fragment.app.FragmentContainerView$Api20Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View$OnApplyWindowInsetsListener,android.view.View,android.view.WindowInsets):0:0 -> a
androidx.fragment.app.FragmentFactory -> l.u:
    androidx.collection.SimpleArrayMap sClassCacheMap -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Ljava/lang/String;)Ll/p;"}
    1:1:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String):0:0 -> b
    1:1:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> c
androidx.fragment.app.FragmentHostCallback -> l.v:
androidx.fragment.app.FragmentLayoutInflaterFactory -> l.w:
    androidx.fragment.app.FragmentManager mFragmentManager -> a
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    2:2:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> l.x:
    androidx.fragment.app.FragmentManager fragmentManager -> a
    java.util.concurrent.CopyOnWriteArrayList lifecycleCallbacks -> b
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/os/Bundle;Z)V"}
    1:1:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/os/Bundle;Z)V"}
    1:1:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/os/Bundle;Z)V"}
    1:1:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/os/Bundle;Z)V"}
    1:1:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/view/View;Landroid/os/Bundle;Z)V"}
    1:1:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
androidx.fragment.app.FragmentManager -> l.c0:
    androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory -> A
    androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory -> B
    java.util.ArrayDeque mLaunchedFragments -> C
    boolean mNeedMenuInvalidate -> D
    boolean mStateSaved -> E
    boolean mStopped -> F
    boolean mDestroyed -> G
    boolean mHavePendingDeferredStart -> H
    java.util.ArrayList mTmpRecords -> I
    java.util.ArrayList mTmpIsPop -> J
    java.util.ArrayList mTmpAddedFragments -> K
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> L
    androidx.fragment.app.strictmode.FragmentStrictMode$Policy mStrictModePolicy -> M
    java.lang.Runnable mExecCommit -> N
    boolean DEBUG -> O
    java.util.ArrayList mPendingActions -> a
    boolean mExecutingActions -> b
    androidx.fragment.app.FragmentStore mFragmentStore -> c
    java.util.ArrayList mBackStack -> d
    androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory -> e
    androidx.fragment.app.BackStackRecord mTransitioningOp -> f
    boolean mBackStarted -> g
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> h
    java.util.concurrent.atomic.AtomicInteger mBackStackIndex -> i
    java.util.Map mBackStackStates -> j
    java.util.Map mResults -> k
    java.util.Map mResultListeners -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher -> n
    java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners -> o
    androidx.core.util.Consumer mOnConfigurationChangedListener -> p
    androidx.core.util.Consumer mOnTrimMemoryListener -> q
    androidx.core.util.Consumer mOnMultiWindowModeChangedListener -> r
    androidx.core.util.Consumer mOnPictureInPictureModeChangedListener -> s
    androidx.core.view.MenuProvider mMenuProvider -> t
    int mCurState -> u
    androidx.fragment.app.FragmentContainer mContainer -> v
    androidx.fragment.app.Fragment mParent -> w
    androidx.fragment.app.Fragment mPrimaryNav -> x
    androidx.fragment.app.FragmentFactory mFragmentFactory -> y
    androidx.fragment.app.FragmentFactory mHostFragmentFactory -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void dispatchPrimaryNavigationFragmentChanged():0:0 -> A
    1:1:void removeFragment(androidx.fragment.app.Fragment):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void dispatchResume():0:0 -> B
    1:1:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList):0:0 -> B0
    1:1:void dispatchStart():0:0 -> C
    1:1:void reportBackStackChanged():0:0 -> C0
    1:1:void dispatchStateChange(int):0:0 -> D
    1:1:void restoreSaveStateInternal(android.os.Parcelable):0:0 -> D0
    1:1:void dispatchStop():0:0 -> E
    1:1:int reverseTransit(int):0:0 -> E0
    1:1:void dispatchViewCreated():0:0 -> F
    1:1:android.os.Bundle saveAllStateInternal():0:0 -> F0
    1:1:void doPendingDeferredStart():0:0 -> G
    1:1:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean):0:0 -> G0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void endAnimatingAwayFragments():0:0 -> H
    1:1:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State):0:0 -> H0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroidx/lifecycle/i$b;)V"}
    1:1:void ensureExecReady(boolean):0:0 -> I
    1:1:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:boolean execPendingActions(boolean):0:0 -> J
    1:1:void setVisibleRemovingFragment(androidx.fragment.app.Fragment):0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0$h;Z)V"}
    1:1:void showFragment(androidx.fragment.app.Fragment):0:0 -> K0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> L
    1:1:void startPendingDeferredFragments():0:0 -> L0
    1:1:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> M
    1:1:void updateOnBackPressedCallbackEnabled():0:0 -> M0
    1:1:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/p;"}
    1:1:androidx.fragment.app.Fragment findFragmentById(int):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/p;"}
    1:1:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/p;"}
    1:1:androidx.fragment.app.FragmentManager findFragmentManager(android.view.View):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ll/c0;"}
    1:1:androidx.fragment.app.Fragment findViewFragment(android.view.View):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ll/p;"}
    1:1:void forcePostponedTransactions():0:0 -> S
    1:1:java.util.Set fragmentsFromRecord(androidx.fragment.app.BackStackRecord):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)Ljava/util/Set;"}
    1:1:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> U
    1:1:int getBackStackEntryCount():0:0 -> V
    1:1:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/f0;"}
    1:1:androidx.fragment.app.FragmentContainer getContainer():0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s;"}
    1:1:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Landroid/view/ViewGroup;"}
    1:1:androidx.fragment.app.FragmentFactory getFragmentFactory():0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/u;"}
    1:1:void $r8$lambda$OSbytOFWiBhg-JuC-68xxqeOPrI(androidx.fragment.app.FragmentManager,java.lang.Integer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Ljava/lang/Integer;)V"}
    1:1:androidx.fragment.app.FragmentHostCallback getHost():0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/v;"}
    1:1:void $r8$lambda$RBeuZ6iM1FSdhmZNBJJQnbWnePM(androidx.fragment.app.FragmentManager,androidx.core.app.PictureInPictureModeChangedInfo):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Landroidx/core/app/e;)V"}
    1:1:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher():0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/x;"}
    1:1:void $r8$lambda$VJusB-xtSf6gkO7njmGWkIPixRc(androidx.fragment.app.FragmentManager,androidx.core.app.MultiWindowModeChangedInfo):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Landroidx/core/app/c;)V"}
    1:1:androidx.fragment.app.Fragment getParent():0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:void $r8$lambda$fsqPmeLyp8R2NG2vLmIMKnwX3q4(androidx.fragment.app.FragmentManager,android.content.res.Configuration):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Landroid/content/res/Configuration;)V"}
    1:1:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:void addBackStackState(androidx.fragment.app.BackStackRecord):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    1:1:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory():0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/t0;"}
    1:1:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/i0;"}
    1:1:androidx.fragment.app.strictmode.FragmentStrictMode$Policy getStrictModePolicy():0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/c$c;"}
    1:1:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/g0;)V"}
    1:1:androidx.fragment.app.Fragment getViewFragment(android.view.View):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ll/p;"}
    1:1:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/v;Ll/s;Ll/p;)V"}
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Landroidx/lifecycle/h0;"}
    1:1:void attachFragment(androidx.fragment.app.Fragment):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void hideFragment(androidx.fragment.app.Fragment):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:androidx.fragment.app.FragmentTransaction beginTransaction():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/k0;"}
    1:1:void invalidateMenuForFragment(androidx.fragment.app.Fragment):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:boolean checkForMenus():0:0 -> k
    1:1:boolean isDestroyed():0:0 -> k0
    1:1:void cleanupExec():0:0 -> l
    1:1:boolean isLoggingEnabled(int):0:0 -> l0
    1:1:void clearBackStackStateViewModels():0:0 -> m
    1:1:boolean isMenuAvailable(androidx.fragment.app.Fragment):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Z"}
    1:1:java.util.Set collectAllSpecialEffectsController():0:0 -> n
    1:1:boolean isParentAdded():0:0 -> n0
    1:1:java.util.Set collectChangedControllers(java.util.ArrayList,int,int):0:0 -> o
    1:1:boolean isParentHidden(androidx.fragment.app.Fragment):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Z"}
    1:1:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/i0;"}
    1:1:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Z"}
    1:1:void detachFragment(androidx.fragment.app.Fragment):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:boolean isStateAtLeast(int):0:0 -> q0
    1:1:void dispatchActivityCreated():0:0 -> r
    1:1:boolean isStateSaved():0:0 -> r0
    1:1:void dispatchConfigurationChanged(android.content.res.Configuration,boolean):0:0 -> s
    1:1:void lambda$new$0(android.content.res.Configuration):0:0 -> s0
    1:1:void dispatchCreate():0:0 -> t
    1:1:void lambda$new$1(java.lang.Integer):0:0 -> t0
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void dispatchDestroy():0:0 -> u
    1:1:void lambda$new$2(androidx.core.app.MultiWindowModeChangedInfo):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/c;)V"}
    1:1:void dispatchDestroyView():0:0 -> v
    1:1:void lambda$new$3(androidx.core.app.PictureInPictureModeChangedInfo):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/e;)V"}
    1:1:void dispatchLowMemory(boolean):0:0 -> w
    1:1:void moveToState(int,boolean):0:0 -> w0
    1:1:void dispatchOnHiddenChanged():0:0 -> x
    1:1:void noteStateNotSaved():0:0 -> x0
    1:1:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void onContainerAvailable(androidx.fragment.app.FragmentContainerView):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/t;)V"}
    1:1:void dispatchPause():0:0 -> z
    1:1:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):0:0 -> z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)V"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda0 -> l.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.f$0 -> a
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.<init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda1 -> l.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.f$0 -> a
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.<init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$1.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda2 -> l.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.f$0 -> a
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.<init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$2.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$$ExternalSyntheticLambda3 -> l.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.f$0 -> a
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.<init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:void androidx.fragment.app.FragmentManager$$InternalSyntheticLambda$2$bf78a3e14c362c926904fc5eb743427afe4b3d5d63abc5e41053d9cb0adc3eef$3.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.FragmentManager$1 -> l.c0$a:
    androidx.fragment.app.FragmentManager this$0 -> d
    1:1:void <init>(androidx.fragment.app.FragmentManager,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Z)V"}
androidx.fragment.app.FragmentManager$2 -> l.c0$b:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
androidx.fragment.app.FragmentManager$3 -> l.c0$c:
    androidx.fragment.app.FragmentManager this$0 -> b
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Ljava/lang/String;)Ll/p;"}
androidx.fragment.app.FragmentManager$4 -> l.c0$d:
    androidx.fragment.app.FragmentManager this$0 -> a
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Ll/s0;"}
androidx.fragment.app.FragmentManager$5 -> l.c0$e:
    androidx.fragment.app.FragmentManager this$0 -> e
    1:1:void <init>(androidx.fragment.app.FragmentManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;)V"}
    1:1:void run():0:0 -> run
androidx.fragment.app.FragmentManager$7 -> l.c0$f:
    androidx.fragment.app.Fragment val$parent -> a
    androidx.fragment.app.FragmentManager this$0 -> b
    1:1:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Ll/p;)V"}
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> l.c0$g:
    java.lang.String mWho -> a
    int mRequestCode -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> l.c0$g$a:
    void <init>() -> <init>
    1:1:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ll/c0$g;"}
    1:1:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ll/c0$g;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.fragment.app.FragmentManager$OpGenerator -> l.c0$h:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl -> l.d0:
    void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> l.e0:
    java.util.ArrayList mActive -> a
    java.util.ArrayList mAdded -> b
    androidx.fragment.app.BackStackRecordState[] mBackStack -> c
    int mBackStackIndex -> d
    java.lang.String mPrimaryNavActiveWho -> e
    java.util.ArrayList mBackStackStateKeys -> f
    java.util.ArrayList mBackStackStates -> g
    java.util.ArrayList mLaunchedFragments -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:int describeContents():0:0 -> describeContents
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> l.e0$a:
    void <init>() -> <init>
    1:1:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ll/e0;"}
    1:1:androidx.fragment.app.FragmentManagerState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ll/e0;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.fragment.app.FragmentManagerViewModel -> l.f0:
    java.util.HashMap mRetainedFragments -> d
    java.util.HashMap mChildNonConfigs -> e
    java.util.HashMap mViewModelStores -> f
    boolean mStateAutomaticallySaved -> g
    boolean mHasBeenCleared -> h
    boolean mHasSavedSnapshot -> i
    boolean mIsStateSaved -> j
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:void onCleared():0:0 -> c
    1:1:void addRetainedFragment(androidx.fragment.app.Fragment):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void clearNonConfigState(java.lang.String,boolean):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:void clearNonConfigState(androidx.fragment.app.Fragment,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Z)V"}
    1:1:void clearNonConfigStateInternal(java.lang.String,boolean):0:0 -> g
    1:1:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/p;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/f0;"}
    1:1:java.util.Collection getRetainedFragments():0:0 -> j
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Landroidx/lifecycle/h0;"}
    1:1:void removeRetainedFragment(androidx.fragment.app.Fragment):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void setIsStateSaved(boolean):0:0 -> m
    1:1:boolean shouldDestroy(androidx.fragment.app.Fragment):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Z"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> l.f0$a:
    void <init>() -> <init>
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/a;)Landroidx/lifecycle/d0;"}
androidx.fragment.app.FragmentOnAttachListener -> l.g0:
androidx.fragment.app.FragmentState -> l.h0:
    java.lang.String mClassName -> a
    java.lang.String mWho -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mRemoving -> h
    boolean mDetached -> i
    boolean mHidden -> j
    int mMaxLifecycleState -> k
    java.lang.String mTargetWho -> l
    int mTargetRequestCode -> m
    boolean mUserVisibleHint -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.fragment.app.FragmentState$1 -> l.h0$a:
    void <init>() -> <init>
    1:1:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ll/h0;"}
    1:1:androidx.fragment.app.FragmentState[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ll/h0;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.fragment.app.FragmentStateManager -> l.i0:
    androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher -> a
    androidx.fragment.app.FragmentStore mFragmentStore -> b
    androidx.fragment.app.Fragment mFragment -> c
    boolean mMovingToState -> d
    int mFragmentManagerState -> e
    1:1:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/x;Ll/j0;Ll/p;)V"}
    2:2:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,android.os.Bundle):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/x;Ll/j0;Ll/p;Landroid/os/Bundle;)V"}
    1:1:void activityCreated():0:0 -> a
    1:1:void addViewToContainer():0:0 -> b
    1:1:void attach():0:0 -> c
    1:1:int computeExpectedState():0:0 -> d
    1:1:void create():0:0 -> e
    1:1:void createView():0:0 -> f
    1:1:void destroy():0:0 -> g
    1:1:void destroyFragmentView():0:0 -> h
    1:1:void detach():0:0 -> i
    1:1:void ensureInflatedView():0:0 -> j
    1:1:androidx.fragment.app.Fragment getFragment():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:boolean isFragmentViewChild(android.view.View):0:0 -> l
    1:1:void moveToExpectedState():0:0 -> m
    1:1:void pause():0:0 -> n
    1:1:void resume():0:0 -> o
    1:1:android.os.Bundle saveState():0:0 -> p
    1:1:void saveViewState():0:0 -> q
    1:1:void setFragmentManagerState(int):0:0 -> r
    1:1:void start():0:0 -> s
    1:1:void stop():0:0 -> t
androidx.fragment.app.FragmentStateManager$1 -> l.i0$a:
    android.view.View val$fragmentView -> a
    androidx.fragment.app.FragmentStateManager this$0 -> b
    1:1:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;Landroid/view/View;)V"}
    1:1:void onViewAttachedToWindow(android.view.View):0:0 -> onViewAttachedToWindow
    1:1:void onViewDetachedFromWindow(android.view.View):0:0 -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> l.i0$b:
    int[] $SwitchMap$androidx$lifecycle$Lifecycle$State -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.fragment.app.FragmentStore -> l.j0:
    java.util.ArrayList mAdded -> a
    java.util.HashMap mActive -> b
    java.util.HashMap mSavedState -> c
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> d
    1:1:void <init>():0:0 -> <init>
    1:1:void addFragment(androidx.fragment.app.Fragment):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void burpActive():0:0 -> b
    1:1:boolean containsActiveFragment(java.lang.String):0:0 -> c
    1:1:void dispatchStateChange(int):0:0 -> d
    1:1:androidx.fragment.app.Fragment findActiveFragment(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/p;"}
    1:1:androidx.fragment.app.Fragment findFragmentById(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/p;"}
    1:1:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/p;"}
    1:1:int findFragmentIndexInContainer(androidx.fragment.app.Fragment):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)I"}
    1:1:java.util.List getActiveFragmentStateManagers():0:0 -> i
    1:1:java.util.List getActiveFragments():0:0 -> j
    1:1:java.util.HashMap getAllSavedState():0:0 -> k
    1:1:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/i0;"}
    1:1:java.util.List getFragments():0:0 -> m
    1:1:androidx.fragment.app.FragmentManagerViewModel getNonConfig():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/f0;"}
    1:1:android.os.Bundle getSavedState(java.lang.String):0:0 -> o
    1:1:void makeActive(androidx.fragment.app.FragmentStateManager):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)V"}
    1:1:void makeInactive(androidx.fragment.app.FragmentStateManager):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)V"}
    1:1:void moveToExpectedState():0:0 -> r
    1:1:void removeFragment(androidx.fragment.app.Fragment):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)V"}
    1:1:void resetActiveFragments():0:0 -> t
    1:1:void restoreAddedFragments(java.util.List):0:0 -> u
    1:1:void restoreSaveState(java.util.HashMap):0:0 -> v
    1:1:java.util.ArrayList saveActiveFragments():0:0 -> w
    1:1:java.util.ArrayList saveAddedFragments():0:0 -> x
    1:1:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/f0;)V"}
    1:1:android.os.Bundle setSavedState(java.lang.String,android.os.Bundle):0:0 -> z
androidx.fragment.app.FragmentTransaction -> l.k0:
    androidx.fragment.app.FragmentFactory mFragmentFactory -> a
    java.lang.ClassLoader mClassLoader -> b
    java.util.ArrayList mOps -> c
    int mEnterAnim -> d
    int mExitAnim -> e
    int mPopEnterAnim -> f
    int mPopExitAnim -> g
    int mTransition -> h
    boolean mAddToBackStack -> i
    boolean mAllowAddToBackStack -> j
    java.lang.String mName -> k
    int mBreadCrumbTitleRes -> l
    java.lang.CharSequence mBreadCrumbTitleText -> m
    int mBreadCrumbShortTitleRes -> n
    java.lang.CharSequence mBreadCrumbShortTitleText -> o
    java.util.ArrayList mSharedElementSourceNames -> p
    java.util.ArrayList mSharedElementTargetNames -> q
    boolean mReorderingAllowed -> r
    java.util.ArrayList mCommitRunnables -> s
    1:1:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/u;Ljava/lang/ClassLoader;)V"}
    1:1:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl/p;Ljava/lang/String;)Ll/k0;"}
    1:1:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Ll/p;Ljava/lang/String;)Ll/k0;"}
    1:1:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/String;)Ll/k0;"}
    1:1:void addOp(androidx.fragment.app.FragmentTransaction$Op):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/k0$a;)V"}
    void commitNowAllowingStateLoss() -> f
    1:1:androidx.fragment.app.FragmentTransaction disallowAddToBackStack():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/k0;"}
    1:1:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl/p;Ljava/lang/String;I)V"}
    1:1:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/k0;"}
    1:1:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ll/k0;"}
androidx.fragment.app.FragmentTransaction$Op -> l.k0$a:
    int mCmd -> a
    androidx.fragment.app.Fragment mFragment -> b
    boolean mFromExpandedOp -> c
    int mEnterAnim -> d
    int mExitAnim -> e
    int mPopEnterAnim -> f
    int mPopExitAnim -> g
    androidx.lifecycle.Lifecycle$State mOldMaxState -> h
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> i
    void <init>() -> <init>
    1:1:void <init>(int,androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl/p;)V"}
    2:2:void <init>(int,androidx.fragment.app.Fragment,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl/p;Z)V"}
androidx.fragment.app.FragmentTransition -> l.l0:
    androidx.fragment.app.FragmentTransition INSTANCE -> a
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ll/p;ZLe/a;Z)V"}
    1:1:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/n0;"}
    1:1:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/a;Le/a;)V"}
    1:1:void setViewVisibility(java.util.List,int):0:0 -> d
androidx.fragment.app.FragmentTransitionCompat21 -> l.m0:
    void <init>() -> <init>
    1:1:java.lang.Object wrapTransitionInSet(java.lang.Object):0:0 -> A
    1:1:boolean hasSimpleTarget(android.transition.Transition):0:0 -> B
    1:1:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> C
    1:1:void addTarget(java.lang.Object,android.view.View):0:0 -> a
    1:1:void addTargets(java.lang.Object,java.util.ArrayList):0:0 -> b
    1:1:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object):0:0 -> e
    1:1:boolean canHandle(java.lang.Object):0:0 -> g
    1:1:java.lang.Object cloneTransition(java.lang.Object):0:0 -> h
    1:1:boolean isSeekingSupported():0:0 -> m
    1:1:boolean isSeekingSupported(java.lang.Object):0:0 -> n
    1:1:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> o
    1:1:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> p
    1:1:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList):0:0 -> r
    1:1:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> s
    1:1:void setEpicenter(java.lang.Object,android.graphics.Rect):0:0 -> t
    1:1:void setEpicenter(java.lang.Object,android.view.View):0:0 -> u
    1:1:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/Object;Lg/a;Ljava/lang/Runnable;)V"}
    1:1:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0:0 -> y
    1:1:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList):0:0 -> z
androidx.fragment.app.FragmentTransitionCompat21$1 -> l.m0$a:
    android.graphics.Rect val$epicenter -> a
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> b
    1:1:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m0;Landroid/graphics/Rect;)V"}
    1:1:android.graphics.Rect onGetEpicenter(android.transition.Transition):0:0 -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> l.m0$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> c
    1:1:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m0;Landroid/view/View;Ljava/util/ArrayList;)V"}
    1:1:void onTransitionCancel(android.transition.Transition):0:0 -> onTransitionCancel
    1:1:void onTransitionEnd(android.transition.Transition):0:0 -> onTransitionEnd
    1:1:void onTransitionPause(android.transition.Transition):0:0 -> onTransitionPause
    1:1:void onTransitionResume(android.transition.Transition):0:0 -> onTransitionResume
    1:1:void onTransitionStart(android.transition.Transition):0:0 -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> l.m0$c:
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$enteringViews -> b
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$exitingViews -> d
    java.lang.Object val$sharedElementTransition -> e
    java.util.ArrayList val$sharedElementsIn -> f
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
    1:1:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m0;Ljava/lang/Object;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/util/ArrayList;Ljava/lang/Object;Ljava/util/ArrayList;)V"}
    1:1:void onTransitionCancel(android.transition.Transition):0:0 -> onTransitionCancel
    1:1:void onTransitionEnd(android.transition.Transition):0:0 -> onTransitionEnd
    1:1:void onTransitionPause(android.transition.Transition):0:0 -> onTransitionPause
    1:1:void onTransitionResume(android.transition.Transition):0:0 -> onTransitionResume
    1:1:void onTransitionStart(android.transition.Transition):0:0 -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> l.m0$d:
    java.lang.Runnable val$transitionCompleteRunnable -> a
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> b
    1:1:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m0;Ljava/lang/Runnable;)V"}
    1:1:void onTransitionCancel(android.transition.Transition):0:0 -> onTransitionCancel
    1:1:void onTransitionEnd(android.transition.Transition):0:0 -> onTransitionEnd
    1:1:void onTransitionPause(android.transition.Transition):0:0 -> onTransitionPause
    1:1:void onTransitionResume(android.transition.Transition):0:0 -> onTransitionResume
    1:1:void onTransitionStart(android.transition.Transition):0:0 -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> l.m0$e:
    android.graphics.Rect val$epicenter -> a
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> b
    1:1:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m0;Landroid/graphics/Rect;)V"}
    1:1:android.graphics.Rect onGetEpicenter(android.transition.Transition):0:0 -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> l.n0:
    void <init>() -> <init>
    java.lang.Object wrapTransitionInSet(java.lang.Object) -> A
    void addTarget(java.lang.Object,android.view.View) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    1:1:void animateToEnd(java.lang.Object):0:0 -> c
    1:1:void animateToStart(java.lang.Object,java.lang.Runnable):0:0 -> d
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> e
    1:1:void bfsAddViewChildren(java.util.List,android.view.View):0:0 -> f
    boolean canHandle(java.lang.Object) -> g
    java.lang.Object cloneTransition(java.lang.Object) -> h
    1:1:boolean containedBeforeIndex(java.util.List,android.view.View,int):0:0 -> i
    1:1:java.lang.Object controlDelayedTransition(android.view.ViewGroup,java.lang.Object):0:0 -> j
    1:1:void getBoundsOnScreen(android.view.View,android.graphics.Rect):0:0 -> k
    1:1:boolean isNullOrEmpty(java.util.List):0:0 -> l
    boolean isSeekingSupported() -> m
    boolean isSeekingSupported(java.lang.Object) -> n
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> o
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> p
    1:1:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> q
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> r
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> s
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> t
    void setEpicenter(java.lang.Object,android.view.View) -> u
    void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/Object;Lg/a;Ljava/lang/Runnable;)V"}
    1:1:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable,java.lang.Runnable):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/Object;Lg/a;Ljava/lang/Runnable;Ljava/lang/Runnable;)V"}
    1:1:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> x
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> y
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> z
androidx.fragment.app.FragmentTransitionImpl$1 -> l.n0$a:
    int val$numSharedElements -> e
    java.util.ArrayList val$sharedElementsIn -> f
    java.util.ArrayList val$inNames -> g
    java.util.ArrayList val$sharedElementsOut -> h
    java.util.ArrayList val$outNames -> i
    androidx.fragment.app.FragmentTransitionImpl this$0 -> j
    1:1:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/n0;ILjava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V"}
    1:1:void run():0:0 -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> l.o0:
    androidx.fragment.app.Fragment mFragment -> a
    androidx.lifecycle.ViewModelStore mViewModelStore -> b
    java.lang.Runnable mRestoreViewSavedStateRunnable -> c
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> d
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> e
    1:1:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroidx/lifecycle/h0;Ljava/lang/Runnable;)V"}
    1:1:androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/a;"}
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h0;"}
    1:1:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$a;)V"}
    1:1:void initialize():0:0 -> d
    1:1:boolean isInitialized():0:0 -> e
    1:1:void performRestore(android.os.Bundle):0:0 -> f
    1:1:void performSave(android.os.Bundle):0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i;"}
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d;"}
androidx.fragment.app.LogWriter -> l.p0:
    java.lang.String mTag -> e
    java.lang.StringBuilder mBuilder -> f
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:void flushBuilder():0:0 -> a
    1:1:void close():0:0 -> close
    1:1:void flush():0:0 -> flush
    1:1:void write(char[],int,int):0:0 -> write
androidx.fragment.app.SpecialEffectsController -> l.s0:
    android.view.ViewGroup container -> a
    java.util.List pendingOperations -> b
    java.util.List runningOperations -> c
    boolean operationDirectionIsPop -> d
    boolean isContainerPostponed -> e
    androidx.fragment.app.SpecialEffectsController$Companion Companion -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.view.ViewGroup):0:0 -> <init>
    1:1:void $r8$lambda$HzA9s4aFoOsiJ_WkKfUvVoTfNJY(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0;Ll/s0$c;)V"}
    1:1:void $r8$lambda$PcxTk79tvtTaJMirbpJm6o9rlVo(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0;Ll/s0$c;)V"}
    1:1:void applyContainerChangesToOperation$fragment_release(androidx.fragment.app.SpecialEffectsController$Operation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d;)V"}
    void collectEffects(java.util.List,boolean) -> d
    1:1:void commitEffects$fragment_release(java.util.List):0:0 -> e
    1:1:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d$b;Ll/s0$d$a;Ll/i0;)V"}
    1:1:void enqueue$lambda$4$lambda$2(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0;Ll/s0$c;)V"}
    1:1:void enqueue$lambda$4$lambda$3(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0;Ll/s0$c;)V"}
    1:1:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d$b;Ll/i0;)V"}
    1:1:void enqueueHide(androidx.fragment.app.FragmentStateManager):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)V"}
    1:1:void enqueueRemove(androidx.fragment.app.FragmentStateManager):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)V"}
    1:1:void enqueueShow(androidx.fragment.app.FragmentStateManager):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)V"}
    1:1:void executePendingOperations():0:0 -> m
    1:1:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/s0$d;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Ll/s0$d;"}
    1:1:void forceCompleteAllOperations():0:0 -> p
    1:1:void forcePostponedExecutePendingOperations():0:0 -> q
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/i0;)Ll/s0$d$a;"}
    1:1:android.view.ViewGroup getContainer():0:0 -> s
    1:1:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Ll/c0;)Ll/s0;"}
    1:1:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Ll/t0;)Ll/s0;"}
    1:1:void markPostponedState():0:0 -> v
    1:1:void processStart(java.util.List):0:0 -> w
    1:1:void updateFinalState():0:0 -> x
    1:1:void updateOperationDirection(boolean):0:0 -> y
androidx.fragment.app.SpecialEffectsController$$ExternalSyntheticLambda0 -> l.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$0.f$0 -> e
    androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$0.f$1 -> f
    1:1:void androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$0.<init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0;Ll/s0$c;)V"}
    1:1:void androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.SpecialEffectsController$$ExternalSyntheticLambda1 -> l.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.fragment.app.SpecialEffectsController androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$1.f$0 -> e
    androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$1.f$1 -> f
    1:1:void androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$1.<init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0;Ll/s0$c;)V"}
    1:1:void androidx.fragment.app.SpecialEffectsController$$InternalSyntheticLambda$3$b864950c85edb00b67f99fa920190c50c59eaef6472a5a4ce92c09f8e6b9132e$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.SpecialEffectsController$Companion -> l.s0$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Ll/c0;)Ll/s0;"}
    1:1:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;Ll/t0;)Ll/s0;"}
androidx.fragment.app.SpecialEffectsController$Effect -> l.s0$b:
    boolean isSeekingSupported -> a
    boolean isStarted -> b
    boolean isCancelled -> c
    void <init>() -> <init>
    1:1:void cancel(android.view.ViewGroup):0:0 -> a
    1:1:boolean isSeekingSupported():0:0 -> b
    void onCancel(android.view.ViewGroup) -> c
    void onCommit(android.view.ViewGroup) -> d
    1:1:void onStart(android.view.ViewGroup):0:0 -> e
    1:1:void performStart(android.view.ViewGroup):0:0 -> f
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> l.s0$c:
    androidx.fragment.app.FragmentStateManager fragmentStateManager -> l
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d$b;Ll/s0$d$a;Ll/i0;)V"}
    1:1:void complete$fragment_release():0:0 -> e
    1:1:void onStart():0:0 -> q
androidx.fragment.app.SpecialEffectsController$Operation -> l.s0$d:
    androidx.fragment.app.SpecialEffectsController$Operation$State finalState -> a
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact lifecycleImpact -> b
    androidx.fragment.app.Fragment fragment -> c
    java.util.List completionListeners -> d
    boolean isCanceled -> e
    boolean isComplete -> f
    boolean isSeeking -> g
    boolean isStarted -> h
    boolean isAwaitingContainerChanges -> i
    java.util.List _effects -> j
    java.util.List effects -> k
    1:1:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d$b;Ll/s0$d$a;Ll/p;)V"}
    1:1:void addCompletionListener(java.lang.Runnable):0:0 -> a
    1:1:void addEffect(androidx.fragment.app.SpecialEffectsController$Effect):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$b;)V"}
    1:1:void cancel(android.view.ViewGroup):0:0 -> c
    1:1:void cancel(android.view.ViewGroup,boolean):0:0 -> d
    1:1:void complete$fragment_release():0:0 -> e
    1:1:void completeEffect(androidx.fragment.app.SpecialEffectsController$Effect):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$b;)V"}
    1:1:java.util.List getEffects$fragment_release():0:0 -> g
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s0$d$b;"}
    1:1:androidx.fragment.app.Fragment getFragment():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/s0$d$a;"}
    1:1:boolean isAwaitingContainerChanges():0:0 -> k
    1:1:boolean isCanceled():0:0 -> l
    1:1:boolean isComplete():0:0 -> m
    1:1:boolean isSeeking():0:0 -> n
    1:1:boolean isStarted():0:0 -> o
    1:1:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/s0$d$b;Ll/s0$d$a;)V"}
    1:1:void onStart():0:0 -> q
    1:1:void setAwaitingContainerChanges(boolean):0:0 -> r
    1:1:java.lang.String toString():0:0 -> toString
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> l.s0$d$a:
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE -> e
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING -> f
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING -> g
    androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/s0$d$a;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/s0$d$a;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/s0$d$a;"}
androidx.fragment.app.SpecialEffectsController$Operation$State -> l.s0$d$b:
    androidx.fragment.app.SpecialEffectsController$Operation$State$Companion Companion -> e
    androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED -> f
    androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE -> g
    androidx.fragment.app.SpecialEffectsController$Operation$State GONE -> h
    androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE -> i
    androidx.fragment.app.SpecialEffectsController$Operation$State[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/s0$d$b;"}
    1:1:void applyState(android.view.View,android.view.ViewGroup):0:0 -> b
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State from(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/s0$d$b;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/s0$d$b;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/s0$d$b;"}
androidx.fragment.app.SpecialEffectsController$Operation$State$Companion -> l.s0$d$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State asOperationState(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Ll/s0$d$b;"}
    1:1:androidx.fragment.app.SpecialEffectsController$Operation$State from(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/s0$d$b;"}
androidx.fragment.app.SpecialEffectsController$Operation$State$WhenMappings -> l.s0$d$b$b:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.fragment.app.SpecialEffectsController$Operation$WhenMappings -> l.s0$d$c:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.fragment.app.SpecialEffectsController$WhenMappings -> l.s0$e:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.fragment.app.SpecialEffectsControllerFactory -> l.t0:
    androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/ViewGroup;)Ll/s0;"}
androidx.fragment.app.SuperNotCalledException -> l.u0:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.fragment.app.strictmode.FragmentReuseViolation -> m.a:
    java.lang.String previousFragmentId -> f
    1:1:void <init>(androidx.fragment.app.Fragment,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/String;)V"}
androidx.fragment.app.strictmode.FragmentStrictMode -> m.c:
    androidx.fragment.app.strictmode.FragmentStrictMode INSTANCE -> a
    androidx.fragment.app.strictmode.FragmentStrictMode$Policy defaultPolicy -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void $r8$lambda$CcT7Ldd6u2d-WR7ao30YGfHPYuk(java.lang.String,androidx.fragment.app.strictmode.Violation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lm/d;)V"}
    1:1:androidx.fragment.app.strictmode.FragmentStrictMode$Policy getNearestPolicy(androidx.fragment.app.Fragment):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Lm/c$c;"}
    1:1:void handlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,androidx.fragment.app.strictmode.Violation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c$c;Lm/d;)V"}
    1:1:void handlePolicyViolation$lambda$1(java.lang.String,androidx.fragment.app.strictmode.Violation):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lm/d;)V"}
    1:1:void logIfDebuggingEnabled(androidx.fragment.app.strictmode.Violation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/d;)V"}
    1:1:void onFragmentReuse(androidx.fragment.app.Fragment,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/String;)V"}
    1:1:void onWrongFragmentContainer(androidx.fragment.app.Fragment,android.view.ViewGroup):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/view/ViewGroup;)V"}
    1:1:void onWrongNestedHierarchy(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ll/p;I)V"}
    1:1:void runOnHostThread(androidx.fragment.app.Fragment,java.lang.Runnable):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/Runnable;)V"}
    1:1:boolean shouldHandlePolicyViolation(androidx.fragment.app.strictmode.FragmentStrictMode$Policy,java.lang.Class,java.lang.Class):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c$c;Ljava/lang/Class;Ljava/lang/Class;)Z"}
androidx.fragment.app.strictmode.FragmentStrictMode$$ExternalSyntheticLambda0 -> m.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$2$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.f$0 -> e
    androidx.fragment.app.strictmode.Violation androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$2$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.f$1 -> f
    1:1:void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$2$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.<init>(java.lang.String,androidx.fragment.app.strictmode.Violation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lm/d;)V"}
    1:1:void androidx.fragment.app.strictmode.FragmentStrictMode$$InternalSyntheticLambda$2$6747af765e2b033ef1db55c2822e7b633fcb836001d4cead8a13afa3e59a483e$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.fragment.app.strictmode.FragmentStrictMode$Flag -> m.c$a:
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_LOG -> e
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag PENALTY_DEATH -> f
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_FRAGMENT_REUSE -> g
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_FRAGMENT_TAG_USAGE -> h
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_WRONG_NESTED_HIERARCHY -> i
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_RETAIN_INSTANCE_USAGE -> j
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_SET_USER_VISIBLE_HINT -> k
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_TARGET_FRAGMENT_USAGE -> l
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag DETECT_WRONG_FRAGMENT_CONTAINER -> m
    androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $VALUES -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lm/c$a;"}
    1:1:androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lm/c$a;"}
    1:1:androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lm/c$a;"}
androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener -> m.c$b:
androidx.fragment.app.strictmode.FragmentStrictMode$Policy -> m.c$c:
    java.util.Set flags -> a
    java.util.Map mAllowedViolations -> b
    androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion Companion -> c
    androidx.fragment.app.strictmode.FragmentStrictMode$Policy LAX -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.Set,androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Set;Lm/c$b;Ljava/util/Map;)V"}
    1:1:java.util.Set getFlags$fragment_release():0:0 -> a
    1:1:androidx.fragment.app.strictmode.FragmentStrictMode$OnViolationListener getListener$fragment_release():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/c$b;"}
    1:1:java.util.Map getMAllowedViolations$fragment_release():0:0 -> c
androidx.fragment.app.strictmode.FragmentStrictMode$Policy$Companion -> m.c$c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.fragment.app.strictmode.Violation -> m.d:
    androidx.fragment.app.Fragment fragment -> e
    1:1:void <init>(androidx.fragment.app.Fragment,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ljava/lang/String;)V"}
    1:1:androidx.fragment.app.Fragment getFragment():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
androidx.fragment.app.strictmode.WrongFragmentContainerViolation -> m.e:
    android.view.ViewGroup container -> f
    1:1:void <init>(androidx.fragment.app.Fragment,android.view.ViewGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Landroid/view/ViewGroup;)V"}
androidx.fragment.app.strictmode.WrongNestedHierarchyViolation -> m.f:
    androidx.fragment.app.Fragment expectedParentFragment -> f
    int containerId -> g
    1:1:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;Ll/p;I)V"}
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.a:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Landroidx/lifecycle/a$a;"}
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> b
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/a$a;"}
    1:1:boolean hasLifecycleMethods(java.lang.Class):0:0 -> d
    1:1:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Landroidx/lifecycle/a$b;Landroidx/lifecycle/i$a;Ljava/lang/Class;)V"}
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.a$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    1:1:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;Ljava/lang/Object;)V"}
    1:1:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;Ljava/lang/Object;)V"}
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.a$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    1:1:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;Ljava/lang/Object;)V"}
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.b:
    androidx.lifecycle.GeneratedAdapter[] generatedAdapters -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.d:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    void onCreate(androidx.lifecycle.LifecycleOwner) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    void onPause(androidx.lifecycle.LifecycleOwner) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    void onStop(androidx.lifecycle.LifecycleOwner) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    void onStart(androidx.lifecycle.LifecycleOwner) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
androidx.lifecycle.DefaultLifecycleObserver$-CC -> androidx.lifecycle.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> a
    3:6:void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/m;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
    3:6:void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/m;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onPause(androidx.lifecycle.LifecycleOwner):0:0 -> c
    3:6:void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/m;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onStart(androidx.lifecycle.LifecycleOwner):0:0 -> d
    3:6:void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/m;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onStop(androidx.lifecycle.LifecycleOwner):0:0 -> e
    3:6:void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/m;)V"}
androidx.lifecycle.DefaultLifecycleObserverAdapter -> androidx.lifecycle.e:
    androidx.lifecycle.DefaultLifecycleObserver defaultLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings -> androidx.lifecycle.e$a:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.f:
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.g:
androidx.lifecycle.HasDefaultViewModelProviderFactory -> androidx.lifecycle.h:
    androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/a;"}
androidx.lifecycle.Lifecycle -> androidx.lifecycle.i:
    java.util.concurrent.atomic.AtomicReference internalScopeRef -> a
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    androidx.lifecycle.Lifecycle$State getCurrentState() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i$b;"}
    void removeObserver(androidx.lifecycle.LifecycleObserver) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.i$a:
    1:1:androidx.lifecycle.Lifecycle$Event[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/lifecycle/i$a;"}
    1:1:androidx.lifecycle.Lifecycle$State getTargetState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i$b;"}
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.i$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$b;)Landroidx/lifecycle/i$a;"}
    1:1:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$b;)Landroidx/lifecycle/i$a;"}
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings -> androidx.lifecycle.i$a$a$a:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.i$a$b:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.i$b:
    androidx.lifecycle.Lifecycle$State DESTROYED -> e
    androidx.lifecycle.Lifecycle$State INITIALIZED -> f
    androidx.lifecycle.Lifecycle$State CREATED -> g
    androidx.lifecycle.Lifecycle$State STARTED -> h
    androidx.lifecycle.Lifecycle$State RESUMED -> i
    androidx.lifecycle.Lifecycle$State[] $VALUES -> j
    1:1:androidx.lifecycle.Lifecycle$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/lifecycle/i$b;"}
    1:1:boolean isAtLeast(androidx.lifecycle.Lifecycle$State):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$b;)Z"}
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.j:
    androidx.lifecycle.LifecycleDispatcher INSTANCE -> a
    java.util.concurrent.atomic.AtomicBoolean initialized -> b
    1:1:void init(android.content.Context):0:0 -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.j$a:
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.k:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.l:
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.m:
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i;"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.n:
    boolean enforceMainThread -> b
    androidx.arch.core.internal.FastSafeIterableMap observerMap -> c
    androidx.lifecycle.Lifecycle$State state -> d
    java.lang.ref.WeakReference lifecycleOwner -> e
    int addingObserverCounter -> f
    boolean handlingEvent -> g
    boolean newEventOccurred -> h
    java.util.ArrayList parentStates -> i
    kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow -> j
    androidx.lifecycle.LifecycleRegistry$Companion Companion -> k
    1:1:void <init>(androidx.lifecycle.LifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Z)V"}
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getCurrentState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i$b;"}
    1:1:void removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)Landroidx/lifecycle/i$b;"}
    1:1:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> f
    1:1:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$a;)V"}
    1:1:boolean isSynced():0:0 -> i
    1:1:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$b;)V"}
    1:1:void popParentState():0:0 -> k
    1:1:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$b;)V"}
    1:1:void sync():0:0 -> m
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.n$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$b;Landroidx/lifecycle/i$b;)Landroidx/lifecycle/i$b;"}
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.n$b:
    androidx.lifecycle.Lifecycle$State state -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleObserver -> b
    1:1:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i$b;"}
androidx.lifecycle.Lifecycling -> androidx.lifecycle.o:
    androidx.lifecycle.Lifecycling INSTANCE -> a
    java.util.Map callbackCache -> b
    java.util.Map classToAdapters -> c
    1:1:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Constructor;Ljava/lang/Object;)Landroidx/lifecycle/g;"}
    1:1:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> b
    1:1:java.lang.String getAdapterName(java.lang.String):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0:0 -> d
    1:1:boolean isLifecycleParent(java.lang.Class):0:0 -> e
    1:1:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Landroidx/lifecycle/k;"}
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> g
androidx.lifecycle.LiveData -> androidx.lifecycle.p:
    java.lang.Object mDataLock -> a
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mActiveCount -> c
    java.lang.Object mData -> d
    java.lang.Object mPendingData -> e
    int mVersion -> f
    boolean mDispatchingValue -> g
    boolean mDispatchInvalidated -> h
    java.lang.Runnable mPostValueRunnable -> i
    java.lang.Object NOT_SET -> j
    1:1:void assertMainThread(java.lang.String):0:0 -> a
    1:1:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/p$b;)V"}
    1:1:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/p$b;)V"}
    1:1:void setValue(java.lang.Object):0:0 -> d
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.p$a:
    androidx.lifecycle.LiveData this$0 -> e
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.p$b:
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.q:
    java.util.Map calledMethods -> a
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.r:
    1:1:void setValue(java.lang.Object):0:0 -> d
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.s:
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/lifecycle/m;"}
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.u:
    int startedCounter -> a
    int resumedCounter -> b
    boolean pauseSent -> c
    boolean stopSent -> d
    android.os.Handler handler -> e
    androidx.lifecycle.LifecycleRegistry registry -> f
    java.lang.Runnable delayedPauseRunnable -> g
    androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener -> h
    androidx.lifecycle.ProcessLifecycleOwner$Companion Companion -> i
    androidx.lifecycle.ProcessLifecycleOwner newInstance -> j
    1:1:void $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)V"}
    1:1:androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)Landroidx/lifecycle/w$a;"}
    1:1:androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/u;"}
    1:1:void activityPaused$lifecycle_process_release():0:0 -> d
    1:1:void activityResumed$lifecycle_process_release():0:0 -> e
    1:1:void activityStarted$lifecycle_process_release():0:0 -> f
    1:1:void activityStopped$lifecycle_process_release():0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i;"}
    1:1:void attach$lifecycle_process_release(android.content.Context):0:0 -> i
    1:1:void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)V"}
    1:1:void dispatchPauseIfNeeded$lifecycle_process_release():0:0 -> k
    1:1:void dispatchStopIfNeeded$lifecycle_process_release():0:0 -> m
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/m;"}
androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0 -> androidx.lifecycle.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.f$0 -> e
    1:1:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.<init>(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)V"}
    1:1:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.u$a:
    androidx.lifecycle.ProcessLifecycleOwner$Api29Impl INSTANCE -> a
    1:1:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Companion -> androidx.lifecycle.u$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/m;"}
    1:1:void init$lifecycle_process_release(android.content.Context):0:0 -> b
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.u$c:
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.u$c$a:
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.u$d:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
    1:1:void onStart():0:0 -> a
    1:1:void onCreate():0:0 -> b
    1:1:void onResume():0:0 -> c
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.v:
    java.lang.Object mWrapped -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.w:
    androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener -> a
    androidx.lifecycle.ReportFragment$Companion Companion -> b
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i$a;)V"}
    1:1:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
    1:1:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
    1:1:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
    1:1:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.w$a:
    void onStart() -> a
    void onCreate() -> b
    void onResume() -> c
androidx.lifecycle.ReportFragment$Companion -> androidx.lifecycle.w$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/i$a;)V"}
    1:1:androidx.lifecycle.ReportFragment get(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Landroidx/lifecycle/w;"}
    1:1:void injectIfNeededIn(android.app.Activity):0:0 -> c
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.w$c:
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.w$c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:void registerIn(android.app.Activity):0:0 -> a
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SavedStateHandleAttacher -> androidx.lifecycle.y:
    androidx.lifecycle.SavedStateHandlesProvider provider -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.lifecycle.SavedStateHandleSupport -> androidx.lifecycle.z:
    androidx.lifecycle.viewmodel.CreationExtras$Key SAVED_STATE_REGISTRY_OWNER_KEY -> a
    androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_STORE_OWNER_KEY -> b
    androidx.lifecycle.viewmodel.CreationExtras$Key DEFAULT_ARGS_KEY -> c
    1:1:void enableSavedStateHandles(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    1:1:androidx.lifecycle.SavedStateHandlesVM getSavedStateHandlesVM(androidx.lifecycle.ViewModelStoreOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i0;)Landroidx/lifecycle/b0;"}
androidx.lifecycle.SavedStateHandleSupport$DEFAULT_ARGS_KEY$1 -> androidx.lifecycle.z$a:
androidx.lifecycle.SavedStateHandleSupport$SAVED_STATE_REGISTRY_OWNER_KEY$1 -> androidx.lifecycle.z$b:
androidx.lifecycle.SavedStateHandleSupport$VIEW_MODEL_STORE_OWNER_KEY$1 -> androidx.lifecycle.z$c:
androidx.lifecycle.SavedStateHandleSupport$savedStateHandlesVM$1 -> androidx.lifecycle.z$d:
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/a;)Landroidx/lifecycle/d0;"}
androidx.lifecycle.SavedStateHandlesProvider -> androidx.lifecycle.a0:
    androidx.savedstate.SavedStateRegistry savedStateRegistry -> a
    boolean restored -> b
    android.os.Bundle restoredState -> c
    kotlin.Lazy viewModel$delegate -> d
    1:1:void <init>(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.ViewModelStoreOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;Landroidx/lifecycle/i0;)V"}
    1:1:android.os.Bundle saveState():0:0 -> a
    1:1:androidx.lifecycle.SavedStateHandlesVM getViewModel():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/b0;"}
    1:1:void performRestore():0:0 -> c
androidx.lifecycle.SavedStateHandlesProvider$viewModel$2 -> androidx.lifecycle.a0$a:
    androidx.lifecycle.ViewModelStoreOwner $viewModelStoreOwner -> f
    1:1:androidx.lifecycle.SavedStateHandlesVM invoke():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/b0;"}
    1:1:java.lang.Object invoke():0:0 -> d
androidx.lifecycle.SavedStateHandlesVM -> androidx.lifecycle.b0:
    java.util.Map handles -> d
    1:1:java.util.Map getHandles():0:0 -> d
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.c0:
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.lifecycle.ViewModel -> androidx.lifecycle.d0:
    java.util.Map mBagOfTags -> a
    java.util.Set mCloseables -> b
    boolean mCleared -> c
    1:1:void clear():0:0 -> a
    1:1:void closeWithRuntimeException(java.lang.Object):0:0 -> b
    1:1:void onCleared():0:0 -> c
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.e0:
    androidx.lifecycle.ViewModelStore store -> a
    androidx.lifecycle.ViewModelProvider$Factory factory -> b
    androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras -> c
    1:1:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h0;Landroidx/lifecycle/e0$b;)V"}
    2:2:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h0;Landroidx/lifecycle/e0$b;Lo/a;)V"}
    3:3:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory,androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h0;Landroidx/lifecycle/e0$b;Lo/a;ILs2/g;)V"}
    4:4:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i0;Landroidx/lifecycle/e0$b;)V"}
    1:1:androidx.lifecycle.ViewModel get(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
    1:1:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.e0$a:
    androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion Companion -> c
    androidx.lifecycle.viewmodel.CreationExtras$Key APPLICATION_KEY -> d
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion -> androidx.lifecycle.e0$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl -> androidx.lifecycle.e0$a$a$a:
    androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion$ApplicationKeyImpl INSTANCE -> a
androidx.lifecycle.ViewModelProvider$Factory -> androidx.lifecycle.e0$b:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
    androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/a;)Landroidx/lifecycle/d0;"}
androidx.lifecycle.ViewModelProvider$Factory$-CC -> androidx.lifecycle.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:13:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider$Factory.create(java.lang.Class):0:0 -> a
    3:13:androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/e0$b;Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
    3:15:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider$Factory.create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0:0 -> b
    3:15:androidx.lifecycle.ViewModel $default$create(androidx.lifecycle.ViewModelProvider$Factory,java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/e0$b;Ljava/lang/Class;Lo/a;)Landroidx/lifecycle/d0;"}
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.e0$c:
    androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion Companion -> a
    androidx.lifecycle.viewmodel.CreationExtras$Key VIEW_MODEL_KEY -> b
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion -> androidx.lifecycle.e0$c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl -> androidx.lifecycle.e0$c$a$a:
    androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion$ViewModelKeyImpl INSTANCE -> a
androidx.lifecycle.ViewModelProviderGetKt -> androidx.lifecycle.g0:
    1:1:androidx.lifecycle.viewmodel.CreationExtras defaultCreationExtras(androidx.lifecycle.ViewModelStoreOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i0;)Lo/a;"}
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.h0:
    java.util.Map map -> a
    1:1:void clear():0:0 -> a
    1:1:androidx.lifecycle.ViewModel get(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/lifecycle/d0;"}
    1:1:void put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/lifecycle/d0;)V"}
androidx.lifecycle.ViewModelStoreOwner -> androidx.lifecycle.i0:
    androidx.lifecycle.ViewModelStore getViewModelStore() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h0;"}
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.j0:
    1:1:void set(android.view.View,androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/lifecycle/m;)V"}
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.k0:
    1:1:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/lifecycle/i0;)V"}
androidx.lifecycle.runtime.R$id -> n.a:
    int view_tree_lifecycle_owner -> a
androidx.lifecycle.viewmodel.CreationExtras -> o.a:
    java.util.Map map -> a
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Map getMap$lifecycle_viewmodel_release():0:0 -> a
androidx.lifecycle.viewmodel.CreationExtras$Empty -> o.a$a:
    androidx.lifecycle.viewmodel.CreationExtras$Empty INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
androidx.lifecycle.viewmodel.CreationExtras$Key -> o.a$b:
androidx.lifecycle.viewmodel.MutableCreationExtras -> o.b:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.lifecycle.viewmodel.CreationExtras):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;)V"}
    3:3:void <init>(androidx.lifecycle.viewmodel.CreationExtras,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;ILs2/g;)V"}
    1:1:void set(androidx.lifecycle.viewmodel.CreationExtras$Key,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a$b;Ljava/lang/Object;)V"}
androidx.lifecycle.viewmodel.R$id -> o.c:
    int view_tree_view_model_store_owner -> a
androidx.loader.app.LoaderManager -> androidx.loader.app.a:
    1:1:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)Landroidx/loader/app/a;"}
    void markForRedelivery() -> b
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.b:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    1:1:void markForRedelivery():0:0 -> b
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.b$a:
    androidx.collection.SparseArrayCompat mLoaders -> d
    boolean mCreatingLoader -> e
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> f
    1:1:void onCleared():0:0 -> c
    1:1:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h0;)Landroidx/loader/app/b$a;"}
    1:1:void markForRedelivery():0:0 -> e
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.b$a$a:
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/d0;"}
    1:1:androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/a;)Landroidx/lifecycle/d0;"}
androidx.profileinstaller.BenchmarkOperation -> androidx.profileinstaller.a:
    1:1:boolean deleteFilesRecursively(java.io.File):0:0 -> a
    1:1:void dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/profileinstaller/ProfileInstallReceiver$a;)V"}
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper -> androidx.profileinstaller.a$a:
    1:1:java.io.File getCodeCacheDir(android.content.Context):0:0 -> a
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> androidx.profileinstaller.a$b:
    1:1:java.io.File getDeviceProtectedCodeCacheDir(android.content.Context):0:0 -> a
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$ExternalSyntheticApiModelOutline0 -> androidx.profileinstaller.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.Context androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$InternalSyntheticApiModelOutline$2$cb5cae3fa2bc2f683aac30a765a66d90fae1498f4b209d97105f03875c259c9b$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DeviceProfileWriter -> androidx.profileinstaller.d:
    android.content.res.AssetManager mAssetManager -> a
    java.util.concurrent.Executor mExecutor -> b
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics -> c
    byte[] mDesiredVersion -> d
    java.io.File mCurProfile -> e
    java.lang.String mApkName -> f
    java.lang.String mProfileSourceLocation -> g
    java.lang.String mProfileMetaSourceLocation -> h
    boolean mDeviceSupportsAotProfile -> i
    androidx.profileinstaller.DexProfileData[] mProfile -> j
    byte[] mTranscodedProfile -> k
    1:1:void $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/d;ILjava/lang/Object;)V"}
    1:1:androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;[B)Landroidx/profileinstaller/d;"}
    1:1:void assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> c
    1:1:byte[] desiredVersion():0:0 -> d
    1:1:boolean deviceAllowsProfileInstallerAotWrites():0:0 -> e
    1:1:java.io.InputStream getProfileInputStream(android.content.res.AssetManager):0:0 -> f
    1:1:void lambda$result$0(int,java.lang.Object):0:0 -> g
    1:1:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String):0:0 -> h
    1:1:androidx.profileinstaller.DeviceProfileWriter read():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/profileinstaller/d;"}
    1:1:androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;)[Landroidx/profileinstaller/e;"}
    1:1:boolean requiresMetadata():0:0 -> k
    1:1:void result(int,java.lang.Object):0:0 -> l
    1:1:androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/profileinstaller/d;"}
    1:1:boolean write():0:0 -> n
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> androidx.profileinstaller.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> e
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> f
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> g
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/d;ILjava/lang/Object;)V"}
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DexProfileData -> androidx.profileinstaller.e:
    java.lang.String apkName -> a
    java.lang.String dexName -> b
    long dexChecksum -> c
    long mTypeIdCount -> d
    int classSetSize -> e
    int hotMethodRegionSize -> f
    int numMethodIds -> g
    int[] classes -> h
    java.util.TreeMap methods -> i
androidx.profileinstaller.Encoding -> androidx.profileinstaller.f:
    1:1:int bitsToBytes(int):0:0 -> a
    1:1:byte[] compress(byte[]):0:0 -> b
    1:1:java.lang.RuntimeException error(java.lang.String):0:0 -> c
    1:1:byte[] read(java.io.InputStream,int):0:0 -> d
    1:1:byte[] readCompressed(java.io.InputStream,int,int):0:0 -> e
    1:1:java.lang.String readString(java.io.InputStream,int):0:0 -> f
    1:1:long readUInt(java.io.InputStream,int):0:0 -> g
    1:1:int readUInt16(java.io.InputStream):0:0 -> h
    1:1:long readUInt32(java.io.InputStream):0:0 -> i
    1:1:int readUInt8(java.io.InputStream):0:0 -> j
    1:1:int utf8Length(java.lang.String):0:0 -> k
    1:1:void writeAll(java.io.InputStream,java.io.OutputStream):0:0 -> l
    1:1:void writeCompressed(java.io.OutputStream,byte[]):0:0 -> m
    1:1:void writeString(java.io.OutputStream,java.lang.String):0:0 -> n
    1:1:void writeUInt(java.io.OutputStream,long,int):0:0 -> o
    1:1:void writeUInt16(java.io.OutputStream,int):0:0 -> p
    1:1:void writeUInt32(java.io.OutputStream,long):0:0 -> q
    1:1:void writeUInt8(java.io.OutputStream,int):0:0 -> r
androidx.profileinstaller.FileSectionType -> androidx.profileinstaller.g:
    long mValue -> e
    androidx.profileinstaller.FileSectionType DEX_FILES -> f
    androidx.profileinstaller.FileSectionType EXTRA_DESCRIPTORS -> g
    androidx.profileinstaller.FileSectionType CLASSES -> h
    androidx.profileinstaller.FileSectionType METHODS -> i
    androidx.profileinstaller.FileSectionType AGGREGATION_COUNT -> j
    androidx.profileinstaller.FileSectionType[] $VALUES -> k
    1:1:androidx.profileinstaller.FileSectionType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/profileinstaller/g;"}
    1:1:long getValue():0:0 -> b
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
    1:1:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;)V"}
androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0 -> androidx.profileinstaller.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> androidx.profileinstaller.ProfileInstallReceiver$a:
    androidx.profileinstaller.ProfileInstallReceiver this$0 -> a
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller -> androidx.profileinstaller.j:
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback EMPTY_DIAGNOSTICS -> a
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback LOG_DIAGNOSTICS -> b
    1:1:void $r8$lambda$lAFgOixnKjpoenploWSedI8N01U(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:boolean deleteProfileWrittenFor(java.io.File):0:0 -> b
    1:1:void deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
    1:1:boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/pm/PackageInfo;Ljava/io/File;Landroidx/profileinstaller/j$c;)Z"}
    1:1:void lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File):0:0 -> f
    1:1:void result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;Landroid/content/pm/PackageInfo;Ljava/io/File;Ljava/lang/String;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)Z"}
    1:1:void writeProfile(android.content.Context):0:0 -> i
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;Z)V"}
    1:1:void writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0 -> androidx.profileinstaller.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$0 -> e
    int androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$1 -> f
    java.lang.Object androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$2 -> g
    1:1:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.<init>(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller$1 -> androidx.profileinstaller.j$a:
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller$2 -> androidx.profileinstaller.j$b:
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> androidx.profileinstaller.j$c:
    void onDiagnosticReceived(int,java.lang.Object) -> a
    void onResultReceived(int,java.lang.Object) -> b
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:void $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/profileinstaller/ProfileInstallerInitializer$c;"}
    1:1:void delayAfterFirstFrame(android.content.Context):0:0 -> g
    1:1:void installAfterDelay(android.content.Context):0:0 -> h
    1:1:void lambda$delayAfterFirstFrame$0(android.content.Context):0:0 -> i
    1:1:void lambda$installAfterDelay$1(android.content.Context):0:0 -> j
    1:1:void lambda$writeInBackground$2(android.content.Context):0:0 -> k
    1:1:void writeInBackground(android.content.Context):0:0 -> l
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> androidx.profileinstaller.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> e
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> f
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> androidx.profileinstaller.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> e
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2 -> androidx.profileinstaller.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.f$0 -> e
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> androidx.profileinstaller.ProfileInstallerInitializer$a:
    1:1:void $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A(java.lang.Runnable,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void lambda$postFrameCallback$0(java.lang.Runnable,long):0:0 -> b
    1:1:void postFrameCallback(java.lang.Runnable):0:0 -> c
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> androidx.profileinstaller.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> a
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long):0:0 -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> androidx.profileinstaller.ProfileInstallerInitializer$b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.profileinstaller.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$InternalSyntheticApiModelOutline$3$8d52cf30b98a04962970f0c5e6c7c8573caae9b733781b8847fa0ec96d6a0ee8$0.m(android.os.Looper):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Result -> androidx.profileinstaller.ProfileInstallerInitializer$c:
androidx.profileinstaller.ProfileTranscoder -> androidx.profileinstaller.p:
    byte[] MAGIC_PROF -> a
    byte[] MAGIC_PROFM -> b
    1:1:void skipInlineCache(java.io.InputStream):0:0 -> A
    1:1:boolean transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[B[Landroidx/profileinstaller/e;)Z"}
    1:1:void writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.WritableFileSection writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:void writeHeader(java.io.OutputStream,byte[]):0:0 -> E
    1:1:void writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;Ljava/lang/String;)V"}
    1:1:void writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:int computeMethodFlags(androidx.profileinstaller.DexProfileData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)I"}
    1:1:byte[] createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;[B)[B"}
    1:1:androidx.profileinstaller.WritableFileSection createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:androidx.profileinstaller.WritableFileSection createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:byte[] createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)[B"}
    1:1:byte[] createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)[B"}
    1:1:java.lang.String enforceSeparator(java.lang.String,java.lang.String):0:0 -> g
    1:1:java.lang.String extractKey(java.lang.String):0:0 -> h
    1:1:androidx.profileinstaller.DexProfileData findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;Ljava/lang/String;)Landroidx/profileinstaller/e;"}
    1:1:java.lang.String generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> j
    1:1:int getMethodBitmapStorageSize(int):0:0 -> k
    1:1:int methodFlagBitmapIndex(int,int,int):0:0 -> l
    1:1:int[] readClasses(java.io.InputStream,int):0:0 -> m
    1:1:int readFlagsFromBitmap(java.util.BitSet,int,int):0:0 -> n
    1:1:byte[] readHeader(java.io.InputStream,byte[]):0:0 -> o
    1:1:void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;I[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[BI[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[BLjava/lang/String;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Ljava/lang/String;I)[Landroidx/profileinstaller/e;"}
    1:1:int roundUpToByte(int):0:0 -> y
    1:1:void setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILandroidx/profileinstaller/e;)V"}
androidx.profileinstaller.ProfileVerifier -> androidx.profileinstaller.q:
    androidx.concurrent.futures.ResolvableFuture sFuture -> a
    java.lang.Object SYNC_OBJ -> b
    androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus -> c
    1:1:long getPackageLastUpdateTime(android.content.Context):0:0 -> a
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZZ)Landroidx/profileinstaller/q$c;"}
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Landroidx/profileinstaller/q$c;"}
androidx.profileinstaller.ProfileVerifier$Api33Impl -> androidx.profileinstaller.q$a:
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context):0:0 -> a
androidx.profileinstaller.ProfileVerifier$Cache -> androidx.profileinstaller.q$b:
    int mSchema -> a
    int mResultCode -> b
    long mPackageLastUpdateTime -> c
    long mInstalledCurrentProfileSize -> d
    1:1:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;)Landroidx/profileinstaller/q$b;"}
    1:1:void writeOnFile(java.io.File):0:0 -> b
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> androidx.profileinstaller.q$c:
    int mResultCode -> a
    boolean mHasReferenceProfile -> b
    boolean mHasCurrentProfile -> c
androidx.profileinstaller.ProfileVersion -> androidx.profileinstaller.r:
    byte[] V015_S -> a
    byte[] V010_P -> b
    byte[] V009_O_MR1 -> c
    byte[] V005_O -> d
    byte[] V001_N -> e
    byte[] METADATA_V001_N -> f
    byte[] METADATA_V002 -> g
    1:1:java.lang.String dexKeySeparator(byte[]):0:0 -> a
androidx.profileinstaller.WritableFileSection -> androidx.profileinstaller.s:
    androidx.profileinstaller.FileSectionType mType -> a
    int mExpectedInflateSize -> b
    byte[] mContents -> c
    boolean mNeedsCompression -> d
androidx.savedstate.R$id -> p.a:
    int view_tree_saved_state_registry_owner -> a
androidx.savedstate.Recreator -> p.b:
    androidx.savedstate.SavedStateRegistryOwner owner -> a
    androidx.savedstate.Recreator$Companion Companion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.savedstate.SavedStateRegistryOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
    1:1:void reflectiveNew(java.lang.String):0:0 -> h
androidx.savedstate.Recreator$Companion -> p.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.savedstate.SavedStateRegistry -> p.d:
    androidx.arch.core.internal.SafeIterableMap components -> a
    boolean attached -> b
    android.os.Bundle restoredState -> c
    boolean isRestored -> d
    boolean isAllowingSavingState -> e
    androidx.savedstate.SavedStateRegistry$Companion Companion -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void $r8$lambda$AUDDdpkzZrJMhBj0r-_9pI-j6hA(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
    1:1:android.os.Bundle consumeRestoredStateForKey(java.lang.String):0:0 -> b
    1:1:androidx.savedstate.SavedStateRegistry$SavedStateProvider getSavedStateProvider(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lp/d$c;"}
    1:1:void performAttach$lambda$4(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
    1:1:void performAttach$savedstate_release(androidx.lifecycle.Lifecycle):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i;)V"}
    1:1:void performRestore$savedstate_release(android.os.Bundle):0:0 -> f
    1:1:void performSave(android.os.Bundle):0:0 -> g
    1:1:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp/d$c;)V"}
androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0 -> p.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$2$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.f$0 -> a
    1:1:void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$2$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.<init>(androidx.savedstate.SavedStateRegistry):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)V"}
    1:1:void androidx.savedstate.SavedStateRegistry$$InternalSyntheticLambda$2$719ab437d0ecac5a4dba8ec5006130a48f9c8392d4682d57a4ee7203b99f6266$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;Landroidx/lifecycle/i$a;)V"}
androidx.savedstate.SavedStateRegistry$AutoRecreated -> p.d$a:
androidx.savedstate.SavedStateRegistry$Companion -> p.d$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> p.d$c:
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> p.e:
    androidx.savedstate.SavedStateRegistryOwner owner -> a
    androidx.savedstate.SavedStateRegistry savedStateRegistry -> b
    boolean attached -> c
    androidx.savedstate.SavedStateRegistryController$Companion Companion -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.savedstate.SavedStateRegistryOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)V"}
    2:2:void <init>(androidx.savedstate.SavedStateRegistryOwner,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;Ls2/g;)V"}
    1:1:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)Lp/e;"}
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d;"}
    1:1:void performAttach():0:0 -> c
    1:1:void performRestore(android.os.Bundle):0:0 -> d
    1:1:void performSave(android.os.Bundle):0:0 -> e
androidx.savedstate.SavedStateRegistryController$Companion -> p.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/f;)Lp/e;"}
androidx.savedstate.SavedStateRegistryOwner -> p.f:
    androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d;"}
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> p.g:
    1:1:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lp/f;)V"}
androidx.startup.AppInitializer -> androidx.startup.a:
    java.util.Map mInitialized -> a
    java.util.Set mDiscovered -> b
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
    java.lang.Object sLock -> e
    1:1:void discoverAndInitialize():0:0 -> a
    1:1:void discoverAndInitialize(android.os.Bundle):0:0 -> b
    1:1:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> c
    1:1:androidx.startup.AppInitializer getInstance(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/startup/a;"}
    1:1:boolean isEagerlyInitialized(java.lang.Class):0:0 -> e
androidx.startup.Initializer -> q.a:
    java.util.List dependencies() -> a
    java.lang.Object create(android.content.Context) -> b
androidx.startup.R$string -> q.b:
    int androidx_startup -> a
androidx.startup.StartupException -> q.c:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.tracing.Trace -> r.a:
    long sTraceTagApp -> a
    java.lang.reflect.Method sIsTagEnabledMethod -> b
    java.lang.reflect.Method sAsyncTraceBeginMethod -> c
    java.lang.reflect.Method sAsyncTraceEndMethod -> d
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> a
    1:1:void beginAsyncSectionFallback(java.lang.String,int):0:0 -> b
    1:1:void beginSection(java.lang.String):0:0 -> c
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> d
    1:1:void endAsyncSectionFallback(java.lang.String,int):0:0 -> e
    1:1:void endSection():0:0 -> f
    1:1:void handleException(java.lang.String,java.lang.Exception):0:0 -> g
    1:1:boolean isEnabled():0:0 -> h
    1:1:boolean isEnabledFallback():0:0 -> i
    1:1:java.lang.String truncatedTraceSectionLabel(java.lang.String):0:0 -> j
androidx.tracing.TraceApi18Impl -> r.b:
    1:1:void beginSection(java.lang.String):0:0 -> a
    1:1:void endSection():0:0 -> b
androidx.tracing.TraceApi29Impl -> r.c:
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> a
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> b
    1:1:boolean isEnabled():0:0 -> c
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> a
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> b
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.a:
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    androidx.collection.ArrayMap mParcelizerCache -> c
    1:1:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/a;Le/a;Le/a;)V"}
    void writeByteArray(byte[]) -> A
    1:1:void writeByteArray(byte[],int):0:0 -> B
    void writeCharSequence(java.lang.CharSequence) -> C
    1:1:void writeCharSequence(java.lang.CharSequence,int):0:0 -> D
    void writeInt(int) -> E
    1:1:void writeInt(int,int):0:0 -> F
    void writeParcelable(android.os.Parcelable) -> G
    1:1:void writeParcelable(android.os.Parcelable,int):0:0 -> H
    void writeString(java.lang.String) -> I
    1:1:void writeString(java.lang.String,int):0:0 -> J
    1:1:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/a;Landroidx/versionedparcelable/a;)V"}
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/a;)V"}
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/a;I)V"}
    1:1:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/a;)V"}
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:java.lang.Class findParcelClass(java.lang.Class):0:0 -> c
    1:1:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> d
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> e
    1:1:boolean isStream():0:0 -> f
    boolean readBoolean() -> g
    1:1:boolean readBoolean(boolean,int):0:0 -> h
    byte[] readByteArray() -> i
    1:1:byte[] readByteArray(byte[],int):0:0 -> j
    java.lang.CharSequence readCharSequence() -> k
    1:1:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int):0:0 -> l
    boolean readField(int) -> m
    1:1:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/versionedparcelable/a;)Ls/a;"}
    int readInt() -> o
    1:1:int readInt(int,int):0:0 -> p
    android.os.Parcelable readParcelable() -> q
    1:1:android.os.Parcelable readParcelable(android.os.Parcelable,int):0:0 -> r
    java.lang.String readString() -> s
    1:1:java.lang.String readString(java.lang.String,int):0:0 -> t
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/a;"}
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/a;I)Ls/a;"}
    void setOutputField(int) -> w
    1:1:void setSerializationFlags(boolean,boolean):0:0 -> x
    void writeBoolean(boolean) -> y
    1:1:void writeBoolean(boolean,int):0:0 -> z
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.b:
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Le/a;Le/a;Le/a;)V"}
    1:1:void writeByteArray(byte[]):0:0 -> A
    1:1:void writeCharSequence(java.lang.CharSequence):0:0 -> C
    1:1:void writeInt(int):0:0 -> E
    1:1:void writeParcelable(android.os.Parcelable):0:0 -> G
    1:1:void writeString(java.lang.String):0:0 -> I
    1:1:void closeField():0:0 -> a
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:boolean readBoolean():0:0 -> g
    1:1:byte[] readByteArray():0:0 -> i
    1:1:java.lang.CharSequence readCharSequence():0:0 -> k
    1:1:boolean readField(int):0:0 -> m
    1:1:int readInt():0:0 -> o
    1:1:android.os.Parcelable readParcelable():0:0 -> q
    1:1:java.lang.String readString():0:0 -> s
    1:1:void setOutputField(int):0:0 -> w
    1:1:void writeBoolean(boolean):0:0 -> y
androidx.versionedparcelable.VersionedParcelable -> s.a:
androidx.window.SafeWindowExtensionsProvider -> t.a:
    java.lang.ClassLoader loader -> a
    1:1:void <init>(java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.ClassLoader access$getLoader$p(androidx.window.SafeWindowExtensionsProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;)Ljava/lang/ClassLoader;"}
    1:1:java.lang.Class access$getWindowExtensionsProviderClass(androidx.window.SafeWindowExtensionsProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;)Ljava/lang/Class;"}
    1:1:java.lang.Class getWindowExtensionsClass$window_release():0:0 -> c
    1:1:java.lang.Class getWindowExtensionsProviderClass():0:0 -> d
    1:1:boolean isWindowExtensionsPresent():0:0 -> e
    1:1:boolean isWindowExtensionsValid$window_release():0:0 -> f
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1 -> t.a$a:
    androidx.window.SafeWindowExtensionsProvider this$0 -> f
    1:1:void <init>(androidx.window.SafeWindowExtensionsProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;)V"}
    1:1:java.lang.Class invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1 -> t.a$b:
    androidx.window.SafeWindowExtensionsProvider this$0 -> f
    1:1:void <init>(androidx.window.SafeWindowExtensionsProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.core.AndroidLogger -> u.a:
    androidx.window.core.AndroidLogger INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void debug(java.lang.String,java.lang.String):0:0 -> a
androidx.window.core.Bounds -> u.b:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    1:1:void <init>(int,int,int,int):0:0 -> <init>
    2:2:void <init>(android.graphics.Rect):0:0 -> <init>
    1:1:int getHeight():0:0 -> a
    1:1:int getLeft():0:0 -> b
    1:1:int getTop():0:0 -> c
    1:1:int getWidth():0:0 -> d
    1:1:boolean isZero():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:android.graphics.Rect toRect():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.core.BuildConfig -> u.c:
    androidx.window.core.BuildConfig INSTANCE -> a
    androidx.window.core.VerificationMode verificationMode -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.core.VerificationMode getVerificationMode():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/j;"}
androidx.window.core.ConsumerAdapter -> u.d:
    java.lang.ClassLoader loader -> a
    1:1:void <init>(java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.Object buildConsumer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/b;Lr2/l;)Ljava/lang/Object;"}
    1:1:java.lang.Class consumerClassOrNull$window_release():0:0 -> b
    1:1:androidx.window.core.ConsumerAdapter$Subscription createSubscription(java.lang.Object,kotlin.reflect.KClass,java.lang.String,java.lang.String,android.app.Activity,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lw2/b;Ljava/lang/String;Ljava/lang/String;Landroid/app/Activity;Lr2/l;)Lu/d$b;"}
    1:1:java.lang.Class unsafeConsumerClass():0:0 -> d
androidx.window.core.ConsumerAdapter$ConsumerHandler -> u.d$a:
    kotlin.reflect.KClass clazz -> a
    kotlin.jvm.functions.Function1 consumer -> b
    1:1:void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/b;Lr2/l;)V"}
    1:1:void invokeAccept(java.lang.Object):0:0 -> a
    1:1:boolean isAccept(java.lang.reflect.Method,java.lang.Object[]):0:0 -> b
    1:1:boolean isEquals(java.lang.reflect.Method,java.lang.Object[]):0:0 -> c
    1:1:boolean isHashCode(java.lang.reflect.Method,java.lang.Object[]):0:0 -> d
    1:1:boolean isToString(java.lang.reflect.Method,java.lang.Object[]):0:0 -> e
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]):0:0 -> invoke
androidx.window.core.ConsumerAdapter$Subscription -> u.d$b:
    void dispose() -> a
androidx.window.core.ConsumerAdapter$createSubscription$1 -> u.d$c:
    java.lang.reflect.Method $removeMethod -> a
    java.lang.Object $obj -> b
    java.lang.Object $javaConsumer -> c
    1:1:void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:void dispose():0:0 -> a
androidx.window.core.ExtensionsUtil -> u.e:
    androidx.window.core.ExtensionsUtil INSTANCE -> a
    java.lang.String TAG -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getSafeVendorApiLevel():0:0 -> a
androidx.window.core.FailedSpecification -> u.f:
    java.lang.Object value -> b
    java.lang.String tag -> c
    java.lang.String message -> d
    androidx.window.core.Logger logger -> e
    androidx.window.core.VerificationMode verificationMode -> f
    androidx.window.core.WindowStrictModeException exception -> g
    1:1:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.VerificationMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lu/g;Lu/j;)V"}
    1:1:java.lang.Object compute():0:0 -> a
    1:1:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr2/l;)Lu/h;"}
androidx.window.core.FailedSpecification$WhenMappings -> u.f$a:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.window.core.Logger -> u.g:
    void debug(java.lang.String,java.lang.String) -> a
androidx.window.core.SpecificationComputer -> u.h:
    androidx.window.core.SpecificationComputer$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    java.lang.Object compute() -> a
    1:1:java.lang.String createMessage(java.lang.Object,java.lang.String):0:0 -> b
    androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr2/l;)Lu/h;"}
androidx.window.core.SpecificationComputer$Companion -> u.h$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.window.core.SpecificationComputer startSpecification(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Lu/j;Lu/g;)Lu/h;"}
    1:1:androidx.window.core.SpecificationComputer startSpecification$default(androidx.window.core.SpecificationComputer$Companion,java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/h$a;Ljava/lang/Object;Ljava/lang/String;Lu/j;Lu/g;ILjava/lang/Object;)Lu/h;"}
androidx.window.core.ValidSpecification -> u.i:
    java.lang.Object value -> b
    java.lang.String tag -> c
    androidx.window.core.VerificationMode verificationMode -> d
    androidx.window.core.Logger logger -> e
    1:1:void <init>(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Lu/j;Lu/g;)V"}
    1:1:java.lang.Object compute():0:0 -> a
    1:1:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr2/l;)Lu/h;"}
androidx.window.core.VerificationMode -> u.j:
    androidx.window.core.VerificationMode STRICT -> e
    androidx.window.core.VerificationMode LOG -> f
    androidx.window.core.VerificationMode QUIET -> g
    androidx.window.core.VerificationMode[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.window.core.VerificationMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lu/j;"}
    1:1:androidx.window.core.VerificationMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lu/j;"}
    1:1:androidx.window.core.VerificationMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lu/j;"}
androidx.window.core.Version -> u.k:
    int major -> e
    int minor -> f
    int patch -> g
    java.lang.String description -> h
    kotlin.Lazy bigInteger$delegate -> i
    androidx.window.core.Version$Companion Companion -> j
    androidx.window.core.Version UNKNOWN -> k
    androidx.window.core.Version VERSION_0_1 -> l
    androidx.window.core.Version VERSION_1_0 -> m
    androidx.window.core.Version CURRENT -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,java.lang.String):0:0 -> <init>
    2:2:void <init>(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIILjava/lang/String;Ls2/g;)V"}
    1:1:androidx.window.core.Version access$getVERSION_0_1$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/k;"}
    1:1:int compareTo(androidx.window.core.Version):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/k;)I"}
    1:1:java.math.BigInteger getBigInteger():0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int getMajor():0:0 -> d
    1:1:int getMinor():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int getPatch():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.core.Version$Companion -> u.k$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.window.core.Version getVERSION_0_1():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/k;"}
    1:1:androidx.window.core.Version parse(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lu/k;"}
androidx.window.core.Version$bigInteger$2 -> u.k$b:
    androidx.window.core.Version this$0 -> f
    1:1:void <init>(androidx.window.core.Version):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/k;)V"}
    1:1:java.math.BigInteger invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.core.WindowStrictModeException -> u.l:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.window.java.core.CallbackToFlowAdapter -> v.a:
    java.util.concurrent.locks.ReentrantLock lock -> a
    java.util.Map consumerToJobMap -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void connect(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Lh/a;Lc3/c;)V"}
    1:1:void disconnect(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1 -> v.a$a:
    int label -> i
    kotlinx.coroutines.flow.Flow $flow -> j
    androidx.core.util.Consumer $consumer -> k
    1:1:void <init>(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/c;Lh/a;Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/d;)Ljava/lang/Object;"}
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1 -> v.a$a$a:
    androidx.core.util.Consumer $consumer -> a
    1:1:void <init>(androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter -> w.a:
    androidx.window.layout.WindowInfoTracker tracker -> b
    androidx.window.java.core.CallbackToFlowAdapter callbackToFlowAdapter -> c
    1:1:void <init>(androidx.window.layout.WindowInfoTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)V"}
    2:2:void <init>(androidx.window.layout.WindowInfoTracker,androidx.window.java.core.CallbackToFlowAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lv/a;)V"}
    1:1:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lc3/c;"}
    1:1:void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void removeWindowLayoutInfoListener(androidx.core.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.layout.DisplayFeature -> x.a:
    android.graphics.Rect getBounds() -> b
androidx.window.layout.EmptyDecorator -> x.b:
    androidx.window.layout.EmptyDecorator INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)Lx/f;"}
androidx.window.layout.FoldingFeature -> x.c:
    androidx.window.layout.FoldingFeature$State getState() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/c$b;"}
    androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/c$a;"}
androidx.window.layout.FoldingFeature$OcclusionType -> x.c$a:
    java.lang.String description -> a
    androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion -> b
    androidx.window.layout.FoldingFeature$OcclusionType NONE -> c
    androidx.window.layout.FoldingFeature$OcclusionType FULL -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.FoldingFeature$OcclusionType$Companion -> x.c$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.window.layout.FoldingFeature$State -> x.c$b:
    java.lang.String description -> a
    androidx.window.layout.FoldingFeature$State$Companion Companion -> b
    androidx.window.layout.FoldingFeature$State FLAT -> c
    androidx.window.layout.FoldingFeature$State HALF_OPENED -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.FoldingFeature$State$Companion -> x.c$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
androidx.window.layout.HardwareFoldingFeature -> x.d:
    androidx.window.core.Bounds featureBounds -> a
    androidx.window.layout.HardwareFoldingFeature$Type type -> b
    androidx.window.layout.FoldingFeature$State state -> c
    androidx.window.layout.HardwareFoldingFeature$Companion Companion -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;Lx/d$b;Lx/c$b;)V"}
    1:1:androidx.window.layout.FoldingFeature$State getState():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/c$b;"}
    1:1:android.graphics.Rect getBounds():0:0 -> b
    1:1:androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/c$a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.HardwareFoldingFeature$Companion -> x.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:void validateFeatureBounds$window_release(androidx.window.core.Bounds):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;)V"}
androidx.window.layout.HardwareFoldingFeature$Type -> x.d$b:
    java.lang.String description -> a
    androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion -> b
    androidx.window.layout.HardwareFoldingFeature$Type FOLD -> c
    androidx.window.layout.HardwareFoldingFeature$Type HINGE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/d$b;"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/d$b;"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.HardwareFoldingFeature$Type$Companion -> x.d$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type getFOLD():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/d$b;"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type getHINGE():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/d$b;"}
androidx.window.layout.SafeWindowLayoutComponentProvider -> x.e:
    java.lang.ClassLoader loader -> a
    androidx.window.core.ConsumerAdapter consumerAdapter -> b
    androidx.window.SafeWindowExtensionsProvider safeWindowExtensionsProvider -> c
    1:1:void <init>(java.lang.ClassLoader,androidx.window.core.ConsumerAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Lu/d;)V"}
    1:1:androidx.window.core.ConsumerAdapter access$getConsumerAdapter$p(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)Lu/d;"}
    1:1:java.lang.Class access$getFoldingFeatureClass(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)Ljava/lang/Class;"}
    1:1:androidx.window.SafeWindowExtensionsProvider access$getSafeWindowExtensionsProvider$p(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)Lt/a;"}
    1:1:java.lang.Class access$getWindowLayoutComponentClass(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)Ljava/lang/Class;"}
    1:1:boolean canUseWindowLayoutComponent():0:0 -> e
    1:1:java.lang.Class getFoldingFeatureClass():0:0 -> f
    1:1:androidx.window.extensions.layout.WindowLayoutComponent getWindowLayoutComponent():0:0 -> g
    1:1:java.lang.Class getWindowLayoutComponentClass():0:0 -> h
    1:1:boolean hasValidVendorApiLevel1$window_release():0:0 -> i
    1:1:boolean hasValidVendorApiLevel2$window_release():0:0 -> j
    1:1:boolean isFoldingFeatureValid():0:0 -> k
    1:1:boolean isMethodWindowLayoutInfoListenerJavaConsumerValid():0:0 -> l
    1:1:boolean isMethodWindowLayoutInfoListenerWindowConsumerValid():0:0 -> m
    1:1:boolean isWindowLayoutComponentAccessible$window_release():0:0 -> n
    1:1:boolean isWindowLayoutProviderValid():0:0 -> o
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1 -> x.e$a:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1 -> x.e$b:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1 -> x.e$c:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1 -> x.e$d:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.layout.WindowInfoTracker -> x.f:
    androidx.window.layout.WindowInfoTracker$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lc3/c;"}
androidx.window.layout.WindowInfoTracker$Companion -> x.f$a:
    androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE -> a
    boolean DEBUG -> b
    java.lang.String TAG -> c
    kotlin.Lazy extensionBackend$delegate -> d
    androidx.window.layout.WindowInfoTrackerDecorator decorator -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean access$getDEBUG$p():0:0 -> a
    1:1:java.lang.String access$getTAG$p():0:0 -> b
    1:1:androidx.window.layout.adapter.WindowBackend getExtensionBackend$window_release():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/a;"}
    1:1:androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lx/f;"}
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 -> x.f$a$a:
    androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.window.layout.adapter.WindowBackend invoke():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/a;"}
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.layout.WindowInfoTrackerDecorator -> x.g:
    androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)Lx/f;"}
androidx.window.layout.WindowInfoTrackerImpl -> x.i:
    androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator -> b
    androidx.window.layout.adapter.WindowBackend windowBackend -> c
    1:1:void <init>(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.adapter.WindowBackend):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/m;Ly/a;)V"}
    1:1:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lc3/c;"}
    1:1:androidx.window.layout.adapter.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/i;)Ly/a;"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2 -> x.i$a:
    int label -> i
    java.lang.Object L$0 -> j
    androidx.window.layout.WindowInfoTrackerImpl this$0 -> k
    android.app.Activity $activity -> l
    1:1:void <init>(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/i;Landroid/app/Activity;Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
    1:1:void $r8$lambda$ZtyEPDD_2v4gDwMCwKS3X4pa0JY(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Lx/j;)V"}
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Li2/d;)Ljava/lang/Object;"}
    1:1:void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Lx/j;)V"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$ExternalSyntheticLambda0 -> x.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlinx.coroutines.channels.ProducerScope androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.f$0 -> a
    1:1:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.<init>(kotlinx.coroutines.channels.ProducerScope):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;)V"}
    1:1:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2 -> x.i$a$a:
    androidx.window.layout.WindowInfoTrackerImpl this$0 -> f
    androidx.core.util.Consumer $listener -> g
    1:1:void <init>(androidx.window.layout.WindowInfoTrackerImpl,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/i;Lh/a;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
androidx.window.layout.WindowLayoutInfo -> x.j:
    java.util.List displayFeatures -> a
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:java.util.List getDisplayFeatures():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.WindowMetrics -> x.k:
    androidx.window.core.Bounds _bounds -> a
    androidx.core.view.WindowInsetsCompat _windowInsetsCompat -> b
    1:1:void <init>(android.graphics.Rect,androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroidx/core/view/l;)V"}
    2:2:void <init>(android.graphics.Rect,androidx.core.view.WindowInsetsCompat,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroidx/core/view/l;ILs2/g;)V"}
    3:3:void <init>(androidx.window.core.Bounds,androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;Landroidx/core/view/l;)V"}
    1:1:android.graphics.Rect getBounds():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.WindowMetricsCalculator -> x.m:
    androidx.window.layout.WindowMetricsCalculator$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lx/k;"}
androidx.window.layout.WindowMetricsCalculator$-CC -> x.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    1:7:androidx.window.layout.WindowMetricsCalculator androidx.window.layout.WindowMetricsCalculator.getOrCreate():0:0 -> a
    1:7:androidx.window.layout.WindowMetricsCalculator getOrCreate():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/m;"}
androidx.window.layout.WindowMetricsCalculator$Companion -> x.m$a:
    androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE -> a
    kotlin.jvm.functions.Function1 decorator -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowMetricsCalculator getOrCreate():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/m;"}
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 -> x.m$a$a:
    androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/m;)Lx/m;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
androidx.window.layout.WindowMetricsCalculatorCompat -> x.p:
    androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE -> b
    java.lang.String TAG -> c
    java.util.ArrayList insetsTypeMasks -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lx/k;"}
    1:1:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lx/k;"}
    1:1:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lx/k;"}
    1:1:androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lx/k;"}
    1:1:android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity):0:0 -> e
    1:1:android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity):0:0 -> f
    1:1:android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity):0:0 -> g
    1:1:android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity):0:0 -> h
    1:1:androidx.core.view.WindowInsetsCompat computeWindowInsetsCompat$window_release(android.content.Context):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/view/l;"}
    1:1:android.view.DisplayCutout getCutoutForDisplay(android.view.Display):0:0 -> j
    1:1:int getNavigationBarHeight(android.content.Context):0:0 -> k
    1:1:android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display):0:0 -> l
    1:1:void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect):0:0 -> m
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline0 -> x.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$2$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline1 -> x.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$2$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.adapter.WindowBackend -> y.a:
    void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lh/a;)V"}
    void unregisterLayoutChangeCallback(androidx.core.util.Consumer) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackend -> z.a:
    androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion -> z.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.window.layout.adapter.WindowBackend newInstance(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/extensions/layout/WindowLayoutComponent;Lu/d;)Ly/a;"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0 -> z.c:
    void <init>() -> <init>
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
    1:1:void $r8$lambda$FIKlvhyEFY0ibeYIXQhlkJ0r6sg(androidx.core.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
    1:1:void registerLayoutChangeCallback$lambda$0(androidx.core.util.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$ExternalSyntheticLambda0 -> z.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.util.Consumer androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.f$0 -> e
    1:1:void androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.<init>(androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
    1:1:void androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1 -> z.d:
    androidx.window.extensions.layout.WindowLayoutComponent component -> a
    androidx.window.core.ConsumerAdapter consumerAdapter -> b
    java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock -> c
    java.util.Map contextToListeners -> d
    java.util.Map listenerToContext -> e
    java.util.Map consumerToToken -> f
    1:1:void <init>(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/extensions/layout/WindowLayoutComponent;Lu/d;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1 -> z.d$a:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> k
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2 -> z.e:
    androidx.window.extensions.layout.WindowLayoutComponent component -> a
    java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock -> b
    java.util.Map contextToListeners -> c
    java.util.Map listenerToContext -> d
    1:1:void <init>(androidx.window.extensions.layout.WindowLayoutComponent):0:0 -> <init>
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter -> z.f:
    androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.FoldingFeature translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.FoldingFeature):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k;Landroidx/window/extensions/layout/FoldingFeature;)Lx/c;"}
    1:1:androidx.window.layout.WindowLayoutInfo translate$window_release(android.content.Context,androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/window/extensions/layout/WindowLayoutInfo;)Lx/j;"}
    1:1:androidx.window.layout.WindowLayoutInfo translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k;Landroidx/window/extensions/layout/WindowLayoutInfo;)Lx/j;"}
    1:1:boolean validBounds(androidx.window.layout.WindowMetrics,androidx.window.core.Bounds):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k;Lu/b;)Z"}
androidx.window.layout.adapter.extensions.MulticastConsumer -> z.g:
    android.content.Context context -> a
    java.util.concurrent.locks.ReentrantLock multicastConsumerLock -> b
    androidx.window.layout.WindowLayoutInfo lastKnownValue -> c
    java.util.Set registeredListeners -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void accept(androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> a
    1:1:void accept(java.lang.Object):0:0 -> accept
    1:1:void addListener(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
    1:1:boolean isEmpty():0:0 -> c
    1:1:void removeListener(androidx.core.util.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback -> androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback:
    java.lang.Object mLock -> a
    androidx.window.sidecar.SidecarDeviceState mLastDeviceState -> b
    java.util.Map mActivityWindowLayoutInfo -> c
    androidx.window.layout.adapter.sidecar.SidecarAdapter mAdapter -> d
    androidx.window.sidecar.SidecarInterface$SidecarCallback mCallback -> e
    1:1:void <init>(androidx.window.layout.adapter.sidecar.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La0/a;Landroidx/window/sidecar/SidecarInterface$SidecarCallback;)V"}
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat -> androidx.window.layout.adapter.sidecar.a:
    void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/a$a;)V"}
    void onWindowLayoutChangeListenerRemoved(android.app.Activity) -> b
    void onWindowLayoutChangeListenerAdded(android.app.Activity) -> c
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface -> androidx.window.layout.adapter.sidecar.a$a:
    void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lx/j;)V"}
androidx.window.layout.adapter.sidecar.SidecarAdapter -> a0.a:
    androidx.window.core.VerificationMode verificationMode -> a
    androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion Companion -> b
    java.lang.String TAG -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.window.core.VerificationMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;)V"}
    2:2:void <init>(androidx.window.core.VerificationMode,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;ILs2/g;)V"}
    1:1:boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState):0:0 -> a
    1:1:boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature):0:0 -> b
    1:1:boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List):0:0 -> c
    1:1:boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo):0:0 -> d
    1:1:java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState):0:0 -> e
    1:1:androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarWindowLayoutInfo;Landroidx/window/sidecar/SidecarDeviceState;)Lx/j;"}
    1:1:androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarDisplayFeature;Landroidx/window/sidecar/SidecarDeviceState;)Lx/a;"}
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion -> a0.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState):0:0 -> a
    1:1:int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState):0:0 -> b
    1:1:java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo):0:0 -> c
    1:1:void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int):0:0 -> d
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 -> a0.a$b:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 -> a0.a$c:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 -> a0.a$d:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 -> a0.a$e:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarCompat -> androidx.window.layout.adapter.sidecar.SidecarCompat:
    androidx.window.sidecar.SidecarInterface sidecar -> a
    androidx.window.layout.adapter.sidecar.SidecarAdapter sidecarAdapter -> b
    java.util.Map windowListenerRegisteredContexts -> c
    java.util.Map componentCallbackMap -> d
    androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback extensionCallback -> e
    androidx.window.layout.adapter.sidecar.SidecarCompat$Companion Companion -> f
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(androidx.window.sidecar.SidecarInterface,androidx.window.layout.adapter.sidecar.SidecarAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarInterface;La0/a;)V"}
    1:1:void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/a$a;)V"}
    1:1:void onWindowLayoutChangeListenerRemoved(android.app.Activity):0:0 -> b
    1:1:void onWindowLayoutChangeListenerAdded(android.app.Activity):0:0 -> c
    1:1:androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback access$getExtensionCallback$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/SidecarCompat;)Landroidx/window/layout/adapter/sidecar/SidecarCompat$b;"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/SidecarCompat;)La0/a;"}
    1:1:java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> f
    1:1:androidx.window.sidecar.SidecarInterface getSidecar():0:0 -> g
    1:1:androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lx/j;"}
    1:1:void register(android.os.IBinder,android.app.Activity):0:0 -> i
    1:1:void registerConfigurationChangeListener(android.app.Activity):0:0 -> j
    1:1:void unregisterComponentCallback(android.app.Activity):0:0 -> k
    1:1:boolean validateExtensionInterface():0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion -> androidx.window.layout.adapter.sidecar.SidecarCompat$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:android.os.IBinder getActivityWindowToken$window_release(android.app.Activity):0:0 -> a
    1:1:androidx.window.sidecar.SidecarInterface getSidecarCompat$window_release(android.content.Context):0:0 -> b
    1:1:androidx.window.core.Version getSidecarVersion():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/k;"}
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback -> androidx.window.layout.adapter.sidecar.SidecarCompat$b:
    androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.util.WeakHashMap activityWindowLayoutInfo -> c
    1:1:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lx/j;)V"}
    1:1:void clearWindowLayoutInfo(android.app.Activity):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter -> androidx.window.layout.adapter.sidecar.SidecarCompat$c:
    androidx.window.layout.adapter.sidecar.SidecarCompat sidecarCompat -> a
    java.lang.ref.WeakReference activityWeakReference -> b
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback -> androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback:
    androidx.window.layout.adapter.sidecar.SidecarCompat this$0 -> a
androidx.window.layout.adapter.sidecar.SidecarWindowBackend -> androidx.window.layout.adapter.sidecar.b:
    androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat windowExtension -> a
    java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks -> b
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion Companion -> c
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend globalInstance -> d
    java.util.concurrent.locks.ReentrantLock globalLock -> e
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarWindowBackend access$getGlobalInstance$cp():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/window/layout/adapter/sidecar/b;"}
    1:1:java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp():0:0 -> d
    1:1:void access$setGlobalInstance$cp(androidx.window.layout.adapter.sidecar.SidecarWindowBackend):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b;)V"}
    1:1:void callbackRemovedForActivity(android.app.Activity):0:0 -> f
    1:1:java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks():0:0 -> g
    1:1:boolean isActivityRegistered(android.app.Activity):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion -> androidx.window.layout.adapter.sidecar.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarWindowBackend getInstance(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/window/layout/adapter/sidecar/b;"}
    1:1:androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/window/layout/adapter/sidecar/a;"}
    1:1:boolean isSidecarVersionSupported(androidx.window.core.Version):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/k;)Z"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl -> androidx.window.layout.adapter.sidecar.b$b:
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend this$0 -> a
    1:1:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lx/j;)V"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper -> androidx.window.layout.adapter.sidecar.b$c:
    android.app.Activity activity -> a
    java.util.concurrent.Executor executor -> b
    androidx.core.util.Consumer callback -> c
    androidx.window.layout.WindowLayoutInfo lastInfo -> d
    1:1:void <init>(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void $r8$lambda$1Fzggiz8q3lTHWyU2mIB89dvBzk(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Lx/j;)V"}
    1:1:void accept(androidx.window.layout.WindowLayoutInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/j;)V"}
    1:1:void accept$lambda$0(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Lx/j;)V"}
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:androidx.core.util.Consumer getCallback():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh/a;"}
    1:1:androidx.window.layout.WindowLayoutInfo getLastInfo():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/j;"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$ExternalSyntheticLambda0 -> a0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.f$0 -> e
    androidx.window.layout.WindowLayoutInfo androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.f$1 -> f
    1:1:void androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.<init>(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Lx/j;)V"}
    1:1:void androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ActivityCompatHelperApi24 -> b0.b:
    androidx.window.layout.util.ActivityCompatHelperApi24 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean isInMultiWindowMode(android.app.Activity):0:0 -> a
androidx.window.layout.util.ActivityCompatHelperApi24$$ExternalSyntheticApiModelOutline0 -> b0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.window.layout.util.ActivityCompatHelperApi24$$InternalSyntheticApiModelOutline$2$0a53b1046f1ef1f870f8d08ade93680249c65d8d02c6665a148e6f800cce17a3$0.m(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelper -> b0.c:
    androidx.window.layout.util.ContextCompatHelper INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.content.Context unwrapUiContext$window_release(android.content.Context):0:0 -> a
androidx.window.layout.util.ContextCompatHelperApi30 -> b0.i:
    androidx.window.layout.util.ContextCompatHelperApi30 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.graphics.Rect currentWindowBounds(android.content.Context):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/view/l;"}
    1:1:androidx.window.layout.WindowMetrics currentWindowMetrics(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lx/k;"}
    1:1:android.graphics.Rect maximumWindowBounds(android.content.Context):0:0 -> d
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline0 -> b0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$0.m(android.content.Context,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline1 -> b0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$1.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline2 -> b0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$2.m(android.view.WindowMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline3 -> b0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Rect androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$4.m(android.view.WindowMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline4 -> b0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$97041ee14f9e1ddb13491de6b1484cd9401e12caea0ce217570289610e813181$1.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi17 -> b0.j:
    androidx.window.layout.util.DisplayCompatHelperApi17 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void getRealSize(android.view.Display,android.graphics.Point):0:0 -> a
androidx.window.layout.util.DisplayCompatHelperApi28 -> b0.o:
    androidx.window.layout.util.DisplayCompatHelperApi28 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int safeInsetBottom(android.view.DisplayCutout):0:0 -> a
    1:1:int safeInsetLeft(android.view.DisplayCutout):0:0 -> b
    1:1:int safeInsetRight(android.view.DisplayCutout):0:0 -> c
    1:1:int safeInsetTop(android.view.DisplayCutout):0:0 -> d
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline0 -> b0.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$20bb7be1389f6bcde3259f8b4259e4c107c23f941b31730e635a09e9fbd4c61c$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline1 -> b0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$505db3e413fefb2baa6a7cf0abbcf0f5dba7beff88c12c454cd54159787c87cc$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline2 -> b0.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$8901a2b0072c331cfdcf81d5485321c9368020de8bb39106b857442a154ff29a$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline3 -> b0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$f0a1d90c774d23c902daed4582cbd925dc00be2e1d3a255d144a0377ed35c9db$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.reflection.ReflectionUtils -> c0.a:
    androidx.window.reflection.ReflectionUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean checkIsPresent$window_release(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)Z"}
    1:1:boolean doesReturn$window_release(java.lang.reflect.Method,java.lang.Class):0:0 -> b
    1:1:boolean doesReturn$window_release(java.lang.reflect.Method,kotlin.reflect.KClass):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Method;Lw2/b;)Z"}
    1:1:boolean isPublic$window_release(java.lang.reflect.Method):0:0 -> d
    1:1:boolean validateReflection$window_release(java.lang.String,kotlin.jvm.functions.Function0):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr2/a;)Z"}
com.bumptech.glide.GeneratedAppGlideModule -> com.bumptech.glide.GeneratedAppGlideModule:
    1:1:java.util.Set getExcludedModuleClasses():0:0 -> d
    1:1:com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory getRequestManagerFactory():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu0/q$b;"}
com.bumptech.glide.GenericTransitionOptions -> com.bumptech.glide.a:
com.bumptech.glide.Glide -> com.bumptech.glide.b:
    com.bumptech.glide.load.engine.Engine engine -> a
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> b
    com.bumptech.glide.load.engine.cache.MemoryCache memoryCache -> c
    com.bumptech.glide.GlideContext glideContext -> d
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> e
    com.bumptech.glide.manager.RequestManagerRetriever requestManagerRetriever -> f
    com.bumptech.glide.manager.ConnectivityMonitorFactory connectivityMonitorFactory -> g
    java.util.List managers -> h
    com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory -> i
    com.bumptech.glide.MemoryCategory memoryCategory -> j
    com.bumptech.glide.Glide glide -> k
    boolean isInitializing -> l
    1:1:void <init>(android.content.Context,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.manager.RequestManagerRetriever,com.bumptech.glide.manager.ConnectivityMonitorFactory,int,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,java.util.List,com.bumptech.glide.module.AppGlideModule,com.bumptech.glide.GlideExperiments):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh0/k;Lj0/h;Li0/d;Li0/b;Lu0/q;Lu0/d;ILcom/bumptech/glide/b$a;Ljava/util/Map;Ljava/util/List;Ljava/util/List;Lv0/a;Lcom/bumptech/glide/e;)V"}
    1:1:void checkAndInitializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule):0:0 -> a
    1:1:void clearDiskCache():0:0 -> b
    1:1:void clearMemory():0:0 -> c
    1:1:com.bumptech.glide.Glide get(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lcom/bumptech/glide/b;"}
    1:1:com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules(android.content.Context):0:0 -> e
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/b;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/d;"}
    1:1:com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu0/d;"}
    1:1:android.content.Context getContext():0:0 -> i
    1:1:com.bumptech.glide.GlideContext getGlideContext():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/d;"}
    1:1:com.bumptech.glide.Registry getRegistry():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu0/q;"}
    1:1:com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lu0/q;"}
    1:1:void initializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule):0:0 -> n
    1:1:void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder,com.bumptech.glide.GeneratedAppGlideModule):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/c;Lcom/bumptech/glide/GeneratedAppGlideModule;)V"}
    1:1:void registerRequestManager(com.bumptech.glide.RequestManager):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/k;)V"}
    1:1:boolean removeFromManagers(com.bumptech.glide.request.target.Target):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)Z"}
    1:1:void throwIncorrectGlideModule(java.lang.Exception):0:0 -> r
    1:1:void trimMemory(int):0:0 -> s
    1:1:void unregisterRequestManager(com.bumptech.glide.RequestManager):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/k;)V"}
    1:1:com.bumptech.glide.RequestManager with(android.content.Context):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lcom/bumptech/glide/k;"}
com.bumptech.glide.Glide$RequestOptionsFactory -> com.bumptech.glide.b$a:
    com.bumptech.glide.request.RequestOptions build() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/h;"}
com.bumptech.glide.GlideBuilder -> com.bumptech.glide.c:
    java.util.Map defaultTransitionOptions -> a
    com.bumptech.glide.GlideExperiments$Builder glideExperimentsBuilder -> b
    com.bumptech.glide.load.engine.Engine engine -> c
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> d
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> e
    com.bumptech.glide.load.engine.cache.MemoryCache memoryCache -> f
    com.bumptech.glide.load.engine.executor.GlideExecutor sourceExecutor -> g
    com.bumptech.glide.load.engine.executor.GlideExecutor diskCacheExecutor -> h
    com.bumptech.glide.load.engine.cache.DiskCache$Factory diskCacheFactory -> i
    com.bumptech.glide.load.engine.cache.MemorySizeCalculator memorySizeCalculator -> j
    com.bumptech.glide.manager.ConnectivityMonitorFactory connectivityMonitorFactory -> k
    int logLevel -> l
    com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory -> m
    com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory requestManagerFactory -> n
    com.bumptech.glide.load.engine.executor.GlideExecutor animationExecutor -> o
    boolean isActiveResourceRetentionAllowed -> p
    java.util.List defaultRequestListeners -> q
    1:1:com.bumptech.glide.Glide build(android.content.Context,java.util.List,com.bumptech.glide.module.AppGlideModule):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/List;Lv0/a;)Lcom/bumptech/glide/b;"}
    1:1:void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/q$b;)V"}
com.bumptech.glide.GlideBuilder$1 -> com.bumptech.glide.c$a:
    com.bumptech.glide.GlideBuilder this$0 -> a
    1:1:com.bumptech.glide.request.RequestOptions build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/h;"}
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps -> com.bumptech.glide.c$b:
com.bumptech.glide.GlideBuilder$LogRequestOrigins -> com.bumptech.glide.c$c:
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory -> com.bumptech.glide.c$d:
com.bumptech.glide.GlideContext -> com.bumptech.glide.d:
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> a
    com.bumptech.glide.util.GlideSuppliers$GlideSupplier registry -> b
    com.bumptech.glide.request.target.ImageViewTargetFactory imageViewTargetFactory -> c
    com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory -> d
    java.util.List defaultRequestListeners -> e
    java.util.Map defaultTransitionOptions -> f
    com.bumptech.glide.load.engine.Engine engine -> g
    com.bumptech.glide.GlideExperiments experiments -> h
    int logLevel -> i
    com.bumptech.glide.request.RequestOptions defaultRequestOptions -> j
    com.bumptech.glide.TransitionOptions DEFAULT_TRANSITION_OPTIONS -> k
    1:1:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.util.GlideSuppliers$GlideSupplier,com.bumptech.glide.request.target.ImageViewTargetFactory,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.GlideExperiments,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li0/b;Lb1/f$b;Ly0/b;Lcom/bumptech/glide/b$a;Ljava/util/Map;Ljava/util/List;Lh0/k;Lcom/bumptech/glide/e;I)V"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/b;"}
    1:1:java.util.List getDefaultRequestListeners():0:0 -> b
    1:1:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/h;"}
    1:1:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lcom/bumptech/glide/l;"}
    1:1:com.bumptech.glide.load.engine.Engine getEngine():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/k;"}
    1:1:com.bumptech.glide.GlideExperiments getExperiments():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/e;"}
    1:1:int getLogLevel():0:0 -> g
    1:1:com.bumptech.glide.Registry getRegistry():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/h;"}
com.bumptech.glide.GlideExperiments -> com.bumptech.glide.e:
    java.util.Map experiments -> a
    1:1:boolean isEnabled(java.lang.Class):0:0 -> a
com.bumptech.glide.GlideExperiments$Builder -> com.bumptech.glide.e$a:
    java.util.Map experiments -> a
    1:1:java.util.Map access$000(com.bumptech.glide.GlideExperiments$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/e$a;)Ljava/util/Map;"}
    1:1:com.bumptech.glide.GlideExperiments build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/e;"}
com.bumptech.glide.MemoryCategory -> com.bumptech.glide.f:
    float multiplier -> e
    com.bumptech.glide.MemoryCategory LOW -> f
    com.bumptech.glide.MemoryCategory NORMAL -> g
    com.bumptech.glide.MemoryCategory HIGH -> h
    com.bumptech.glide.MemoryCategory[] $VALUES -> i
com.bumptech.glide.Priority -> com.bumptech.glide.g:
    com.bumptech.glide.Priority IMMEDIATE -> e
    com.bumptech.glide.Priority HIGH -> f
    com.bumptech.glide.Priority NORMAL -> g
    com.bumptech.glide.Priority LOW -> h
    com.bumptech.glide.Priority[] $VALUES -> i
com.bumptech.glide.Registry -> com.bumptech.glide.h:
    com.bumptech.glide.load.model.ModelLoaderRegistry modelLoaderRegistry -> a
    com.bumptech.glide.provider.EncoderRegistry encoderRegistry -> b
    com.bumptech.glide.provider.ResourceDecoderRegistry decoderRegistry -> c
    com.bumptech.glide.provider.ResourceEncoderRegistry resourceEncoderRegistry -> d
    com.bumptech.glide.load.data.DataRewinderRegistry dataRewinderRegistry -> e
    com.bumptech.glide.load.resource.transcode.TranscoderRegistry transcoderRegistry -> f
    com.bumptech.glide.provider.ImageHeaderParserRegistry imageHeaderParserRegistry -> g
    com.bumptech.glide.provider.ModelToResourceClassCache modelToResourceClassCache -> h
    com.bumptech.glide.provider.LoadPathCache loadPathCache -> i
    androidx.core.util.Pools$Pool throwableListPool -> j
    1:1:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/d;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/k;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Lf0/j;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ll0/o;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lf0/j;)Lcom/bumptech/glide/h;"}
    1:1:java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> f
    1:1:java.util.List getImageHeaderParsers():0:0 -> g
    1:1:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lh0/t;"}
    1:1:java.util.List getModelLoaders(java.lang.Object):0:0 -> i
    1:1:java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> j
    1:1:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Lf0/k;"}
    1:1:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
    1:1:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lf0/d;"}
    1:1:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Z"}
    1:1:com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e$a;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Lt0/e;)Lcom/bumptech/glide/h;"}
    1:1:com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lcom/bumptech/glide/h;"}
com.bumptech.glide.Registry$MissingComponentException -> com.bumptech.glide.h$a:
com.bumptech.glide.Registry$NoImageHeaderParserException -> com.bumptech.glide.h$b:
com.bumptech.glide.Registry$NoModelLoaderAvailableException -> com.bumptech.glide.h$c:
    1:1:void <init>(java.lang.Class,java.lang.Class):0:0 -> <init>
    2:2:void <init>(java.lang.Object):0:0 -> <init>
    3:3:void <init>(java.lang.Object,java.util.List):0:0 -> <init>
com.bumptech.glide.Registry$NoResultEncoderAvailableException -> com.bumptech.glide.h$d:
com.bumptech.glide.Registry$NoSourceEncoderAvailableException -> com.bumptech.glide.h$e:
com.bumptech.glide.RegistryFactory -> com.bumptech.glide.i:
    1:1:com.bumptech.glide.Registry createAndInitRegistry(com.bumptech.glide.Glide,java.util.List,com.bumptech.glide.module.AppGlideModule):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Ljava/util/List;Lv0/a;)Lcom/bumptech/glide/h;"}
    1:1:void initializeDefaults(android.content.Context,com.bumptech.glide.Registry,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.GlideExperiments):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/h;Li0/d;Li0/b;Lcom/bumptech/glide/e;)V"}
    1:1:void initializeModules(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry,java.util.List,com.bumptech.glide.module.AppGlideModule):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/b;Lcom/bumptech/glide/h;Ljava/util/List;Lv0/a;)V"}
    1:1:com.bumptech.glide.util.GlideSuppliers$GlideSupplier lazilyCreateAndInitializeRegistry(com.bumptech.glide.Glide,java.util.List,com.bumptech.glide.module.AppGlideModule):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Ljava/util/List;Lv0/a;)Lb1/f$b;"}
com.bumptech.glide.RegistryFactory$1 -> com.bumptech.glide.i$a:
    boolean isInitializing -> a
    com.bumptech.glide.Glide val$glide -> b
    java.util.List val$manifestModules -> c
    com.bumptech.glide.module.AppGlideModule val$annotationGeneratedModule -> d
    1:1:void <init>(com.bumptech.glide.Glide,java.util.List,com.bumptech.glide.module.AppGlideModule):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Ljava/util/List;Lv0/a;)V"}
    1:1:com.bumptech.glide.Registry get():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/h;"}
com.bumptech.glide.RequestBuilder -> com.bumptech.glide.j:
    android.content.Context context -> E
    com.bumptech.glide.RequestManager requestManager -> F
    java.lang.Class transcodeClass -> G
    com.bumptech.glide.Glide glide -> H
    com.bumptech.glide.GlideContext glideContext -> I
    com.bumptech.glide.TransitionOptions transitionOptions -> J
    java.lang.Object model -> K
    java.util.List requestListeners -> L
    com.bumptech.glide.RequestBuilder thumbnailBuilder -> M
    com.bumptech.glide.RequestBuilder errorBuilder -> N
    java.lang.Float thumbSizeMultiplier -> O
    boolean isDefaultTransitionOptionsSet -> P
    boolean isModelSet -> Q
    boolean isThumbnailBuilt -> R
    com.bumptech.glide.request.RequestOptions DOWNLOAD_ONLY_OPTIONS -> S
    1:1:com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/g;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.RequestBuilder apply(com.bumptech.glide.request.BaseRequestOptions):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/a;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.RequestBuilder applyResourceThemeAndSignature(com.bumptech.glide.RequestBuilder):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/j;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;Lx0/g;Lx0/a;Ljava/util/concurrent/Executor;)Lx0/d;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/a;)Lx0/a;"}
    1:1:com.bumptech.glide.request.Request buildRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ly0/d;Lx0/g;Lx0/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/g;IILx0/a;Ljava/util/concurrent/Executor;)Lx0/d;"}
    1:1:com.bumptech.glide.request.Request buildThumbnailRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ly0/d;Lx0/g;Lx0/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/g;IILx0/a;Ljava/util/concurrent/Executor;)Lx0/d;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions clone():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/a;"}
    1:1:com.bumptech.glide.RequestBuilder clone():0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;)Lcom/bumptech/glide/g;"}
    1:1:void initRequestListeners(java.util.List):0:0 -> e0
    1:1:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)Ly0/d;"}
    1:1:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;Lx0/g;Ljava/util/concurrent/Executor;)Ly0/d;"}
    1:1:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;Lx0/g;Lx0/a;Ljava/util/concurrent/Executor;)Ly0/d;"}
    1:1:boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/a;Lx0/d;)Z"}
    1:1:com.bumptech.glide.RequestBuilder load(android.net.Uri):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.RequestBuilder load(java.lang.Object):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.RequestBuilder load(java.lang.String):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.RequestBuilder maybeApplyOptionsResourceUri(android.net.Uri,com.bumptech.glide.RequestBuilder):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lcom/bumptech/glide/j;)Lcom/bumptech/glide/j;"}
    1:1:com.bumptech.glide.request.Request obtainRequest(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,java.util.concurrent.Executor):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ly0/d;Lx0/g;Lx0/a;Lx0/e;Lcom/bumptech/glide/l;Lcom/bumptech/glide/g;IILjava/util/concurrent/Executor;)Lx0/d;"}
    1:1:com.bumptech.glide.request.FutureTarget submit(int,int):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lx0/c;"}
com.bumptech.glide.RequestBuilder$1 -> com.bumptech.glide.j$a:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
    int[] $SwitchMap$com$bumptech$glide$Priority -> b
com.bumptech.glide.RequestManager -> com.bumptech.glide.k:
    com.bumptech.glide.Glide glide -> a
    android.content.Context context -> b
    com.bumptech.glide.manager.Lifecycle lifecycle -> c
    com.bumptech.glide.manager.RequestTracker requestTracker -> d
    com.bumptech.glide.manager.RequestManagerTreeNode treeNode -> e
    com.bumptech.glide.manager.TargetTracker targetTracker -> f
    java.lang.Runnable addSelfToLifecycle -> g
    com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor -> h
    java.util.concurrent.CopyOnWriteArrayList defaultRequestListeners -> i
    com.bumptech.glide.request.RequestOptions requestOptions -> j
    boolean pauseAllRequestsOnTrimMemoryModerate -> k
    com.bumptech.glide.request.RequestOptions DECODE_TYPE_BITMAP -> l
    com.bumptech.glide.request.RequestOptions DECODE_TYPE_GIF -> m
    com.bumptech.glide.request.RequestOptions DOWNLOAD_ONLY_OPTIONS -> n
    1:1:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Lu0/l;Lu0/r;Landroid/content/Context;)V"}
    2:2:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Lu0/l;Lu0/r;Lu0/s;Lu0/d;Landroid/content/Context;)V"}
    1:1:void onStart():0:0 -> a
    1:1:com.bumptech.glide.RequestBuilder as(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lcom/bumptech/glide/j;"}
    1:1:void onStop():0:0 -> g
    1:1:com.bumptech.glide.RequestBuilder asBitmap():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/j;"}
    1:1:void onDestroy():0:0 -> l
    1:1:void clear(com.bumptech.glide.request.target.Target):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)V"}
    1:1:java.util.List getDefaultRequestListeners():0:0 -> o
    1:1:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/h;"}
    1:1:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lcom/bumptech/glide/l;"}
    1:1:void pauseAllRequests():0:0 -> r
    1:1:void pauseAllRequestsRecursive():0:0 -> s
    1:1:void pauseRequests():0:0 -> t
    1:1:void resumeRequests():0:0 -> u
    1:1:void setRequestOptions(com.bumptech.glide.request.RequestOptions):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/h;)V"}
    1:1:void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;Lx0/d;)V"}
    1:1:boolean untrack(com.bumptech.glide.request.target.Target):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)Z"}
    1:1:void untrackOrDelegate(com.bumptech.glide.request.target.Target):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)V"}
com.bumptech.glide.RequestManager$1 -> com.bumptech.glide.k$a:
    com.bumptech.glide.RequestManager this$0 -> e
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener -> com.bumptech.glide.k$b:
    com.bumptech.glide.manager.RequestTracker requestTracker -> a
    com.bumptech.glide.RequestManager this$0 -> b
    1:1:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.RequestTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/k;Lu0/s;)V"}
    1:1:void onConnectivityChanged(boolean):0:0 -> a
com.bumptech.glide.TransitionOptions -> com.bumptech.glide.l:
    com.bumptech.glide.request.transition.TransitionFactory transitionFactory -> e
    1:1:com.bumptech.glide.TransitionOptions clone():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/l;"}
    1:1:com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz0/c;"}
com.bumptech.glide.disklrucache.DiskLruCache -> d0.b:
    java.io.File directory -> e
    java.io.File journalFile -> f
    java.io.File journalFileTmp -> g
    java.io.File journalFileBackup -> h
    int appVersion -> i
    long maxSize -> j
    int valueCount -> k
    long size -> l
    java.io.Writer journalWriter -> m
    java.util.LinkedHashMap lruEntries -> n
    int redundantOpCount -> o
    long nextSequenceNumber -> p
    java.util.concurrent.ThreadPoolExecutor executorService -> q
    java.util.concurrent.Callable cleanupCallable -> r
    1:1:void <init>(java.io.File,int,int,long):0:0 -> <init>
    1:1:java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)Ljava/io/Writer;"}
    1:1:int access$1900(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)I"}
    1:1:void access$200(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)V"}
    1:1:void close():0:0 -> close
    1:1:java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)Ljava/io/File;"}
    1:1:void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ld0/b$c;Z)V"}
    1:1:boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)Z"}
    1:1:void access$400(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)V"}
    1:1:int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;I)I"}
    1:1:void checkNotClosed():0:0 -> i
    1:1:void closeWriter(java.io.Writer):0:0 -> j
    1:1:void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$c;Z)V"}
    1:1:void delete():0:0 -> l
    1:1:void deleteIfExists(java.io.File):0:0 -> m
    1:1:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ld0/b$c;"}
    1:1:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;J)Ld0/b$c;"}
    1:1:void flushWriter(java.io.Writer):0:0 -> p
    1:1:com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ld0/b$e;"}
    1:1:boolean journalRebuildRequired():0:0 -> r
    1:1:com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;IIJ)Ld0/b;"}
    1:1:void processJournal():0:0 -> t
    1:1:void readJournal():0:0 -> u
    1:1:void readJournalLine(java.lang.String):0:0 -> v
    1:1:void rebuildJournal():0:0 -> w
    1:1:boolean remove(java.lang.String):0:0 -> x
    1:1:void renameTo(java.io.File,java.io.File,boolean):0:0 -> y
    1:1:void trimToSize():0:0 -> z
com.bumptech.glide.disklrucache.DiskLruCache$$ExternalSyntheticApiModelOutline0 -> d0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.StrictMode$ThreadPolicy$Builder com.bumptech.glide.disklrucache.DiskLruCache$$InternalSyntheticApiModelOutline$2$09dee791f0d8e3792a0c159b1e8bd38cab0f33d4e1e1fbf8b0359e33b18d5a8e$0.m(android.os.StrictMode$ThreadPolicy$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.disklrucache.DiskLruCache$1 -> d0.b$a:
    com.bumptech.glide.disklrucache.DiskLruCache this$0 -> a
    1:1:void <init>(com.bumptech.glide.disklrucache.DiskLruCache):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;)V"}
    1:1:java.lang.Void call():0:0 -> a
    1:1:java.lang.Object call():0:0 -> call
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory -> d0.b$b:
    void <init>() -> <init>
    1:1:void <init>(com.bumptech.glide.disklrucache.DiskLruCache$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$a;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
com.bumptech.glide.disklrucache.DiskLruCache$Editor -> d0.b$c:
    com.bumptech.glide.disklrucache.DiskLruCache$Entry entry -> a
    boolean[] written -> b
    boolean committed -> c
    com.bumptech.glide.disklrucache.DiskLruCache this$0 -> d
    1:1:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ld0/b$d;)V"}
    2:2:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ld0/b$d;Ld0/b$a;)V"}
    1:1:void abort():0:0 -> a
    1:1:void abortUnlessCommitted():0:0 -> b
    1:1:com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$c;)Ld0/b$d;"}
    1:1:boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$c;)[Z"}
    1:1:void commit():0:0 -> e
    1:1:java.io.File getFile(int):0:0 -> f
com.bumptech.glide.disklrucache.DiskLruCache$Entry -> d0.b$d:
    java.lang.String key -> a
    long[] lengths -> b
    java.io.File[] cleanFiles -> c
    java.io.File[] dirtyFiles -> d
    boolean readable -> e
    com.bumptech.glide.disklrucache.DiskLruCache$Editor currentEditor -> f
    long sequenceNumber -> g
    com.bumptech.glide.disklrucache.DiskLruCache this$0 -> h
    1:1:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ljava/lang/String;)V"}
    2:2:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ljava/lang/String;Ld0/b$a;)V"}
    1:1:long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;)[J"}
    1:1:java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;)Ljava/lang/String;"}
    1:1:long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;)J"}
    1:1:long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;J)J"}
    1:1:boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;)Z"}
    1:1:boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;Z)Z"}
    1:1:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;)Ld0/b$c;"}
    1:1:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;Ld0/b$c;)Ld0/b$c;"}
    1:1:void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b$d;[Ljava/lang/String;)V"}
    1:1:java.io.File getCleanFile(int):0:0 -> j
    1:1:java.io.File getDirtyFile(int):0:0 -> k
    1:1:java.lang.String getLengths():0:0 -> l
    1:1:java.io.IOException invalidLengths(java.lang.String[]):0:0 -> m
    1:1:void setLengths(java.lang.String[]):0:0 -> n
com.bumptech.glide.disklrucache.DiskLruCache$Value -> d0.b$e:
    java.lang.String key -> a
    long sequenceNumber -> b
    long[] lengths -> c
    java.io.File[] files -> d
    com.bumptech.glide.disklrucache.DiskLruCache this$0 -> e
    1:1:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ljava/lang/String;J[Ljava/io/File;[J)V"}
    2:2:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/b;Ljava/lang/String;J[Ljava/io/File;[JLd0/b$a;)V"}
    1:1:java.io.File getFile(int):0:0 -> a
com.bumptech.glide.disklrucache.StrictLineReader -> d0.c:
    java.io.InputStream in -> e
    java.nio.charset.Charset charset -> f
    byte[] buf -> g
    int pos -> h
    int end -> i
    1:1:void <init>(java.io.InputStream,int,java.nio.charset.Charset):0:0 -> <init>
    2:2:void <init>(java.io.InputStream,java.nio.charset.Charset):0:0 -> <init>
    1:1:java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/c;)Ljava/nio/charset/Charset;"}
    1:1:void fillBuf():0:0 -> b
    1:1:boolean hasUnterminatedLine():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:java.lang.String readLine():0:0 -> d
com.bumptech.glide.disklrucache.StrictLineReader$1 -> d0.c$a:
    com.bumptech.glide.disklrucache.StrictLineReader this$0 -> e
    1:1:void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld0/c;I)V"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.disklrucache.Util -> d0.d:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void closeQuietly(java.io.Closeable):0:0 -> a
    1:1:void deleteContents(java.io.File):0:0 -> b
com.bumptech.glide.gifdecoder.GifDecoder -> e0.a:
    int getCurrentFrameIndex() -> a
    int getByteSize() -> b
    void setDefaultBitmapConfig(android.graphics.Bitmap$Config) -> c
    void clear() -> clear
    android.graphics.Bitmap getNextFrame() -> d
    void advance() -> e
    int getFrameCount() -> f
    int getNextDelay() -> g
    java.nio.ByteBuffer getData() -> h
    void resetFrameIndex() -> i
com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider -> e0.a$a:
    int[] obtainIntArray(int) -> a
    android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> b
    void release(byte[]) -> c
    void release(android.graphics.Bitmap) -> d
    byte[] obtainByteArray(int) -> e
    void release(int[]) -> f
com.bumptech.glide.gifdecoder.GifFrame -> e0.b:
    int ix -> a
    int iy -> b
    int iw -> c
    int ih -> d
    boolean interlace -> e
    boolean transparency -> f
    int dispose -> g
    int transIndex -> h
    int delay -> i
    int bufferFrameStart -> j
    int[] lct -> k
    void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifHeader -> e0.c:
    int[] gct -> a
    int status -> b
    int frameCount -> c
    com.bumptech.glide.gifdecoder.GifFrame currentFrame -> d
    java.util.List frames -> e
    int width -> f
    int height -> g
    boolean gctFlag -> h
    int gctSize -> i
    int bgIndex -> j
    int pixelAspect -> k
    int bgColor -> l
    int loopCount -> m
    1:1:void <init>():0:0 -> <init>
    1:1:int getHeight():0:0 -> a
    1:1:int getNumFrames():0:0 -> b
    1:1:int getStatus():0:0 -> c
    1:1:int getWidth():0:0 -> d
com.bumptech.glide.gifdecoder.GifHeaderParser -> e0.d:
    byte[] block -> a
    java.nio.ByteBuffer rawData -> b
    com.bumptech.glide.gifdecoder.GifHeader header -> c
    int blockSize -> d
    1:1:void <init>():0:0 -> <init>
    1:1:void clear():0:0 -> a
    1:1:boolean err():0:0 -> b
    1:1:com.bumptech.glide.gifdecoder.GifHeader parseHeader():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/c;"}
    1:1:int read():0:0 -> d
    1:1:void readBitmap():0:0 -> e
    1:1:void readBlock():0:0 -> f
    1:1:int[] readColorTable(int):0:0 -> g
    1:1:void readContents():0:0 -> h
    1:1:void readContents(int):0:0 -> i
    1:1:void readGraphicControlExt():0:0 -> j
    1:1:void readHeader():0:0 -> k
    1:1:void readLSD():0:0 -> l
    1:1:void readNetscapeExt():0:0 -> m
    1:1:int readShort():0:0 -> n
    1:1:void reset():0:0 -> o
    1:1:com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Le0/d;"}
    1:1:void skip():0:0 -> q
    1:1:void skipImageData():0:0 -> r
com.bumptech.glide.gifdecoder.StandardGifDecoder -> e0.e:
    int[] act -> a
    int[] pct -> b
    com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider bitmapProvider -> c
    java.nio.ByteBuffer rawData -> d
    byte[] block -> e
    short[] prefix -> f
    byte[] suffix -> g
    byte[] pixelStack -> h
    byte[] mainPixels -> i
    int[] mainScratch -> j
    int framePointer -> k
    com.bumptech.glide.gifdecoder.GifHeader header -> l
    android.graphics.Bitmap previousImage -> m
    boolean savePrevious -> n
    int status -> o
    int sampleSize -> p
    int downsampledHeight -> q
    int downsampledWidth -> r
    java.lang.Boolean isFirstFrameTransparent -> s
    android.graphics.Bitmap$Config bitmapConfig -> t
    java.lang.String TAG -> u
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a$a;)V"}
    2:2:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a$a;Le0/c;Ljava/nio/ByteBuffer;I)V"}
    1:1:int getCurrentFrameIndex():0:0 -> a
    1:1:int getByteSize():0:0 -> b
    1:1:void setDefaultBitmapConfig(android.graphics.Bitmap$Config):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:android.graphics.Bitmap getNextFrame():0:0 -> d
    1:1:void advance():0:0 -> e
    1:1:int getFrameCount():0:0 -> f
    1:1:int getNextDelay():0:0 -> g
    1:1:java.nio.ByteBuffer getData():0:0 -> h
    1:1:void resetFrameIndex():0:0 -> i
    1:1:int averageColorsNear(int,int,int):0:0 -> j
    1:1:void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/b;)V"}
    1:1:void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/b;)V"}
    1:1:void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/b;)V"}
    1:1:int getDelay(int):0:0 -> n
    1:1:android.graphics.Bitmap getNextBitmap():0:0 -> o
    1:1:int readBlock():0:0 -> p
    1:1:int readByte():0:0 -> q
    1:1:void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/c;Ljava/nio/ByteBuffer;I)V"}
    1:1:android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/b;Le0/b;)Landroid/graphics/Bitmap;"}
com.bumptech.glide.load.DataSource -> f0.a:
    com.bumptech.glide.load.DataSource LOCAL -> e
    com.bumptech.glide.load.DataSource REMOTE -> f
    com.bumptech.glide.load.DataSource DATA_DISK_CACHE -> g
    com.bumptech.glide.load.DataSource RESOURCE_DISK_CACHE -> h
    com.bumptech.glide.load.DataSource MEMORY_CACHE -> i
    com.bumptech.glide.load.DataSource[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.DataSource valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lf0/a;"}
    1:1:com.bumptech.glide.load.DataSource[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lf0/a;"}
com.bumptech.glide.load.DecodeFormat -> f0.b:
    com.bumptech.glide.load.DecodeFormat PREFER_ARGB_8888 -> e
    com.bumptech.glide.load.DecodeFormat PREFER_RGB_565 -> f
    com.bumptech.glide.load.DecodeFormat DEFAULT -> g
    com.bumptech.glide.load.DecodeFormat[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lf0/b;"}
    1:1:com.bumptech.glide.load.DecodeFormat[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lf0/b;"}
com.bumptech.glide.load.EncodeStrategy -> f0.c:
    com.bumptech.glide.load.EncodeStrategy SOURCE -> e
    com.bumptech.glide.load.EncodeStrategy TRANSFORMED -> f
    com.bumptech.glide.load.EncodeStrategy NONE -> g
    com.bumptech.glide.load.EncodeStrategy[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lf0/c;"}
    1:1:com.bumptech.glide.load.EncodeStrategy[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lf0/c;"}
com.bumptech.glide.load.Encoder -> f0.d:
    boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/io/File;Lf0/h;)Z"}
com.bumptech.glide.load.HttpException -> f0.e:
    int statusCode -> e
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int):0:0 -> <init>
    3:3:void <init>(java.lang.String,int,java.lang.Throwable):0:0 -> <init>
com.bumptech.glide.load.ImageHeaderParser -> com.bumptech.glide.load.ImageHeaderParser:
    com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> a
    int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Li0/b;)I"}
    int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;)I"}
    com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> d
com.bumptech.glide.load.ImageHeaderParser$1 -> com.bumptech.glide.load.ImageHeaderParser$a:
    int[] $SwitchMap$com$bumptech$glide$load$ImageHeaderParser$ImageType -> a
com.bumptech.glide.load.ImageHeaderParser$ImageType -> com.bumptech.glide.load.ImageHeaderParser$ImageType:
    boolean hasAlpha -> e
com.bumptech.glide.load.ImageHeaderParserUtils -> com.bumptech.glide.load.a:
    1:1:int getOrientation(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Li0/b;)I"}
    1:1:int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/io/InputStream;Li0/b;)I"}
    1:1:int getOrientation(java.util.List,java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/nio/ByteBuffer;Li0/b;)I"}
    1:1:int getOrientationInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lcom/bumptech/glide/load/a$g;)I"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Li0/b;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/io/InputStream;Li0/b;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer):0:0 -> g
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lcom/bumptech/glide/load/a$h;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;"}
com.bumptech.glide.load.ImageHeaderParserUtils$1 -> com.bumptech.glide.load.a$a:
    java.io.InputStream val$finalIs -> a
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
com.bumptech.glide.load.ImageHeaderParserUtils$2 -> com.bumptech.glide.load.a$b:
    java.nio.ByteBuffer val$buffer -> a
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
com.bumptech.glide.load.ImageHeaderParserUtils$3 -> com.bumptech.glide.load.a$c:
    com.bumptech.glide.load.data.ParcelFileDescriptorRewinder val$parcelFileDescriptorRewinder -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$byteArrayPool -> b
    1:1:void <init>(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Li0/b;)V"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
com.bumptech.glide.load.ImageHeaderParserUtils$4 -> com.bumptech.glide.load.a$d:
    java.nio.ByteBuffer val$buffer -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$arrayPool -> b
    1:1:void <init>(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Li0/b;)V"}
    1:1:int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
com.bumptech.glide.load.ImageHeaderParserUtils$5 -> com.bumptech.glide.load.a$e:
    java.io.InputStream val$finalIs -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$byteArrayPool -> b
    1:1:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;)V"}
    1:1:int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
com.bumptech.glide.load.ImageHeaderParserUtils$6 -> com.bumptech.glide.load.a$f:
    com.bumptech.glide.load.data.ParcelFileDescriptorRewinder val$parcelFileDescriptorRewinder -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$byteArrayPool -> b
    1:1:void <init>(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Li0/b;)V"}
    1:1:int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader -> com.bumptech.glide.load.a$g:
    int getOrientationAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> a
com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader -> com.bumptech.glide.load.a$h:
    com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeAndRewind(com.bumptech.glide.load.ImageHeaderParser) -> a
com.bumptech.glide.load.Key -> f0.f:
    java.nio.charset.Charset CHARSET -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void updateDiskCacheKey(java.security.MessageDigest) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.bumptech.glide.load.Option -> f0.g:
    java.lang.Object defaultValue -> a
    com.bumptech.glide.load.Option$CacheKeyUpdater cacheKeyUpdater -> b
    java.lang.String key -> c
    byte[] keyBytes -> d
    com.bumptech.glide.load.Option$CacheKeyUpdater EMPTY_UPDATER -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;Lf0/g$b;)V"}
    1:1:com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;Lf0/g$b;)Lf0/g;"}
    1:1:com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/g$b;"}
    1:1:java.lang.Object getDefaultValue():0:0 -> c
    1:1:byte[] getKeyBytes():0:0 -> d
    1:1:com.bumptech.glide.load.Option memory(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lf0/g;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:com.bumptech.glide.load.Option memory(java.lang.String,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;)Lf0/g;"}
    1:1:void update(java.lang.Object,java.security.MessageDigest):0:0 -> g
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.Option$1 -> f0.g$a:
    void <init>() -> <init>
    1:1:void update(byte[],java.lang.Object,java.security.MessageDigest):0:0 -> a
com.bumptech.glide.load.Option$CacheKeyUpdater -> f0.g$b:
    void update(byte[],java.lang.Object,java.security.MessageDigest) -> a
com.bumptech.glide.load.Options -> f0.h:
    androidx.collection.ArrayMap values -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:java.lang.Object get(com.bumptech.glide.load.Option):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/g;)Ljava/lang/Object;"}
    1:1:void putAll(com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/h;)V"}
    1:1:com.bumptech.glide.load.Options remove(com.bumptech.glide.load.Option):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/g;)Lf0/h;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/g;Ljava/lang/Object;)Lf0/h;"}
    1:1:void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/g;Ljava/lang/Object;Ljava/security/MessageDigest;)V"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.PreferredColorSpace -> f0.i:
    com.bumptech.glide.load.PreferredColorSpace SRGB -> e
    com.bumptech.glide.load.PreferredColorSpace DISPLAY_P3 -> f
    com.bumptech.glide.load.PreferredColorSpace[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lf0/i;"}
    1:1:com.bumptech.glide.load.PreferredColorSpace[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lf0/i;"}
com.bumptech.glide.load.ResourceDecoder -> f0.j:
    com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
com.bumptech.glide.load.ResourceEncoder -> f0.k:
    com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/h;)Lf0/c;"}
com.bumptech.glide.load.Transformation -> f0.l:
    com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh0/v;II)Lh0/v;"}
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.a:
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> d
    1:1:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver):0:0 -> f
    1:1:void close(android.content.res.AssetFileDescriptor):0:0 -> g
    1:1:android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver):0:0 -> h
com.bumptech.glide.load.data.AssetPathFetcher -> com.bumptech.glide.load.data.b:
    java.lang.String assetPath -> e
    android.content.res.AssetManager assetManager -> f
    java.lang.Object data -> g
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    void close(java.lang.Object) -> d
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
    java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> f
com.bumptech.glide.load.data.BufferedOutputStream -> com.bumptech.glide.load.data.c:
    java.io.OutputStream out -> e
    byte[] buffer -> f
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> g
    int index -> h
    1:1:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Li0/b;)V"}
    2:2:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Li0/b;I)V"}
    1:1:void flushBuffer():0:0 -> a
    1:1:void maybeFlushBuffer():0:0 -> b
    1:1:void release():0:0 -> c
    1:1:void write(int):0:0 -> write
    2:2:void write(byte[]):0:0 -> write
    3:3:void write(byte[],int,int):0:0 -> write
com.bumptech.glide.load.data.DataFetcher -> com.bumptech.glide.load.data.d:
    java.lang.Class getDataClass() -> a
    void cleanup() -> b
    com.bumptech.glide.load.DataSource getDataSource() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.data.DataFetcher$DataCallback -> com.bumptech.glide.load.data.d$a:
    void onLoadFailed(java.lang.Exception) -> d
    void onDataReady(java.lang.Object) -> f
com.bumptech.glide.load.data.DataRewinder -> com.bumptech.glide.load.data.e:
    java.lang.Object rewindAndGet() -> a
    void cleanup() -> b
com.bumptech.glide.load.data.DataRewinder$Factory -> com.bumptech.glide.load.data.e$a:
    java.lang.Class getDataClass() -> a
    com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
com.bumptech.glide.load.data.DataRewinderRegistry -> com.bumptech.glide.load.data.f:
    java.util.Map rewinders -> a
    com.bumptech.glide.load.data.DataRewinder$Factory DEFAULT_FACTORY -> b
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
    1:1:void register(com.bumptech.glide.load.data.DataRewinder$Factory):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e$a;)V"}
com.bumptech.glide.load.data.DataRewinderRegistry$1 -> com.bumptech.glide.load.data.f$a:
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder -> com.bumptech.glide.load.data.f$b:
    java.lang.Object data -> a
    1:1:java.lang.Object rewindAndGet():0:0 -> a
    1:1:void cleanup():0:0 -> b
com.bumptech.glide.load.data.ExifOrientationStream -> com.bumptech.glide.load.data.g:
    byte orientation -> e
    int position -> f
    byte[] EXIF_SEGMENT -> g
    int SEGMENT_LENGTH -> h
    int ORIENTATION_POSITION -> i
    1:1:int read():0:0 -> read
    2:2:int read(byte[],int,int):0:0 -> read
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher -> com.bumptech.glide.load.data.h:
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> d
    1:1:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String):0:0 -> f
    1:1:void close(android.content.res.AssetFileDescriptor):0:0 -> g
    1:1:android.content.res.AssetFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String):0:0 -> h
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.i:
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> d
    1:1:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver):0:0 -> f
    1:1:void close(android.os.ParcelFileDescriptor):0:0 -> g
    1:1:android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver):0:0 -> h
com.bumptech.glide.load.data.HttpUrlFetcher -> com.bumptech.glide.load.data.j:
    com.bumptech.glide.load.model.GlideUrl glideUrl -> e
    int timeout -> f
    com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory connectionFactory -> g
    java.net.HttpURLConnection urlConnection -> h
    java.io.InputStream stream -> i
    boolean isCancelled -> j
    com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory DEFAULT_CONNECTION_FACTORY -> k
    1:1:void <init>(com.bumptech.glide.load.model.GlideUrl,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/h;I)V"}
    2:2:void <init>(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/h;ILcom/bumptech/glide/load/data/j$b;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:java.net.HttpURLConnection buildAndConfigureConnection(java.net.URL,java.util.Map):0:0 -> d
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
    1:1:int getHttpStatusCodeOrInvalid(java.net.HttpURLConnection):0:0 -> f
    1:1:java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection):0:0 -> g
    1:1:boolean isHttpOk(int):0:0 -> h
    1:1:boolean isHttpRedirect(int):0:0 -> i
    1:1:java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map):0:0 -> j
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory -> com.bumptech.glide.load.data.j$a:
    1:1:java.net.HttpURLConnection build(java.net.URL):0:0 -> a
com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory -> com.bumptech.glide.load.data.j$b:
    java.net.HttpURLConnection build(java.net.URL) -> a
com.bumptech.glide.load.data.InputStreamRewinder -> com.bumptech.glide.load.data.k:
    com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream bufferedStream -> a
    1:1:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;)V"}
    1:1:java.lang.Object rewindAndGet():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:void fixMarkLimits():0:0 -> c
    1:1:java.io.InputStream rewindAndGet():0:0 -> d
com.bumptech.glide.load.data.InputStreamRewinder$Factory -> com.bumptech.glide.load.data.k$a:
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> a
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/b;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;)Lcom/bumptech/glide/load/data/e;"}
com.bumptech.glide.load.data.LocalUriFetcher -> com.bumptech.glide.load.data.l:
    android.net.Uri uri -> e
    android.content.ContentResolver contentResolver -> f
    java.lang.Object data -> g
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    void close(java.lang.Object) -> d
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
    java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> f
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder:
    com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder rewinder -> a
    1:1:java.lang.Object rewindAndGet():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:boolean isSupported():0:0 -> c
    1:1:android.os.ParcelFileDescriptor rewindAndGet():0:0 -> d
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$a:
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
    1:1:com.bumptech.glide.load.data.DataRewinder build(android.os.ParcelFileDescriptor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/ParcelFileDescriptor;)Lcom/bumptech/glide/load/data/e;"}
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder -> com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder:
    android.os.ParcelFileDescriptor parcelFileDescriptor -> a
com.bumptech.glide.load.data.StreamAssetPathFetcher -> com.bumptech.glide.load.data.m:
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> d
    1:1:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String):0:0 -> f
    1:1:void close(java.io.InputStream):0:0 -> g
    1:1:java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String):0:0 -> h
com.bumptech.glide.load.data.StreamLocalUriFetcher -> com.bumptech.glide.load.data.n:
    android.content.UriMatcher URI_MATCHER -> h
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> d
    1:1:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver):0:0 -> f
    1:1:void close(java.io.InputStream):0:0 -> g
    1:1:java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver):0:0 -> h
    1:1:java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver):0:0 -> i
    1:1:java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri):0:0 -> j
com.bumptech.glide.load.data.mediastore.FileService -> g0.a:
    void <init>() -> <init>
    1:1:boolean exists(java.io.File):0:0 -> a
    1:1:java.io.File get(java.lang.String):0:0 -> b
    1:1:long length(java.io.File):0:0 -> c
com.bumptech.glide.load.data.mediastore.MediaStoreUtil -> g0.b:
    1:1:boolean isMediaStoreImageUri(android.net.Uri):0:0 -> a
    1:1:boolean isMediaStoreUri(android.net.Uri):0:0 -> b
    1:1:boolean isMediaStoreVideoUri(android.net.Uri):0:0 -> c
    1:1:boolean isThumbnailSize(int,int):0:0 -> d
    1:1:boolean isVideoUri(android.net.Uri):0:0 -> e
com.bumptech.glide.load.data.mediastore.ThumbFetcher -> g0.c:
    android.net.Uri mediaStoreImageUri -> e
    com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener opener -> f
    java.io.InputStream inputStream -> g
    1:1:void <init>(android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lg0/e;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/net/Uri;Lg0/d;)Lg0/c;"}
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
    1:1:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/net/Uri;)Lg0/c;"}
    1:1:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/net/Uri;)Lg0/c;"}
    1:1:java.io.InputStream openThumbInputStream():0:0 -> h
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery -> g0.c$a:
    android.content.ContentResolver contentResolver -> a
    java.lang.String[] PATH_PROJECTION -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.ContentResolver):0:0 -> <init>
    1:1:android.database.Cursor query(android.net.Uri):0:0 -> a
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery -> g0.c$b:
    android.content.ContentResolver contentResolver -> a
    java.lang.String[] PATH_PROJECTION -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.ContentResolver):0:0 -> <init>
    1:1:android.database.Cursor query(android.net.Uri):0:0 -> a
com.bumptech.glide.load.data.mediastore.ThumbnailQuery -> g0.d:
    android.database.Cursor query(android.net.Uri) -> a
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener -> g0.e:
    com.bumptech.glide.load.data.mediastore.FileService service -> a
    com.bumptech.glide.load.data.mediastore.ThumbnailQuery query -> b
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> c
    android.content.ContentResolver contentResolver -> d
    java.util.List parsers -> e
    com.bumptech.glide.load.data.mediastore.FileService DEFAULT_SERVICE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/a;Lg0/d;Li0/b;Landroid/content/ContentResolver;)V"}
    2:2:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/d;Li0/b;Landroid/content/ContentResolver;)V"}
    1:1:int getOrientation(android.net.Uri):0:0 -> a
    1:1:java.lang.String getPath(android.net.Uri):0:0 -> b
    1:1:boolean isValid(java.io.File):0:0 -> c
    1:1:java.io.InputStream open(android.net.Uri):0:0 -> d
com.bumptech.glide.load.engine.ActiveResources -> h0.a:
    boolean isActiveResourceRetentionAllowed -> a
    java.util.concurrent.Executor monitorClearedResourcesExecutor -> b
    java.util.Map activeEngineResources -> c
    java.lang.ref.ReferenceQueue resourceReferenceQueue -> d
    com.bumptech.glide.load.engine.EngineResource$ResourceListener listener -> e
    boolean isShutdown -> f
    1:1:void <init>(boolean):0:0 -> <init>
    2:2:void <init>(boolean,java.util.concurrent.Executor):0:0 -> <init>
    1:1:void activate(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/p;)V"}
    1:1:void cleanReferenceQueue():0:0 -> b
    1:1:void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/a$c;)V"}
    1:1:void deactivate(com.bumptech.glide.load.Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)V"}
    1:1:com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lh0/p;"}
    1:1:void setListener(com.bumptech.glide.load.engine.EngineResource$ResourceListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/p$a;)V"}
com.bumptech.glide.load.engine.ActiveResources$1 -> h0.a$a:
    void <init>() -> <init>
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
com.bumptech.glide.load.engine.ActiveResources$1$1 -> h0.a$a$a:
    java.lang.Runnable val$r -> e
    com.bumptech.glide.load.engine.ActiveResources$1 this$1 -> f
    1:1:void <init>(com.bumptech.glide.load.engine.ActiveResources$1,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/a$a;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.load.engine.ActiveResources$2 -> h0.a$b:
    com.bumptech.glide.load.engine.ActiveResources this$0 -> e
    1:1:void <init>(com.bumptech.glide.load.engine.ActiveResources):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/a;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference -> h0.a$c:
    com.bumptech.glide.load.Key key -> a
    boolean isCacheable -> b
    com.bumptech.glide.load.engine.Resource resource -> c
    1:1:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/p;Ljava/lang/ref/ReferenceQueue;Z)V"}
    1:1:void reset():0:0 -> a
com.bumptech.glide.load.engine.CallbackException -> h0.b:
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
com.bumptech.glide.load.engine.DataCacheGenerator -> h0.c:
    java.util.List cacheKeys -> e
    com.bumptech.glide.load.engine.DecodeHelper helper -> f
    com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback cb -> g
    int sourceIdIndex -> h
    com.bumptech.glide.load.Key sourceKey -> i
    java.util.List modelLoaders -> j
    int modelLoaderIndex -> k
    com.bumptech.glide.load.model.ModelLoader$LoadData loadData -> l
    java.io.File cacheFile -> m
    1:1:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/g;Lh0/f$a;)V"}
    2:2:void <init>(java.util.List,com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lh0/g;Lh0/f$a;)V"}
    1:1:boolean startNext():0:0 -> a
    1:1:boolean hasNextModelLoader():0:0 -> b
    1:1:void cancel():0:0 -> cancel
    1:1:void onLoadFailed(java.lang.Exception):0:0 -> d
    1:1:void onDataReady(java.lang.Object):0:0 -> f
com.bumptech.glide.load.engine.DataCacheKey -> h0.d:
    com.bumptech.glide.load.Key sourceKey -> b
    com.bumptech.glide.load.Key signature -> c
    1:1:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.Key):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lf0/f;)V"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.DataCacheWriter -> h0.e:
    com.bumptech.glide.load.Encoder encoder -> a
    java.lang.Object data -> b
    com.bumptech.glide.load.Options options -> c
    1:1:void <init>(com.bumptech.glide.load.Encoder,java.lang.Object,com.bumptech.glide.load.Options):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/d;Ljava/lang/Object;Lf0/h;)V"}
    1:1:boolean write(java.io.File):0:0 -> a
com.bumptech.glide.load.engine.DataFetcherGenerator -> h0.f:
    boolean startNext() -> a
    void cancel() -> cancel
com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback -> h0.f$a:
    void reschedule() -> b
    void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/lang/Object;Lcom/bumptech/glide/load/data/d;Lf0/a;Lf0/f;)V"}
    void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/d;Lf0/a;)V"}
com.bumptech.glide.load.engine.DecodeHelper -> h0.g:
    java.util.List loadData -> a
    java.util.List cacheKeys -> b
    com.bumptech.glide.GlideContext glideContext -> c
    java.lang.Object model -> d
    int width -> e
    int height -> f
    java.lang.Class resourceClass -> g
    com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider diskCacheProvider -> h
    com.bumptech.glide.load.Options options -> i
    java.util.Map transformations -> j
    java.lang.Class transcodeClass -> k
    boolean isLoadDataSet -> l
    boolean isCacheKeysSet -> m
    com.bumptech.glide.load.Key signature -> n
    com.bumptech.glide.Priority priority -> o
    com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy -> p
    boolean isTransformationRequired -> q
    boolean isScaleOnlyOrNoTransform -> r
    1:1:void <init>():0:0 -> <init>
    1:1:void clear():0:0 -> a
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/b;"}
    1:1:java.util.List getCacheKeys():0:0 -> c
    1:1:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/a;"}
    1:1:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/j;"}
    1:1:int getHeight():0:0 -> f
    1:1:java.util.List getLoadData():0:0 -> g
    1:1:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lh0/t;"}
    1:1:java.lang.Class getModelClass():0:0 -> i
    1:1:java.util.List getModelLoaders(java.io.File):0:0 -> j
    1:1:com.bumptech.glide.load.Options getOptions():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/h;"}
    1:1:com.bumptech.glide.Priority getPriority():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/g;"}
    1:1:java.util.List getRegisteredResourceClasses():0:0 -> m
    1:1:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Lf0/k;"}
    1:1:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
    1:1:com.bumptech.glide.load.Key getSignature():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/f;"}
    1:1:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lf0/d;"}
    1:1:java.lang.Class getTranscodeClass():0:0 -> r
    1:1:com.bumptech.glide.load.Transformation getTransformation(java.lang.Class):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lf0/l;"}
    1:1:int getWidth():0:0 -> t
    1:1:boolean hasLoadPath(java.lang.Class):0:0 -> u
    1:1:void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/d;Ljava/lang/Object;Lf0/f;IILh0/j;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lf0/h;Ljava/util/Map;ZZLh0/h$e;)V"}
    1:1:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Z"}
    1:1:boolean isScaleOnlyOrNoTransform():0:0 -> x
    1:1:boolean isSourceKey(com.bumptech.glide.load.Key):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Z"}
com.bumptech.glide.load.engine.DecodeJob -> h0.h:
    java.lang.Thread currentThread -> A
    com.bumptech.glide.load.Key currentSourceKey -> B
    com.bumptech.glide.load.Key currentAttemptingKey -> C
    java.lang.Object currentData -> D
    com.bumptech.glide.load.DataSource currentDataSource -> E
    com.bumptech.glide.load.data.DataFetcher currentFetcher -> F
    com.bumptech.glide.load.engine.DataFetcherGenerator currentGenerator -> G
    boolean isCallbackNotified -> H
    boolean isCancelled -> I
    boolean isLoadingFromAlternateCacheKey -> J
    com.bumptech.glide.load.engine.DecodeHelper decodeHelper -> e
    java.util.List throwables -> f
    com.bumptech.glide.util.pool.StateVerifier stateVerifier -> g
    com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider diskCacheProvider -> h
    androidx.core.util.Pools$Pool pool -> i
    com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager deferredEncodeManager -> j
    com.bumptech.glide.load.engine.DecodeJob$ReleaseManager releaseManager -> k
    com.bumptech.glide.GlideContext glideContext -> l
    com.bumptech.glide.load.Key signature -> m
    com.bumptech.glide.Priority priority -> n
    com.bumptech.glide.load.engine.EngineKey loadKey -> o
    int width -> p
    int height -> q
    com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy -> r
    com.bumptech.glide.load.Options options -> s
    com.bumptech.glide.load.engine.DecodeJob$Callback callback -> t
    int order -> u
    com.bumptech.glide.load.engine.DecodeJob$Stage stage -> v
    com.bumptech.glide.load.engine.DecodeJob$RunReason runReason -> w
    long startFetchTime -> x
    boolean onlyRetrieveFromCache -> y
    java.lang.Object model -> z
    1:1:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h$e;Lh/d;)V"}
    1:1:com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/a;Lh0/t;)Lh0/v;"}
    1:1:void runWrapped():0:0 -> B
    1:1:void setNotifiedOrThrow():0:0 -> C
    1:1:boolean willDecodeFromCache():0:0 -> D
    1:1:void cancel():0:0 -> a
    1:1:void reschedule():0:0 -> b
    1:1:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/lang/Object;Lcom/bumptech/glide/load/data/d;Lf0/a;Lf0/f;)V"}
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/d;Lf0/a;)V"}
    1:1:com.bumptech.glide.util.pool.StateVerifier getVerifier():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/c;"}
    1:1:int compareTo(com.bumptech.glide.load.engine.DecodeJob):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)I"}
    1:1:com.bumptech.glide.load.engine.Resource decodeFromData(com.bumptech.glide.load.data.DataFetcher,java.lang.Object,com.bumptech.glide.load.DataSource):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/d;Ljava/lang/Object;Lf0/a;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource decodeFromFetcher(java.lang.Object,com.bumptech.glide.load.DataSource):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/a;)Lh0/v;"}
    1:1:void decodeFromRetrievedData():0:0 -> i
    1:1:com.bumptech.glide.load.engine.DataFetcherGenerator getNextGenerator():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/f;"}
    1:1:com.bumptech.glide.load.engine.DecodeJob$Stage getNextStage(com.bumptech.glide.load.engine.DecodeJob$Stage):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h$h;)Lh0/h$h;"}
    1:1:com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Lf0/h;"}
    1:1:int getPriority():0:0 -> m
    1:1:com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/d;Ljava/lang/Object;Lh0/n;Lf0/f;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lh0/j;Ljava/util/Map;ZZZLf0/h;Lh0/h$b;I)Lh0/h;"}
    1:1:void logWithTimeAndKey(java.lang.String,long):0:0 -> o
    1:1:void logWithTimeAndKey(java.lang.String,long,java.lang.String):0:0 -> p
    1:1:void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/a;Z)V"}
    1:1:void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/a;Z)V"}
    1:1:void run():0:0 -> run
    1:1:void notifyFailed():0:0 -> s
    1:1:void onEncodeComplete():0:0 -> t
    1:1:void onLoadFailed():0:0 -> u
    1:1:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;Lh0/v;)Lh0/v;"}
    1:1:void release(boolean):0:0 -> w
    1:1:void releaseInternal():0:0 -> x
    1:1:void reschedule(com.bumptech.glide.load.engine.DecodeJob$RunReason):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h$g;)V"}
    1:1:void runGenerators():0:0 -> z
com.bumptech.glide.load.engine.DecodeJob$1 -> h0.h$a:
    int[] $SwitchMap$com$bumptech$glide$load$engine$DecodeJob$RunReason -> a
    int[] $SwitchMap$com$bumptech$glide$load$engine$DecodeJob$Stage -> b
    int[] $SwitchMap$com$bumptech$glide$load$EncodeStrategy -> c
    1:1:void <clinit>():0:0 -> <clinit>
com.bumptech.glide.load.engine.DecodeJob$Callback -> h0.h$b:
    void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;)V"}
    void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/a;Z)V"}
    void reschedule(com.bumptech.glide.load.engine.DecodeJob) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback -> h0.h$c:
    com.bumptech.glide.load.DataSource dataSource -> a
    com.bumptech.glide.load.engine.DecodeJob this$0 -> b
    1:1:void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.DataSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;Lf0/a;)V"}
    1:1:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Lh0/v;"}
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager -> h0.h$d:
    com.bumptech.glide.load.Key key -> a
    com.bumptech.glide.load.ResourceEncoder encoder -> b
    com.bumptech.glide.load.engine.LockedResource toEncode -> c
    void <init>() -> <init>
    1:1:void clear():0:0 -> a
    1:1:void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h$e;Lf0/h;)V"}
    1:1:boolean hasResourceToEncode():0:0 -> c
    1:1:void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lf0/k;Lh0/u;)V"}
com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider -> h0.h$e:
    com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/a;"}
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager -> h0.h$f:
    boolean isReleased -> a
    boolean isEncodeComplete -> b
    boolean isFailed -> c
    void <init>() -> <init>
    1:1:boolean isComplete(boolean):0:0 -> a
    1:1:boolean onEncodeComplete():0:0 -> b
    1:1:boolean onFailed():0:0 -> c
    1:1:boolean release(boolean):0:0 -> d
    1:1:void reset():0:0 -> e
com.bumptech.glide.load.engine.DecodeJob$RunReason -> h0.h$g:
    com.bumptech.glide.load.engine.DecodeJob$RunReason INITIALIZE -> e
    com.bumptech.glide.load.engine.DecodeJob$RunReason SWITCH_TO_SOURCE_SERVICE -> f
    com.bumptech.glide.load.engine.DecodeJob$RunReason DECODE_DATA -> g
    com.bumptech.glide.load.engine.DecodeJob$RunReason[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lh0/h$g;"}
    1:1:com.bumptech.glide.load.engine.DecodeJob$RunReason[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lh0/h$g;"}
com.bumptech.glide.load.engine.DecodeJob$Stage -> h0.h$h:
    com.bumptech.glide.load.engine.DecodeJob$Stage INITIALIZE -> e
    com.bumptech.glide.load.engine.DecodeJob$Stage RESOURCE_CACHE -> f
    com.bumptech.glide.load.engine.DecodeJob$Stage DATA_CACHE -> g
    com.bumptech.glide.load.engine.DecodeJob$Stage SOURCE -> h
    com.bumptech.glide.load.engine.DecodeJob$Stage ENCODE -> i
    com.bumptech.glide.load.engine.DecodeJob$Stage FINISHED -> j
    com.bumptech.glide.load.engine.DecodeJob$Stage[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lh0/h$h;"}
    1:1:com.bumptech.glide.load.engine.DecodeJob$Stage[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lh0/h$h;"}
com.bumptech.glide.load.engine.DecodePath -> h0.i:
    java.lang.Class dataClass -> a
    java.util.List decoders -> b
    com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder -> c
    androidx.core.util.Pools$Pool listPool -> d
    java.lang.String failureMessage -> e
    1:1:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lt0/e;Lh/d;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e;IILf0/h;Lh0/i$a;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e;IILf0/h;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e;IILf0/h;Ljava/util/List;)Lh0/v;"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.DecodePath$DecodeCallback -> h0.i$a:
    com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Lh0/v;"}
com.bumptech.glide.load.engine.DiskCacheStrategy -> h0.j:
    com.bumptech.glide.load.engine.DiskCacheStrategy ALL -> a
    com.bumptech.glide.load.engine.DiskCacheStrategy NONE -> b
    com.bumptech.glide.load.engine.DiskCacheStrategy DATA -> c
    com.bumptech.glide.load.engine.DiskCacheStrategy RESOURCE -> d
    com.bumptech.glide.load.engine.DiskCacheStrategy AUTOMATIC -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    boolean decodeCachedData() -> a
    boolean decodeCachedResource() -> b
    boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Z"}
    boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLf0/a;Lf0/c;)Z"}
com.bumptech.glide.load.engine.DiskCacheStrategy$1 -> h0.j$a:
    void <init>() -> <init>
    1:1:boolean decodeCachedData():0:0 -> a
    1:1:boolean decodeCachedResource():0:0 -> b
    1:1:boolean isDataCacheable(com.bumptech.glide.load.DataSource):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Z"}
    1:1:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLf0/a;Lf0/c;)Z"}
com.bumptech.glide.load.engine.DiskCacheStrategy$2 -> h0.j$b:
    void <init>() -> <init>
    1:1:boolean decodeCachedData():0:0 -> a
    1:1:boolean decodeCachedResource():0:0 -> b
    1:1:boolean isDataCacheable(com.bumptech.glide.load.DataSource):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Z"}
    1:1:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLf0/a;Lf0/c;)Z"}
com.bumptech.glide.load.engine.DiskCacheStrategy$3 -> h0.j$c:
    void <init>() -> <init>
    1:1:boolean decodeCachedData():0:0 -> a
    1:1:boolean decodeCachedResource():0:0 -> b
    1:1:boolean isDataCacheable(com.bumptech.glide.load.DataSource):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Z"}
    1:1:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLf0/a;Lf0/c;)Z"}
com.bumptech.glide.load.engine.DiskCacheStrategy$4 -> h0.j$d:
    void <init>() -> <init>
    1:1:boolean decodeCachedData():0:0 -> a
    1:1:boolean decodeCachedResource():0:0 -> b
    1:1:boolean isDataCacheable(com.bumptech.glide.load.DataSource):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Z"}
    1:1:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLf0/a;Lf0/c;)Z"}
com.bumptech.glide.load.engine.DiskCacheStrategy$5 -> h0.j$e:
    void <init>() -> <init>
    1:1:boolean decodeCachedData():0:0 -> a
    1:1:boolean decodeCachedResource():0:0 -> b
    1:1:boolean isDataCacheable(com.bumptech.glide.load.DataSource):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)Z"}
    1:1:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLf0/a;Lf0/c;)Z"}
com.bumptech.glide.load.engine.Engine -> h0.k:
    com.bumptech.glide.load.engine.Jobs jobs -> a
    com.bumptech.glide.load.engine.EngineKeyFactory keyFactory -> b
    com.bumptech.glide.load.engine.cache.MemoryCache cache -> c
    com.bumptech.glide.load.engine.Engine$EngineJobFactory engineJobFactory -> d
    com.bumptech.glide.load.engine.ResourceRecycler resourceRecycler -> e
    com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider diskCacheProvider -> f
    com.bumptech.glide.load.engine.Engine$DecodeJobFactory decodeJobFactory -> g
    com.bumptech.glide.load.engine.ActiveResources activeResources -> h
    boolean VERBOSE_IS_LOGGABLE -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/h;Lj0/a$a;Lk0/a;Lk0/a;Lk0/a;Lk0/a;Lh0/s;Lh0/o;Lh0/a;Lh0/k$b;Lh0/k$a;Lh0/y;Z)V"}
    2:2:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/h;Lj0/a$a;Lk0/a;Lk0/a;Lk0/a;Lk0/a;Z)V"}
    1:1:void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/l;Lf0/f;Lh0/p;)V"}
    1:1:void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/p;)V"}
    1:1:void onResourceRemoved(com.bumptech.glide.load.engine.Resource):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)V"}
    1:1:void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/l;Lf0/f;)V"}
    1:1:void clearDiskCache():0:0 -> e
    1:1:com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lh0/p;"}
    1:1:com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/d;Ljava/lang/Object;Lf0/f;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lh0/j;Ljava/util/Map;ZZLf0/h;ZZZZLx0/i;Ljava/util/concurrent/Executor;)Lh0/k$d;"}
    1:1:com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lh0/p;"}
    1:1:com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lh0/p;"}
    1:1:com.bumptech.glide.load.engine.EngineResource loadFromMemory(com.bumptech.glide.load.engine.EngineKey,boolean,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/n;ZJ)Lh0/p;"}
    1:1:void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;JLf0/f;)V"}
    1:1:void release(com.bumptech.glide.load.engine.Resource):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)V"}
    1:1:com.bumptech.glide.load.engine.Engine$LoadStatus waitForExistingOrStartNewJob(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor,com.bumptech.glide.load.engine.EngineKey,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/d;Ljava/lang/Object;Lf0/f;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lh0/j;Ljava/util/Map;ZZLf0/h;ZZZZLx0/i;Ljava/util/concurrent/Executor;Lh0/n;J)Lh0/k$d;"}
com.bumptech.glide.load.engine.Engine$DecodeJobFactory -> h0.k$a:
    com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider diskCacheProvider -> a
    androidx.core.util.Pools$Pool pool -> b
    int creationOrder -> c
    1:1:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h$e;)V"}
    1:1:com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/d;Ljava/lang/Object;Lh0/n;Lf0/f;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lh0/j;Ljava/util/Map;ZZZLf0/h;Lh0/h$b;)Lh0/h;"}
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1 -> h0.k$a$a:
    com.bumptech.glide.load.engine.Engine$DecodeJobFactory this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.engine.Engine$DecodeJobFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/k$a;)V"}
    1:1:java.lang.Object create():0:0 -> a
    1:1:com.bumptech.glide.load.engine.DecodeJob create():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/h;"}
com.bumptech.glide.load.engine.Engine$EngineJobFactory -> h0.k$b:
    com.bumptech.glide.load.engine.executor.GlideExecutor diskCacheExecutor -> a
    com.bumptech.glide.load.engine.executor.GlideExecutor sourceExecutor -> b
    com.bumptech.glide.load.engine.executor.GlideExecutor sourceUnlimitedExecutor -> c
    com.bumptech.glide.load.engine.executor.GlideExecutor animationExecutor -> d
    com.bumptech.glide.load.engine.EngineJobListener engineJobListener -> e
    com.bumptech.glide.load.engine.EngineResource$ResourceListener resourceListener -> f
    androidx.core.util.Pools$Pool pool -> g
    1:1:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a;Lk0/a;Lk0/a;Lk0/a;Lh0/m;Lh0/p$a;)V"}
    1:1:com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;ZZZZ)Lh0/l;"}
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1 -> h0.k$b$a:
    com.bumptech.glide.load.engine.Engine$EngineJobFactory this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.engine.Engine$EngineJobFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/k$b;)V"}
    1:1:java.lang.Object create():0:0 -> a
    1:1:com.bumptech.glide.load.engine.EngineJob create():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/l;"}
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider -> h0.k$c:
    com.bumptech.glide.load.engine.cache.DiskCache$Factory factory -> a
    com.bumptech.glide.load.engine.cache.DiskCache diskCache -> b
    1:1:void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a$a;)V"}
    1:1:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/a;"}
com.bumptech.glide.load.engine.Engine$LoadStatus -> h0.k$d:
    com.bumptech.glide.load.engine.EngineJob engineJob -> a
    com.bumptech.glide.request.ResourceCallback cb -> b
    com.bumptech.glide.load.engine.Engine this$0 -> c
    1:1:void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/k;Lx0/i;Lh0/l;)V"}
    1:1:void cancel():0:0 -> a
com.bumptech.glide.load.engine.EngineJob -> h0.l:
    com.bumptech.glide.load.engine.DecodeJob decodeJob -> A
    boolean isCancelled -> B
    boolean isLoadedFromAlternateCacheKey -> C
    com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory DEFAULT_FACTORY -> D
    com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors cbs -> e
    com.bumptech.glide.util.pool.StateVerifier stateVerifier -> f
    com.bumptech.glide.load.engine.EngineResource$ResourceListener resourceListener -> g
    androidx.core.util.Pools$Pool pool -> h
    com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory engineResourceFactory -> i
    com.bumptech.glide.load.engine.EngineJobListener engineJobListener -> j
    com.bumptech.glide.load.engine.executor.GlideExecutor diskCacheExecutor -> k
    com.bumptech.glide.load.engine.executor.GlideExecutor sourceExecutor -> l
    com.bumptech.glide.load.engine.executor.GlideExecutor sourceUnlimitedExecutor -> m
    com.bumptech.glide.load.engine.executor.GlideExecutor animationExecutor -> n
    java.util.concurrent.atomic.AtomicInteger pendingCallbacks -> o
    com.bumptech.glide.load.Key key -> p
    boolean isCacheable -> q
    boolean useUnlimitedSourceGeneratorPool -> r
    boolean useAnimationPool -> s
    boolean onlyRetrieveFromCache -> t
    com.bumptech.glide.load.engine.Resource resource -> u
    com.bumptech.glide.load.DataSource dataSource -> v
    boolean hasResource -> w
    com.bumptech.glide.load.engine.GlideException exception -> x
    boolean hasLoadFailed -> y
    com.bumptech.glide.load.engine.EngineResource engineResource -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a;Lk0/a;Lk0/a;Lk0/a;Lh0/m;Lh0/p$a;Lh/d;)V"}
    2:2:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a;Lk0/a;Lk0/a;Lk0/a;Lh0/m;Lh0/p$a;Lh/d;Lh0/l$c;)V"}
    1:1:void onLoadFailed(com.bumptech.glide.load.engine.GlideException):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;)V"}
    1:1:void addCallback(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;Ljava/util/concurrent/Executor;)V"}
    1:1:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/a;Z)V"}
    1:1:void reschedule(com.bumptech.glide.load.engine.DecodeJob):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
    1:1:com.bumptech.glide.util.pool.StateVerifier getVerifier():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/c;"}
    1:1:void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;)V"}
    1:1:void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;)V"}
    1:1:void cancel():0:0 -> h
    1:1:void decrementPendingCallbacks():0:0 -> i
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:void incrementPendingCallbacks(int):0:0 -> k
    1:1:com.bumptech.glide.load.engine.EngineJob init(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;ZZZZ)Lh0/l;"}
    1:1:boolean isDone():0:0 -> m
    1:1:void notifyCallbacksOfException():0:0 -> n
    1:1:void notifyCallbacksOfResult():0:0 -> o
    1:1:boolean onlyRetrieveFromCache():0:0 -> p
    1:1:void release():0:0 -> q
    1:1:void removeCallback(com.bumptech.glide.request.ResourceCallback):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;)V"}
    1:1:void start(com.bumptech.glide.load.engine.DecodeJob):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed -> h0.l$a:
    com.bumptech.glide.request.ResourceCallback cb -> e
    com.bumptech.glide.load.engine.EngineJob this$0 -> f
    1:1:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/l;Lx0/i;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.load.engine.EngineJob$CallResourceReady -> h0.l$b:
    com.bumptech.glide.request.ResourceCallback cb -> e
    com.bumptech.glide.load.engine.EngineJob this$0 -> f
    1:1:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/l;Lx0/i;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory -> h0.l$c:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;ZLf0/f;Lh0/p$a;)Lh0/p;"}
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor -> h0.l$d:
    com.bumptech.glide.request.ResourceCallback cb -> a
    java.util.concurrent.Executor executor -> b
    1:1:void <init>(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;Ljava/util/concurrent/Executor;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors -> h0.l$e:
    java.util.List callbacksAndExecutors -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.util.List):0:0 -> <init>
    1:1:void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;Ljava/util/concurrent/Executor;)V"}
    1:1:boolean contains(com.bumptech.glide.request.ResourceCallback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;)Z"}
    1:1:com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/l$e;"}
    1:1:void clear():0:0 -> clear
    1:1:com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;)Lh0/l$d;"}
    1:1:void remove(com.bumptech.glide.request.ResourceCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/i;)V"}
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.bumptech.glide.load.engine.EngineJobListener -> h0.m:
    void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/l;Lf0/f;Lh0/p;)V"}
    void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/l;Lf0/f;)V"}
com.bumptech.glide.load.engine.EngineKey -> h0.n:
    java.lang.Object model -> b
    int width -> c
    int height -> d
    java.lang.Class resourceClass -> e
    java.lang.Class transcodeClass -> f
    com.bumptech.glide.load.Key signature -> g
    java.util.Map transformations -> h
    com.bumptech.glide.load.Options options -> i
    int hashCode -> j
    1:1:void <init>(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/f;IILjava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Lf0/h;)V"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.EngineKeyFactory -> h0.o:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/f;IILjava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Lf0/h;)Lh0/n;"}
com.bumptech.glide.load.engine.EngineResource -> h0.p:
    boolean isMemoryCacheable -> e
    boolean isRecyclable -> f
    com.bumptech.glide.load.engine.Resource resource -> g
    com.bumptech.glide.load.engine.EngineResource$ResourceListener listener -> h
    com.bumptech.glide.load.Key key -> i
    int acquired -> j
    boolean isRecycled -> k
    1:1:void <init>(com.bumptech.glide.load.engine.Resource,boolean,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;ZZLf0/f;Lh0/p$a;)V"}
    1:1:void acquire():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:com.bumptech.glide.load.engine.Resource getResource():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/v;"}
    1:1:boolean isMemoryCacheable():0:0 -> f
    1:1:void release():0:0 -> g
    1:1:java.lang.Object get():0:0 -> get
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.EngineResource$ResourceListener -> h0.p$a:
    void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/p;)V"}
com.bumptech.glide.load.engine.GlideException -> h0.q:
    java.util.List causes -> e
    com.bumptech.glide.load.Key key -> f
    com.bumptech.glide.load.DataSource dataSource -> g
    java.lang.Class dataClass -> h
    java.lang.String detailMessage -> i
    java.lang.Exception exception -> j
    java.lang.StackTraceElement[] EMPTY_ELEMENTS -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
    3:3:void <init>(java.lang.String,java.util.List):0:0 -> <init>
    1:1:void addRootCauses(java.lang.Throwable,java.util.List):0:0 -> a
    1:1:void appendCauses(java.util.List,java.lang.Appendable):0:0 -> b
    1:1:void appendCausesWrapped(java.util.List,java.lang.Appendable):0:0 -> c
    1:1:void appendExceptionMessage(java.lang.Throwable,java.lang.Appendable):0:0 -> d
    1:1:java.util.List getCauses():0:0 -> e
    1:1:java.util.List getRootCauses():0:0 -> f
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:void logRootCauses(java.lang.String):0:0 -> g
    1:1:java.lang.String getMessage():0:0 -> getMessage
    1:1:void printStackTrace(java.lang.Appendable):0:0 -> h
    1:1:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lf0/a;)V"}
    1:1:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lf0/a;Ljava/lang/Class;)V"}
    1:1:void setOrigin(java.lang.Exception):0:0 -> k
    1:1:void printStackTrace():0:0 -> printStackTrace
    2:2:void printStackTrace(java.io.PrintStream):0:0 -> printStackTrace
    3:3:void printStackTrace(java.io.PrintWriter):0:0 -> printStackTrace
com.bumptech.glide.load.engine.GlideException$IndentedAppendable -> h0.q$a:
    java.lang.Appendable appendable -> e
    boolean printedNewLine -> f
    1:1:void <init>(java.lang.Appendable):0:0 -> <init>
    1:1:java.lang.CharSequence safeSequence(java.lang.CharSequence):0:0 -> a
    1:1:java.lang.Appendable append(char):0:0 -> append
    2:2:java.lang.Appendable append(java.lang.CharSequence):0:0 -> append
    3:3:java.lang.Appendable append(java.lang.CharSequence,int,int):0:0 -> append
com.bumptech.glide.load.engine.Initializable -> h0.r:
    void initialize() -> a
com.bumptech.glide.load.engine.Jobs -> h0.s:
    java.util.Map jobs -> a
    java.util.Map onlyCacheJobs -> b
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Z)Lh0/l;"}
    1:1:java.util.Map getJobMap(boolean):0:0 -> b
    1:1:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/l;)V"}
    1:1:void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/l;)V"}
com.bumptech.glide.load.engine.LoadPath -> h0.t:
    java.lang.Class dataClass -> a
    androidx.core.util.Pools$Pool listPool -> b
    java.util.List decodePaths -> c
    java.lang.String failureMessage -> d
    1:1:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lh/d;)V"}
    1:1:com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e;Lf0/h;IILh0/i$a;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/data/e;Lf0/h;IILh0/i$a;Ljava/util/List;)Lh0/v;"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.LockedResource -> h0.u:
    com.bumptech.glide.util.pool.StateVerifier stateVerifier -> e
    com.bumptech.glide.load.engine.Resource toWrap -> f
    boolean isLocked -> g
    boolean isRecycled -> h
    androidx.core.util.Pools$Pool POOL -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void init(com.bumptech.glide.load.engine.Resource):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)V"}
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:com.bumptech.glide.util.pool.StateVerifier getVerifier():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/c;"}
    1:1:com.bumptech.glide.load.engine.LockedResource obtain(com.bumptech.glide.load.engine.Resource):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Lh0/u;"}
    1:1:void release():0:0 -> g
    1:1:java.lang.Object get():0:0 -> get
    1:1:void unlock():0:0 -> h
com.bumptech.glide.load.engine.LockedResource$1 -> h0.u$a:
    void <init>() -> <init>
    1:1:java.lang.Object create():0:0 -> a
    1:1:com.bumptech.glide.load.engine.LockedResource create():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/u;"}
com.bumptech.glide.load.engine.Resource -> h0.v:
    int getSize() -> b
    java.lang.Class getResourceClass() -> c
    void recycle() -> d
    java.lang.Object get() -> get
com.bumptech.glide.load.engine.ResourceCacheGenerator -> h0.w:
    com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback cb -> e
    com.bumptech.glide.load.engine.DecodeHelper helper -> f
    int sourceIdIndex -> g
    int resourceClassIndex -> h
    com.bumptech.glide.load.Key sourceKey -> i
    java.util.List modelLoaders -> j
    int modelLoaderIndex -> k
    com.bumptech.glide.load.model.ModelLoader$LoadData loadData -> l
    java.io.File cacheFile -> m
    com.bumptech.glide.load.engine.ResourceCacheKey currentKey -> n
    1:1:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/g;Lh0/f$a;)V"}
    1:1:boolean startNext():0:0 -> a
    1:1:boolean hasNextModelLoader():0:0 -> b
    1:1:void cancel():0:0 -> cancel
    1:1:void onLoadFailed(java.lang.Exception):0:0 -> d
    1:1:void onDataReady(java.lang.Object):0:0 -> f
com.bumptech.glide.load.engine.ResourceCacheKey -> h0.x:
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> b
    com.bumptech.glide.load.Key sourceKey -> c
    com.bumptech.glide.load.Key signature -> d
    int width -> e
    int height -> f
    java.lang.Class decodedResourceClass -> g
    com.bumptech.glide.load.Options options -> h
    com.bumptech.glide.load.Transformation transformation -> i
    com.bumptech.glide.util.LruCache RESOURCE_CLASS_BYTES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.Key,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.Transformation,java.lang.Class,com.bumptech.glide.load.Options):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/b;Lf0/f;Lf0/f;IILf0/l;Ljava/lang/Class;Lf0/h;)V"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:byte[] getResourceClassBytes():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.ResourceRecycler -> h0.y:
    boolean isRecycling -> a
    android.os.Handler handler -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void recycle(com.bumptech.glide.load.engine.Resource,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Z)V"}
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback -> h0.y$a:
    void <init>() -> <init>
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
com.bumptech.glide.load.engine.SourceGenerator -> h0.z:
    com.bumptech.glide.load.engine.DecodeHelper helper -> e
    com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback cb -> f
    int loadDataListIndex -> g
    com.bumptech.glide.load.engine.DataCacheGenerator sourceCacheGenerator -> h
    java.lang.Object dataToCache -> i
    com.bumptech.glide.load.model.ModelLoader$LoadData loadData -> j
    com.bumptech.glide.load.engine.DataCacheKey originalKey -> k
    1:1:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/g;Lh0/f$a;)V"}
    1:1:boolean startNext():0:0 -> a
    1:1:void reschedule():0:0 -> b
    1:1:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/lang/Object;Lcom/bumptech/glide/load/data/d;Lf0/a;Lf0/f;)V"}
    1:1:void cancel():0:0 -> cancel
    1:1:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/d;Lf0/a;)V"}
    1:1:boolean cacheData(java.lang.Object):0:0 -> e
    1:1:boolean hasNextModelLoader():0:0 -> f
    1:1:boolean isCurrentRequest(com.bumptech.glide.load.model.ModelLoader$LoadData):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n$a;)Z"}
    1:1:void onDataReadyInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n$a;Ljava/lang/Object;)V"}
    1:1:void onLoadFailedInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Exception):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n$a;Ljava/lang/Exception;)V"}
    1:1:void startNextLoad(com.bumptech.glide.load.model.ModelLoader$LoadData):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n$a;)V"}
com.bumptech.glide.load.engine.SourceGenerator$1 -> h0.z$a:
    com.bumptech.glide.load.model.ModelLoader$LoadData val$toStart -> e
    com.bumptech.glide.load.engine.SourceGenerator this$0 -> f
    1:1:void <init>(com.bumptech.glide.load.engine.SourceGenerator,com.bumptech.glide.load.model.ModelLoader$LoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/z;Ll0/n$a;)V"}
    1:1:void onLoadFailed(java.lang.Exception):0:0 -> d
    1:1:void onDataReady(java.lang.Object):0:0 -> f
com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface -> i0.a:
    java.lang.String getTag() -> a
    int getArrayLength(java.lang.Object) -> b
    int getElementSizeInBytes() -> c
    java.lang.Object newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool -> i0.b:
    void trimMemory(int) -> a
    void clearMemory() -> b
    java.lang.Object getExact(int,java.lang.Class) -> c
    void put(java.lang.Object) -> d
    java.lang.Object get(int,java.lang.Class) -> e
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool -> i0.c:
    java.util.Queue keyPool -> a
    1:1:void <init>():0:0 -> <init>
    com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/m;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.Poolable get():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/m;"}
    1:1:void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/m;)V"}
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool -> i0.d:
    void trimMemory(int) -> a
    void clearMemory() -> b
    android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> c
    void put(android.graphics.Bitmap) -> d
    android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> e
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter -> i0.e:
    void <init>() -> <init>
    1:1:void trimMemory(int):0:0 -> a
    1:1:void clearMemory():0:0 -> b
    1:1:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config):0:0 -> c
    1:1:void put(android.graphics.Bitmap):0:0 -> d
    1:1:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config):0:0 -> e
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter -> i0.f:
    void <init>() -> <init>
    1:1:java.lang.String getTag():0:0 -> a
    1:1:int getArrayLength(java.lang.Object):0:0 -> b
    1:1:int getElementSizeInBytes():0:0 -> c
    1:1:int getArrayLength(byte[]):0:0 -> d
    1:1:byte[] newArray(int):0:0 -> e
    1:1:java.lang.Object newArray(int):0:0 -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap -> i0.g:
    com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head -> a
    java.util.Map keyToEntry -> b
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/m;)Ljava/lang/Object;"}
    1:1:void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/g$a;)V"}
    1:1:void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/g$a;)V"}
    1:1:void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/m;Ljava/lang/Object;)V"}
    1:1:void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/g$a;)V"}
    1:1:java.lang.Object removeLast():0:0 -> f
    1:1:void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/g$a;)V"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry -> i0.g$a:
    java.lang.Object key -> a
    java.util.List values -> b
    com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next -> c
    com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.lang.Object):0:0 -> <init>
    1:1:void add(java.lang.Object):0:0 -> a
    1:1:java.lang.Object removeLast():0:0 -> b
    1:1:int size():0:0 -> c
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter -> i0.h:
    void <init>() -> <init>
    1:1:java.lang.String getTag():0:0 -> a
    1:1:int getArrayLength(java.lang.Object):0:0 -> b
    1:1:int getElementSizeInBytes():0:0 -> c
    1:1:int getArrayLength(int[]):0:0 -> d
    1:1:int[] newArray(int):0:0 -> e
    1:1:java.lang.Object newArray(int):0:0 -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool -> i0.i:
    com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap -> a
    com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool keyPool -> b
    java.util.Map sortedSizes -> c
    java.util.Map adapters -> d
    int maxSize -> e
    int currentSize -> f
    1:1:void <init>(int):0:0 -> <init>
    1:1:void trimMemory(int):0:0 -> a
    1:1:void clearMemory():0:0 -> b
    1:1:java.lang.Object getExact(int,java.lang.Class):0:0 -> c
    1:1:void put(java.lang.Object):0:0 -> d
    1:1:java.lang.Object get(int,java.lang.Class):0:0 -> e
    1:1:void decrementArrayOfSize(int,java.lang.Class):0:0 -> f
    1:1:void evict():0:0 -> g
    1:1:void evictToSize(int):0:0 -> h
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Li0/a;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromType(java.lang.Class):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Li0/a;"}
    1:1:java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/i$a;)Ljava/lang/Object;"}
    1:1:java.lang.Object getForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key,java.lang.Class):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/i$a;Ljava/lang/Class;)Ljava/lang/Object;"}
    1:1:java.util.NavigableMap getSizesForAdapter(java.lang.Class):0:0 -> m
    1:1:boolean isNoMoreThanHalfFull():0:0 -> n
    1:1:boolean isSmallEnoughForReuse(int):0:0 -> o
    1:1:boolean mayFillRequest(int,java.lang.Integer):0:0 -> p
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key -> i0.i$a:
    com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool pool -> a
    int size -> b
    java.lang.Class arrayClass -> c
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/i$b;)V"}
    1:1:void offer():0:0 -> a
    1:1:void init(int,java.lang.Class):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool -> i0.i$b:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/m;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/i$a;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key get(int,java.lang.Class):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Class;)Li0/i$a;"}
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool -> i0.k:
    com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy strategy -> a
    java.util.Set allowedConfigs -> b
    long initialMaxSize -> c
    com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$BitmapTracker tracker -> d
    long maxSize -> e
    long currentSize -> f
    int hits -> g
    int misses -> h
    int puts -> i
    int evictions -> j
    android.graphics.Bitmap$Config DEFAULT_CONFIG -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long):0:0 -> <init>
    2:2:void <init>(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLi0/l;Ljava/util/Set;)V"}
    1:1:void trimMemory(int):0:0 -> a
    1:1:void clearMemory():0:0 -> b
    1:1:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config):0:0 -> c
    1:1:void put(android.graphics.Bitmap):0:0 -> d
    1:1:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config):0:0 -> e
    1:1:void assertNotHardwareConfig(android.graphics.Bitmap$Config):0:0 -> f
    1:1:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config):0:0 -> g
    1:1:void dump():0:0 -> h
    1:1:void dumpUnchecked():0:0 -> i
    1:1:void evict():0:0 -> j
    1:1:java.util.Set getDefaultAllowedConfigs():0:0 -> k
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/l;"}
    1:1:android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config):0:0 -> m
    1:1:long getMaxSize():0:0 -> n
    1:1:void maybeSetPreMultiplied(android.graphics.Bitmap):0:0 -> o
    1:1:void normalize(android.graphics.Bitmap):0:0 -> p
    1:1:void trimToSize(long):0:0 -> q
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$$ExternalSyntheticApiModelOutline0 -> i0.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap$Config com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$$InternalSyntheticApiModelOutline$2$bbe6e354c96af8776bf034893755b12b8ba36c3e74d5e42db76dfc1901dda19b$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$BitmapTracker -> i0.k$a:
    void remove(android.graphics.Bitmap) -> a
    void add(android.graphics.Bitmap) -> b
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker -> i0.k$b:
    void <init>() -> <init>
    1:1:void remove(android.graphics.Bitmap):0:0 -> a
    1:1:void add(android.graphics.Bitmap):0:0 -> b
com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy -> i0.l:
    int getSize(android.graphics.Bitmap) -> a
    android.graphics.Bitmap removeLast() -> b
    android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> c
    void put(android.graphics.Bitmap) -> d
    java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> e
    java.lang.String logBitmap(android.graphics.Bitmap) -> f
com.bumptech.glide.load.engine.bitmap_recycle.Poolable -> i0.m:
    void offer() -> a
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy -> i0.o:
    com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool keyPool -> a
    com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap -> b
    java.util.Map sortedSizes -> c
    android.graphics.Bitmap$Config[] ARGB_8888_IN_CONFIGS -> d
    android.graphics.Bitmap$Config[] RGBA_F16_IN_CONFIGS -> e
    android.graphics.Bitmap$Config[] RGB_565_IN_CONFIGS -> f
    android.graphics.Bitmap$Config[] ARGB_4444_IN_CONFIGS -> g
    android.graphics.Bitmap$Config[] ALPHA_8_IN_CONFIGS -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int getSize(android.graphics.Bitmap):0:0 -> a
    1:1:android.graphics.Bitmap removeLast():0:0 -> b
    1:1:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config):0:0 -> c
    1:1:void put(android.graphics.Bitmap):0:0 -> d
    1:1:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config):0:0 -> e
    1:1:java.lang.String logBitmap(android.graphics.Bitmap):0:0 -> f
    1:1:void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap):0:0 -> g
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/graphics/Bitmap$Config;)Li0/o$b;"}
    1:1:java.lang.String getBitmapString(int,android.graphics.Bitmap$Config):0:0 -> i
    1:1:android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config):0:0 -> j
    1:1:java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config):0:0 -> k
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$$ExternalSyntheticApiModelOutline0 -> i0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap$Config com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$$InternalSyntheticApiModelOutline$2$945ac2c7658596537bb9f31998895f4615a1a4c06d7edd3abe6fe96eb650c92b$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1 -> i0.o$a:
    int[] $SwitchMap$android$graphics$Bitmap$Config -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key -> i0.o$b:
    com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool pool -> a
    int size -> b
    android.graphics.Bitmap$Config config -> c
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/o$c;)V"}
    1:1:void offer():0:0 -> a
    1:1:void init(int,android.graphics.Bitmap$Config):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool -> i0.o$c:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/m;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/o$b;"}
    1:1:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/graphics/Bitmap$Config;)Li0/o$b;"}
com.bumptech.glide.load.engine.cache.DiskCache -> j0.a:
    void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lj0/a$b;)V"}
    java.io.File get(com.bumptech.glide.load.Key) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Ljava/io/File;"}
    void clear() -> clear
com.bumptech.glide.load.engine.cache.DiskCache$Factory -> j0.a$a:
    com.bumptech.glide.load.engine.cache.DiskCache build() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/a;"}
com.bumptech.glide.load.engine.cache.DiskCache$Writer -> j0.a$b:
    boolean write(java.io.File) -> a
com.bumptech.glide.load.engine.cache.DiskCacheAdapter -> j0.b:
    void <init>() -> <init>
    1:1:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lj0/a$b;)V"}
    1:1:java.io.File get(com.bumptech.glide.load.Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Ljava/io/File;"}
    1:1:void clear():0:0 -> clear
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker -> j0.c:
    java.util.Map locks -> a
    com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool writeLockPool -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void acquire(java.lang.String):0:0 -> a
    1:1:void release(java.lang.String):0:0 -> b
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock -> j0.c$a:
    java.util.concurrent.locks.Lock lock -> a
    int interestedThreads -> b
    1:1:void <init>():0:0 -> <init>
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool -> j0.c$b:
    java.util.Queue pool -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/c$a;"}
    1:1:void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/c$a;)V"}
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory -> j0.d:
    long diskCacheSize -> a
    com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter cacheDirectoryGetter -> b
    1:1:void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/d$a;J)V"}
    1:1:com.bumptech.glide.load.engine.cache.DiskCache build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/a;"}
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter -> j0.d$a:
    java.io.File getCacheDirectory() -> a
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper -> j0.e:
    com.bumptech.glide.load.engine.cache.SafeKeyGenerator safeKeyGenerator -> a
    java.io.File directory -> b
    long maxSize -> c
    com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker writeLocker -> d
    com.bumptech.glide.disklrucache.DiskLruCache diskLruCache -> e
    1:1:void <init>(java.io.File,long):0:0 -> <init>
    1:1:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lj0/a$b;)V"}
    1:1:java.io.File get(com.bumptech.glide.load.Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Ljava/io/File;"}
    1:1:com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;J)Lj0/a;"}
    1:1:void clear():0:0 -> clear
    1:1:com.bumptech.glide.disklrucache.DiskLruCache getDiskCache():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld0/b;"}
    1:1:void resetDiskCache():0:0 -> e
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory -> j0.f:
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,java.lang.String,long):0:0 -> <init>
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 -> j0.f$a:
    android.content.Context val$context -> a
    java.lang.String val$diskCacheName -> b
    1:1:void <init>(android.content.Context,java.lang.String):0:0 -> <init>
    1:1:java.io.File getCacheDirectory():0:0 -> a
com.bumptech.glide.load.engine.cache.LruResourceCache -> j0.g:
    com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener listener -> e
    1:1:void <init>(long):0:0 -> <init>
    1:1:void trimMemory(int):0:0 -> a
    1:1:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/h$a;)V"}
    1:1:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/v;)Lh0/v;"}
    1:1:int getSize(java.lang.Object):0:0 -> i
    1:1:void onItemEvicted(java.lang.Object,java.lang.Object):0:0 -> j
    1:1:int getSize(com.bumptech.glide.load.engine.Resource):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)I"}
    1:1:void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/v;)V"}
com.bumptech.glide.load.engine.cache.MemoryCache -> j0.h:
    void trimMemory(int) -> a
    void clearMemory() -> b
    void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/h$a;)V"}
    com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lh0/v;"}
    com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lh0/v;)Lh0/v;"}
com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener -> j0.h$a:
    void onResourceRemoved(com.bumptech.glide.load.engine.Resource) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)V"}
com.bumptech.glide.load.engine.cache.MemorySizeCalculator -> j0.i:
    int bitmapPoolSize -> a
    int memoryCacheSize -> b
    android.content.Context context -> c
    int arrayPoolSize -> d
    1:1:void <init>(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/i$a;)V"}
    1:1:int getArrayPoolSizeInBytes():0:0 -> a
    1:1:int getBitmapPoolSize():0:0 -> b
    1:1:int getMaxSize(android.app.ActivityManager,float,float):0:0 -> c
    1:1:int getMemoryCacheSize():0:0 -> d
    1:1:boolean isLowMemoryDevice(android.app.ActivityManager):0:0 -> e
    1:1:java.lang.String toMb(int):0:0 -> f
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder -> j0.i$a:
    android.content.Context context -> a
    android.app.ActivityManager activityManager -> b
    com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions screenDimensions -> c
    float memoryCacheScreens -> d
    float bitmapPoolScreens -> e
    float maxSizeMultiplier -> f
    float lowMemoryMaxSizeMultiplier -> g
    int arrayPoolSizeBytes -> h
    int BITMAP_POOL_TARGET_SCREENS -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.cache.MemorySizeCalculator build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/i;"}
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions -> j0.i$b:
    android.util.DisplayMetrics displayMetrics -> a
    1:1:void <init>(android.util.DisplayMetrics):0:0 -> <init>
    1:1:int getHeightPixels():0:0 -> a
    1:1:int getWidthPixels():0:0 -> b
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions -> j0.i$c:
    int getHeightPixels() -> a
    int getWidthPixels() -> b
com.bumptech.glide.load.engine.cache.SafeKeyGenerator -> j0.j:
    com.bumptech.glide.util.LruCache loadIdToSafeHash -> a
    androidx.core.util.Pools$Pool digestPool -> b
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Ljava/lang/String;"}
    1:1:java.lang.String getSafeKey(com.bumptech.glide.load.Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Ljava/lang/String;"}
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1 -> j0.j$a:
    com.bumptech.glide.load.engine.cache.SafeKeyGenerator this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.engine.cache.SafeKeyGenerator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/j;)V"}
    1:1:java.lang.Object create():0:0 -> a
    1:1:com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/j$b;"}
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer -> j0.j$b:
    java.security.MessageDigest messageDigest -> e
    com.bumptech.glide.util.pool.StateVerifier stateVerifier -> f
    1:1:void <init>(java.security.MessageDigest):0:0 -> <init>
    1:1:com.bumptech.glide.util.pool.StateVerifier getVerifier():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/c;"}
com.bumptech.glide.load.engine.executor.GlideExecutor -> k0.a:
    java.util.concurrent.ExecutorService delegate -> e
    long KEEP_ALIVE_TIME_MS -> f
    int bestThreadCount -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.concurrent.ExecutorService):0:0 -> <init>
    1:1:int calculateAnimationExecutorThreadCount():0:0 -> a
    1:1:boolean awaitTermination(long,java.util.concurrent.TimeUnit):0:0 -> awaitTermination
    1:1:int calculateBestThreadCount():0:0 -> b
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newAnimationBuilder():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a$b;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newDiskCacheBuilder():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a$b;"}
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newSourceBuilder():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a$b;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:java.util.List invokeAll(java.util.Collection):0:0 -> invokeAll
    2:2:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit):0:0 -> invokeAll
    1:1:java.lang.Object invokeAny(java.util.Collection):0:0 -> invokeAny
    2:2:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit):0:0 -> invokeAny
    1:1:boolean isShutdown():0:0 -> isShutdown
    1:1:boolean isTerminated():0:0 -> isTerminated
    1:1:void shutdown():0:0 -> shutdown
    1:1:java.util.List shutdownNow():0:0 -> shutdownNow
    1:1:java.util.concurrent.Future submit(java.lang.Runnable):0:0 -> submit
    2:2:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object):0:0 -> submit
    3:3:java.util.concurrent.Future submit(java.util.concurrent.Callable):0:0 -> submit
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.engine.executor.GlideExecutor$1 -> k0.a$a:
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder -> k0.a$b:
    boolean preventNetworkOperations -> a
    int corePoolSize -> b
    int maximumPoolSize -> c
    java.util.concurrent.ThreadFactory threadFactory -> d
    com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy uncaughtThrowableStrategy -> e
    java.lang.String name -> f
    long threadTimeoutMillis -> g
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setName(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lk0/a$b;"}
    1:1:com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setThreadCount(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lk0/a$b;"}
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory -> k0.a$c:
    void <init>() -> <init>
    1:1:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a$a;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory$1 -> k0.a$c$a:
    com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory this$0 -> e
    1:1:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultPriorityThreadFactory,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a$c;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory -> k0.a$d:
    java.util.concurrent.ThreadFactory delegate -> a
    java.lang.String name -> b
    com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy uncaughtThrowableStrategy -> c
    boolean preventNetworkOperations -> d
    java.util.concurrent.atomic.AtomicInteger threadNum -> e
    1:1:void <init>(java.util.concurrent.ThreadFactory,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/ThreadFactory;Ljava/lang/String;Lk0/a$e;Z)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1 -> k0.a$d$a:
    java.lang.Runnable val$runnable -> e
    com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory this$0 -> f
    1:1:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a$d;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy -> k0.a$e:
    com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy IGNORE -> a
    com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy LOG -> b
    com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy THROW -> c
    com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy DEFAULT -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void handle(java.lang.Throwable) -> a
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1 -> k0.a$e$a:
    void <init>() -> <init>
    1:1:void handle(java.lang.Throwable):0:0 -> a
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2 -> k0.a$e$b:
    void <init>() -> <init>
    1:1:void handle(java.lang.Throwable):0:0 -> a
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3 -> k0.a$e$c:
    void <init>() -> <init>
    1:1:void handle(java.lang.Throwable):0:0 -> a
com.bumptech.glide.load.engine.executor.RuntimeCompat -> k0.b:
    1:1:int availableProcessors():0:0 -> a
com.bumptech.glide.load.model.AssetUriLoader -> l0.a:
    android.content.res.AssetManager assetManager -> a
    com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory factory -> b
    int ASSET_PREFIX_LENGTH -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.res.AssetManager,com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ll0/a$a;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory -> l0.a$a:
    com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;)Lcom/bumptech/glide/load/data/d;"}
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory -> l0.a$b:
    android.content.res.AssetManager assetManager -> a
    1:1:void <init>(android.content.res.AssetManager):0:0 -> <init>
    1:1:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;)Lcom/bumptech/glide/load/data/d;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory -> l0.a$c:
    android.content.res.AssetManager assetManager -> a
    1:1:void <init>(android.content.res.AssetManager):0:0 -> <init>
    1:1:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;)Lcom/bumptech/glide/load/data/d;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ByteArrayLoader -> l0.b:
    com.bumptech.glide.load.model.ByteArrayLoader$Converter converter -> a
    1:1:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$Converter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/b$b;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[],int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(byte[]):0:0 -> d
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory -> l0.b$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1 -> l0.b$a$a:
    com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/b$a;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:java.lang.Object convert(byte[]):0:0 -> b
    1:1:java.nio.ByteBuffer convert(byte[]):0:0 -> c
com.bumptech.glide.load.model.ByteArrayLoader$Converter -> l0.b$b:
    java.lang.Class getDataClass() -> a
    java.lang.Object convert(byte[]) -> b
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher -> l0.b$c:
    byte[] model -> e
    com.bumptech.glide.load.model.ByteArrayLoader$Converter converter -> f
    1:1:void <init>(byte[],com.bumptech.glide.load.model.ByteArrayLoader$Converter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLl0/b$b;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory -> l0.b$d:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1 -> l0.b$d$a:
    com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/b$d;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:java.lang.Object convert(byte[]):0:0 -> b
    1:1:java.io.InputStream convert(byte[]):0:0 -> c
com.bumptech.glide.load.model.ByteBufferEncoder -> l0.c:
    void <init>() -> <init>
    1:1:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/io/File;Lf0/h;)Z"}
    1:1:boolean encode(java.nio.ByteBuffer,java.io.File,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Ljava/io/File;Lf0/h;)Z"}
com.bumptech.glide.load.model.ByteBufferFileLoader -> l0.d:
    void <init>() -> <init>
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(java.io.File):0:0 -> d
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher -> l0.d$a:
    java.io.File file -> e
    1:1:void <init>(java.io.File):0:0 -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory -> l0.d$b:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.DataUrlLoader -> l0.e:
    com.bumptech.glide.load.model.DataUrlLoader$DataDecoder dataDecoder -> a
    1:1:void <init>(com.bumptech.glide.load.model.DataUrlLoader$DataDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/e$a;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
com.bumptech.glide.load.model.DataUrlLoader$DataDecoder -> l0.e$a:
    java.lang.Class getDataClass() -> a
    void close(java.lang.Object) -> b
    java.lang.Object decode(java.lang.String) -> c
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher -> l0.e$b:
    java.lang.String dataUri -> e
    com.bumptech.glide.load.model.DataUrlLoader$DataDecoder reader -> f
    java.lang.Object data -> g
    1:1:void <init>(java.lang.String,com.bumptech.glide.load.model.DataUrlLoader$DataDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ll0/e$a;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory -> l0.e$c:
    com.bumptech.glide.load.model.DataUrlLoader$DataDecoder opener -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1 -> l0.e$c$a:
    com.bumptech.glide.load.model.DataUrlLoader$StreamFactory this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.model.DataUrlLoader$StreamFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/e$c;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> b
    1:1:java.lang.Object decode(java.lang.String):0:0 -> c
    1:1:void close(java.io.InputStream):0:0 -> d
    1:1:java.io.InputStream decode(java.lang.String):0:0 -> e
com.bumptech.glide.load.model.DirectResourceLoader -> l0.f:
    android.content.Context context -> a
    com.bumptech.glide.load.model.DirectResourceLoader$ResourceOpener resourceOpener -> b
    1:1:void <init>(android.content.Context,com.bumptech.glide.load.model.DirectResourceLoader$ResourceOpener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/f$e;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoaderFactory assetFileDescriptorFactory(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll0/o;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoaderFactory drawableFactory(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll0/o;"}
    1:1:boolean handles(java.lang.Integer):0:0 -> f
    1:1:com.bumptech.glide.load.model.ModelLoaderFactory inputStreamFactory(android.content.Context):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll0/o;"}
com.bumptech.glide.load.model.DirectResourceLoader$AssetFileDescriptorFactory -> l0.f$a:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> b
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
    1:1:java.lang.Object open(android.content.res.Resources$Theme,android.content.res.Resources,int):0:0 -> d
    1:1:void close(android.content.res.AssetFileDescriptor):0:0 -> e
    1:1:android.content.res.AssetFileDescriptor open(android.content.res.Resources$Theme,android.content.res.Resources,int):0:0 -> f
com.bumptech.glide.load.model.DirectResourceLoader$DrawableFactory -> l0.f$b:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> b
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
    1:1:java.lang.Object open(android.content.res.Resources$Theme,android.content.res.Resources,int):0:0 -> d
    1:1:void close(android.graphics.drawable.Drawable):0:0 -> e
    1:1:android.graphics.drawable.Drawable open(android.content.res.Resources$Theme,android.content.res.Resources,int):0:0 -> f
com.bumptech.glide.load.model.DirectResourceLoader$InputStreamFactory -> l0.f$c:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> b
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
    1:1:java.lang.Object open(android.content.res.Resources$Theme,android.content.res.Resources,int):0:0 -> d
    1:1:void close(java.io.InputStream):0:0 -> e
    1:1:java.io.InputStream open(android.content.res.Resources$Theme,android.content.res.Resources,int):0:0 -> f
com.bumptech.glide.load.model.DirectResourceLoader$ResourceDataFetcher -> l0.f$d:
    android.content.res.Resources$Theme theme -> e
    android.content.res.Resources resources -> f
    com.bumptech.glide.load.model.DirectResourceLoader$ResourceOpener resourceOpener -> g
    int resourceId -> h
    java.lang.Object data -> i
    1:1:void <init>(android.content.res.Resources$Theme,android.content.res.Resources,com.bumptech.glide.load.model.DirectResourceLoader$ResourceOpener,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources$Theme;Landroid/content/res/Resources;Ll0/f$e;I)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.DirectResourceLoader$ResourceOpener -> l0.f$e:
    java.lang.Class getDataClass() -> a
    void close(java.lang.Object) -> b
    java.lang.Object open(android.content.res.Resources$Theme,android.content.res.Resources,int) -> d
com.bumptech.glide.load.model.FileLoader -> l0.g:
    com.bumptech.glide.load.model.FileLoader$FileOpener fileOpener -> a
    1:1:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/g$d;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(java.io.File):0:0 -> d
com.bumptech.glide.load.model.FileLoader$Factory -> l0.g$a:
    com.bumptech.glide.load.model.FileLoader$FileOpener opener -> a
    1:1:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/g$d;)V"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory -> l0.g$b:
    1:1:void <init>():0:0 -> <init>
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1 -> l0.g$b$a:
    void <init>() -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> b
    1:1:java.lang.Object open(java.io.File):0:0 -> c
    1:1:void close(android.os.ParcelFileDescriptor):0:0 -> d
    1:1:android.os.ParcelFileDescriptor open(java.io.File):0:0 -> e
com.bumptech.glide.load.model.FileLoader$FileFetcher -> l0.g$c:
    java.io.File file -> e
    com.bumptech.glide.load.model.FileLoader$FileOpener opener -> f
    java.lang.Object data -> g
    1:1:void <init>(java.io.File,com.bumptech.glide.load.model.FileLoader$FileOpener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;Ll0/g$d;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.FileLoader$FileOpener -> l0.g$d:
    java.lang.Class getDataClass() -> a
    void close(java.lang.Object) -> b
    java.lang.Object open(java.io.File) -> c
com.bumptech.glide.load.model.FileLoader$StreamFactory -> l0.g$e:
    1:1:void <init>():0:0 -> <init>
com.bumptech.glide.load.model.FileLoader$StreamFactory$1 -> l0.g$e$a:
    void <init>() -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void close(java.lang.Object):0:0 -> b
    1:1:java.lang.Object open(java.io.File):0:0 -> c
    1:1:void close(java.io.InputStream):0:0 -> d
    1:1:java.io.InputStream open(java.io.File):0:0 -> e
com.bumptech.glide.load.model.GlideUrl -> l0.h:
    com.bumptech.glide.load.model.Headers headers -> b
    java.net.URL url -> c
    java.lang.String stringUrl -> d
    java.lang.String safeStringUrl -> e
    java.net.URL safeUrl -> f
    byte[] cacheKeyBytes -> g
    int hashCode -> h
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,com.bumptech.glide.load.model.Headers):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ll0/i;)V"}
    3:3:void <init>(java.net.URL):0:0 -> <init>
    4:4:void <init>(java.net.URL,com.bumptech.glide.load.model.Headers):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/net/URL;Ll0/i;)V"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:java.lang.String getCacheKey():0:0 -> c
    1:1:byte[] getCacheKeyBytes():0:0 -> d
    1:1:java.util.Map getHeaders():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.String getSafeStringUrl():0:0 -> f
    1:1:java.net.URL getSafeUrl():0:0 -> g
    1:1:java.net.URL toURL():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.model.Headers -> l0.i:
    com.bumptech.glide.load.model.Headers NONE -> a
    com.bumptech.glide.load.model.Headers DEFAULT -> b
    1:1:void <clinit>():0:0 -> <clinit>
    java.util.Map getHeaders() -> a
com.bumptech.glide.load.model.Headers$1 -> l0.i$a:
    void <init>() -> <init>
    1:1:java.util.Map getHeaders():0:0 -> a
com.bumptech.glide.load.model.LazyHeaderFactory -> l0.j:
    java.lang.String buildHeader() -> a
com.bumptech.glide.load.model.LazyHeaders -> l0.k:
    java.util.Map headers -> c
    java.util.Map combinedHeaders -> d
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.util.Map getHeaders():0:0 -> a
    1:1:java.lang.String buildHeaderValue(java.util.List):0:0 -> b
    1:1:java.util.Map generateHeaders():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.model.LazyHeaders$Builder -> l0.k$a:
    boolean copyOnModify -> a
    java.util.Map headers -> b
    boolean isUserAgentDefault -> c
    java.lang.String DEFAULT_USER_AGENT -> d
    java.util.Map DEFAULT_HEADERS -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.model.LazyHeaders build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/k;"}
    1:1:java.lang.String getSanitizedUserAgent():0:0 -> b
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory -> l0.k$b:
    java.lang.String value -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String buildHeader():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.model.MediaStoreFileLoader -> l0.l:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory -> l0.l$a:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher -> l0.l$b:
    android.content.Context context -> e
    android.net.Uri uri -> f
    java.lang.String[] PROJECTION -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,android.net.Uri):0:0 -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.ModelCache -> l0.m:
    com.bumptech.glide.util.LruCache cache -> a
    1:1:void <init>(long):0:0 -> <init>
    1:1:java.lang.Object get(java.lang.Object,int,int):0:0 -> a
    1:1:void put(java.lang.Object,int,int,java.lang.Object):0:0 -> b
com.bumptech.glide.load.model.ModelCache$1 -> l0.m$a:
    com.bumptech.glide.load.model.ModelCache this$0 -> e
    1:1:void <init>(com.bumptech.glide.load.model.ModelCache,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/m;J)V"}
    1:1:void onItemEvicted(java.lang.Object,java.lang.Object):0:0 -> j
    1:1:void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/m$b;Ljava/lang/Object;)V"}
com.bumptech.glide.load.model.ModelCache$ModelKey -> l0.m$b:
    int height -> a
    int width -> b
    java.lang.Object model -> c
    java.util.Queue KEY_QUEUE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;II)Ll0/m$b;"}
    1:1:void init(java.lang.Object,int,int):0:0 -> b
    1:1:void release():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.bumptech.glide.load.model.ModelLoader -> l0.n:
    boolean handles(java.lang.Object) -> a
    com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
com.bumptech.glide.load.model.ModelLoader$LoadData -> l0.n$a:
    com.bumptech.glide.load.Key sourceKey -> a
    java.util.List alternateKeys -> b
    com.bumptech.glide.load.data.DataFetcher fetcher -> c
    1:1:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Lcom/bumptech/glide/load/data/d;)V"}
    2:2:void <init>(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;Ljava/util/List;Lcom/bumptech/glide/load/data/d;)V"}
com.bumptech.glide.load.model.ModelLoaderFactory -> l0.o:
    com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ModelLoaderRegistry -> l0.p:
    com.bumptech.glide.load.model.MultiModelLoaderFactory multiModelLoaderFactory -> a
    com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache cache -> b
    1:1:void <init>(androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d;)V"}
    2:2:void <init>(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)V"}
    1:1:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ll0/o;)V"}
    1:1:java.lang.Class getClass(java.lang.Object):0:0 -> b
    1:1:java.util.List getDataClasses(java.lang.Class):0:0 -> c
    1:1:java.util.List getModelLoaders(java.lang.Object):0:0 -> d
    1:1:java.util.List getModelLoadersForClass(java.lang.Class):0:0 -> e
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache -> l0.p$a:
    java.util.Map cachedModelLoaders -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void clear():0:0 -> a
    1:1:java.util.List get(java.lang.Class):0:0 -> b
    1:1:void put(java.lang.Class,java.util.List):0:0 -> c
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry -> l0.p$a$a:
    java.util.List loaders -> a
    1:1:void <init>(java.util.List):0:0 -> <init>
com.bumptech.glide.load.model.MultiModelLoader -> l0.q:
    java.util.List modelLoaders -> a
    androidx.core.util.Pools$Pool exceptionListPool -> b
    1:1:void <init>(java.util.List,androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lh/d;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher -> l0.q$a:
    java.util.List fetchers -> e
    androidx.core.util.Pools$Pool throwableListPool -> f
    int currentIndex -> g
    com.bumptech.glide.Priority priority -> h
    com.bumptech.glide.load.data.DataFetcher$DataCallback callback -> i
    java.util.List exceptions -> j
    boolean isCancelled -> k
    1:1:void <init>(java.util.List,androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lh/d;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void onLoadFailed(java.lang.Exception):0:0 -> d
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
    1:1:void onDataReady(java.lang.Object):0:0 -> f
    1:1:void startNextOrFail():0:0 -> g
com.bumptech.glide.load.model.MultiModelLoaderFactory -> l0.r:
    java.util.List entries -> a
    com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory factory -> b
    java.util.Set alreadyUsedEntries -> c
    androidx.core.util.Pools$Pool throwableListPool -> d
    com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory DEFAULT_FACTORY -> e
    com.bumptech.glide.load.model.ModelLoader EMPTY_MODEL_LOADER -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.core.util.Pools$Pool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d;)V"}
    2:2:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d;Ll0/r$c;)V"}
    1:1:void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ll0/o;Z)V"}
    1:1:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ll0/o;)V"}
    1:1:java.util.List build(java.lang.Class):0:0 -> c
    1:1:com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;)Ll0/n;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r$b;)Ll0/n;"}
    1:1:com.bumptech.glide.load.model.ModelLoader emptyModelLoader():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/n;"}
    1:1:java.util.List getDataClasses(java.lang.Class):0:0 -> g
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader -> l0.r$a:
    void <init>() -> <init>
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry -> l0.r$b:
    java.lang.Class modelClass -> a
    java.lang.Class dataClass -> b
    com.bumptech.glide.load.model.ModelLoaderFactory factory -> c
    1:1:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ll0/o;)V"}
    1:1:boolean handles(java.lang.Class):0:0 -> a
    1:1:boolean handles(java.lang.Class,java.lang.Class):0:0 -> b
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory -> l0.r$c:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lh/d;)Ll0/q;"}
com.bumptech.glide.load.model.ResourceLoader -> l0.s:
    com.bumptech.glide.load.model.ModelLoader uriLoader -> a
    android.content.res.Resources resources -> b
    1:1:void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Ll0/n;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;IILf0/h;)Ll0/n$a;"}
    1:1:android.net.Uri getResourceUri(java.lang.Integer):0:0 -> d
    1:1:boolean handles(java.lang.Integer):0:0 -> e
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory -> l0.s$a:
    android.content.res.Resources resources -> a
    1:1:void <init>(android.content.res.Resources):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ResourceLoader$StreamFactory -> l0.s$b:
    android.content.res.Resources resources -> a
    1:1:void <init>(android.content.res.Resources):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ResourceLoader$UriFactory -> l0.s$c:
    android.content.res.Resources resources -> a
    1:1:void <init>(android.content.res.Resources):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ResourceUriLoader -> l0.t:
    android.content.Context context -> a
    com.bumptech.glide.load.model.ModelLoader delegate -> b
    1:1:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/n;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
    1:1:com.bumptech.glide.load.model.ModelLoaderFactory newAssetFileDescriptorFactory(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll0/o;"}
    1:1:com.bumptech.glide.load.model.ModelLoaderFactory newStreamFactory(android.content.Context):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll0/o;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData parseResourceIdUri(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData parseResourceNameUri(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
com.bumptech.glide.load.model.ResourceUriLoader$AssetFileDescriptorFactory -> l0.t$a:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.ResourceUriLoader$InputStreamFactory -> l0.t$b:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.StreamEncoder -> l0.u:
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> a
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/b;)V"}
    1:1:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/io/File;Lf0/h;)Z"}
    1:1:boolean encode(java.io.InputStream,java.io.File,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Ljava/io/File;Lf0/h;)Z"}
com.bumptech.glide.load.model.StringLoader -> l0.v:
    com.bumptech.glide.load.model.ModelLoader uriLoader -> a
    1:1:void <init>(com.bumptech.glide.load.model.ModelLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(java.lang.String):0:0 -> d
    1:1:android.net.Uri parseUri(java.lang.String):0:0 -> e
    1:1:android.net.Uri toFileUri(java.lang.String):0:0 -> f
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory -> l0.v$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory -> l0.v$b:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.StringLoader$StreamFactory -> l0.v$c:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.UnitModelLoader -> l0.w:
    com.bumptech.glide.load.model.UnitModelLoader INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.UnitModelLoader getInstance():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/w;"}
com.bumptech.glide.load.model.UnitModelLoader$Factory -> l0.w$a:
    com.bumptech.glide.load.model.UnitModelLoader$Factory FACTORY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/w$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher -> l0.w$b:
    java.lang.Object resource -> e
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
com.bumptech.glide.load.model.UriLoader -> l0.x:
    com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory factory -> a
    java.util.Set SCHEMES -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/x$c;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory -> l0.x$a:
    android.content.ContentResolver contentResolver -> a
    1:1:void <init>(android.content.ContentResolver):0:0 -> <init>
    1:1:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lcom/bumptech/glide/load/data/d;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory -> l0.x$b:
    android.content.ContentResolver contentResolver -> a
    1:1:void <init>(android.content.ContentResolver):0:0 -> <init>
    1:1:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lcom/bumptech/glide/load/data/d;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory -> l0.x$c:
    com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lcom/bumptech/glide/load/data/d;"}
com.bumptech.glide.load.model.UriLoader$StreamFactory -> l0.x$d:
    android.content.ContentResolver contentResolver -> a
    1:1:void <init>(android.content.ContentResolver):0:0 -> <init>
    1:1:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lcom/bumptech/glide/load/data/d;"}
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.UrlUriLoader -> l0.y:
    com.bumptech.glide.load.model.ModelLoader urlLoader -> a
    java.util.Set SCHEMES -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.model.ModelLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory -> l0.y$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader -> m0.a:
    com.bumptech.glide.load.model.ModelCache modelCache -> a
    com.bumptech.glide.load.Option TIMEOUT -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.model.ModelCache):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/m;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/h;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(com.bumptech.glide.load.model.GlideUrl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/h;)Z"}
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory -> m0.a$a:
    com.bumptech.glide.load.model.ModelCache modelCache -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader -> m0.b:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory -> m0.b$a:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader -> m0.c:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
    1:1:boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/h;)Z"}
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory -> m0.c$a:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader -> m0.d:
    android.content.Context context -> a
    com.bumptech.glide.load.model.ModelLoader fileDelegate -> b
    com.bumptech.glide.load.model.ModelLoader uriDelegate -> c
    java.lang.Class dataClass -> d
    1:1:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/n;Ll0/n;Ljava/lang/Class;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(android.net.Uri):0:0 -> d
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory -> m0.d$a:
    android.content.Context context -> a
    java.lang.Class dataClass -> b
    1:1:void <init>(android.content.Context,java.lang.Class):0:0 -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$FileDescriptorFactory -> m0.d$b:
    1:1:void <init>(android.content.Context):0:0 -> <init>
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$InputStreamFactory -> m0.d$c:
    1:1:void <init>(android.content.Context):0:0 -> <init>
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher -> m0.d$d:
    android.content.Context context -> e
    com.bumptech.glide.load.model.ModelLoader fileDelegate -> f
    com.bumptech.glide.load.model.ModelLoader uriDelegate -> g
    android.net.Uri uri -> h
    int width -> i
    int height -> j
    com.bumptech.glide.load.Options options -> k
    java.lang.Class dataClass -> l
    boolean isCancelled -> m
    com.bumptech.glide.load.data.DataFetcher delegate -> n
    java.lang.String[] PROJECTION -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.net.Uri,int,int,com.bumptech.glide.load.Options,java.lang.Class):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/n;Ll0/n;Landroid/net/Uri;IILf0/h;Ljava/lang/Class;)V"}
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:com.bumptech.glide.load.DataSource getDataSource():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/a;"}
    1:1:void cancel():0:0 -> cancel
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildDelegateData():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/n$a;"}
    1:1:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/data/d$a;)V"}
    1:1:com.bumptech.glide.load.data.DataFetcher buildDelegateFetcher():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/load/data/d;"}
    1:1:boolean isAccessMediaLocationGranted():0:0 -> g
    1:1:java.io.File queryForFilePath(android.net.Uri):0:0 -> h
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline0 -> m0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$InternalSyntheticApiModelOutline$4$5ed3cff3b7b7f13c184a730a43be378cc8332427fc5ed3bf6dc756cbfc388993$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline1 -> m0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Uri com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$InternalSyntheticApiModelOutline$4$5ed3cff3b7b7f13c184a730a43be378cc8332427fc5ed3bf6dc756cbfc388993$1.m(android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$ExternalSyntheticApiModelOutline2 -> m0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher$$InternalSyntheticApiModelOutline$5$d4b668d2da656655da70f38a704f04ea2f38223ab0dd1549ec08984851cd132e$0.m(android.content.Context,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.model.stream.UrlLoader -> m0.h:
    com.bumptech.glide.load.model.ModelLoader glideUrlLoader -> a
    1:1:void <init>(com.bumptech.glide.load.model.ModelLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/n;)V"}
    1:1:boolean handles(java.lang.Object):0:0 -> a
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Ll0/n$a;"}
    1:1:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/net/URL;IILf0/h;)Ll0/n$a;"}
    1:1:boolean handles(java.net.URL):0:0 -> d
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory -> m0.h$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/r;)Ll0/n;"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener -> n0.l:
    com.bumptech.glide.load.resource.bitmap.HardwareConfigState hardwareConfigState -> a
    int requestedWidth -> b
    int requestedHeight -> c
    com.bumptech.glide.load.DecodeFormat decodeFormat -> d
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy strategy -> e
    boolean isHardwareConfigAllowed -> f
    com.bumptech.glide.load.PreferredColorSpace preferredColorSpace -> g
    1:1:void <init>(int,int,com.bumptech.glide.load.Options):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILf0/h;)V"}
    1:1:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline0 -> n0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$0.m(android.graphics.ImageDecoder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline1 -> n0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$10.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline10 -> n0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$9.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline2 -> n0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$11.m(android.graphics.ColorSpace$Named):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline3 -> n0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$12.m(android.graphics.ImageDecoder,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline4 -> n0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$2.m(android.graphics.ImageDecoder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline5 -> n0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$3.m(android.graphics.ImageDecoder,android.graphics.ImageDecoder$OnPartialImageListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline6 -> n0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.util.Size com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$4.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline7 -> n0.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$5.m(android.graphics.ImageDecoder,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline8 -> n0.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$6.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$ExternalSyntheticApiModelOutline9 -> n0.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$$InternalSyntheticApiModelOutline$6$553f50787d6a55843f44102b02956bbe27a023b10d11171a2e2c58656b37b922$8.m(android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener$1 -> n0.l$a:
    com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln0/l;)V"}
    1:1:boolean onPartialImage(android.graphics.ImageDecoder$DecodeException):0:0 -> onPartialImage
com.bumptech.glide.load.resource.SimpleResource -> n0.m:
    java.lang.Object data -> e
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.UnitTransformation -> n0.n:
    com.bumptech.glide.load.Transformation TRANSFORMATION -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh0/v;II)Lh0/v;"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:com.bumptech.glide.load.resource.UnitTransformation get():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln0/n;"}
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder -> o0.a:
    com.bumptech.glide.load.ResourceDecoder decoder -> a
    android.content.res.Resources resources -> b
    1:1:void <init>(android.content.res.Resources,com.bumptech.glide.load.ResourceDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Lf0/j;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder -> o0.b:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> a
    com.bumptech.glide.load.ResourceEncoder encoder -> b
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceEncoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Lf0/k;)V"}
    1:1:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/io/File;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/h;)Lf0/c;"}
    1:1:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Ljava/io/File;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.BitmapEncoder -> o0.c:
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> a
    com.bumptech.glide.load.Option COMPRESSION_QUALITY -> b
    com.bumptech.glide.load.Option COMPRESSION_FORMAT -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/b;)V"}
    1:1:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/io/File;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/h;)Lf0/c;"}
    1:1:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Ljava/io/File;Lf0/h;)Z"}
    1:1:android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Lf0/h;)Landroid/graphics/Bitmap$CompressFormat;"}
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder -> o0.f:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder$Source;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(android.graphics.ImageDecoder$Source,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder$Source;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder$$ExternalSyntheticApiModelOutline0 -> o0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ImageDecoder$Source com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder$$InternalSyntheticApiModelOutline$4$610624a40f739ed0af59b27d33f763026b6a165e346b7e78071c0b67ad188e28$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder$$ExternalSyntheticApiModelOutline1 -> o0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder$$InternalSyntheticApiModelOutline$5$4e52c45c13db18c1df7e9b35efa88cef7c7072194be2371ece0003c482756d5a$0.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.BitmapResource -> o0.g:
    android.graphics.Bitmap bitmap -> e
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> f
    1:1:void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Li0/d;)V"}
    1:1:void initialize():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:android.graphics.Bitmap get():0:0 -> e
    1:1:com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Li0/d;)Lo0/g;"}
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder -> o0.h:
    com.bumptech.glide.load.resource.bitmap.Downsampler downsampler -> a
    1:1:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder -> o0.j:
    com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder wrapped -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder$$ExternalSyntheticApiModelOutline0 -> o0.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ImageDecoder$Source com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder$$InternalSyntheticApiModelOutline$4$2d19590367a54775fb5a754be0106a51bf59ce8be8431d1102f1119e29ee4a7c$0.m(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser -> o0.k:
    byte[] JPEG_EXIF_SEGMENT_PREAMBLE_BYTES -> a
    int[] BYTES_PER_FORMAT -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer):0:0 -> a
    1:1:int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Li0/b;)I"}
    1:1:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;)I"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream):0:0 -> d
    1:1:int calcTagOffset(int,int):0:0 -> e
    1:1:int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/k$c;Li0/b;)I"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/k$c;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;"}
    1:1:boolean handles(int):0:0 -> h
    1:1:boolean hasJpegExifPreamble(byte[],int):0:0 -> i
    1:1:int moveToExifSegmentAndGetLength(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/k$c;)I"}
    1:1:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/k$b;)I"}
    1:1:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,byte[],int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/k$c;[BI)I"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType sniffAvif(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/k$c;I)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;"}
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader -> o0.k$a:
    java.nio.ByteBuffer byteBuffer -> a
    1:1:void <init>(java.nio.ByteBuffer):0:0 -> <init>
    1:1:int getUInt16():0:0 -> a
    1:1:long skip(long):0:0 -> b
    1:1:int read(byte[],int):0:0 -> c
    1:1:short getUInt8():0:0 -> d
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader -> o0.k$b:
    java.nio.ByteBuffer data -> a
    1:1:void <init>(byte[],int):0:0 -> <init>
    1:1:short getInt16(int):0:0 -> a
    1:1:int getInt32(int):0:0 -> b
    1:1:boolean isAvailable(int,int):0:0 -> c
    1:1:int length():0:0 -> d
    1:1:void order(java.nio.ByteOrder):0:0 -> e
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader -> o0.k$c:
    int getUInt16() -> a
    long skip(long) -> b
    int read(byte[],int) -> c
    short getUInt8() -> d
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException -> o0.k$c$a:
    1:1:void <init>():0:0 -> <init>
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader -> o0.k$d:
    java.io.InputStream is -> a
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    1:1:int getUInt16():0:0 -> a
    1:1:long skip(long):0:0 -> b
    1:1:int read(byte[],int):0:0 -> c
    1:1:short getUInt8():0:0 -> d
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy -> o0.l:
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy AT_LEAST -> a
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy AT_MOST -> b
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy FIT_CENTER -> c
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy CENTER_INSIDE -> d
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy CENTER_OUTSIDE -> e
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy NONE -> f
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy DEFAULT -> g
    com.bumptech.glide.load.Option OPTION -> h
    boolean IS_BITMAP_FACTORY_SCALING_SUPPORTED -> i
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    float getScaleFactor(int,int,int,int) -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast -> o0.l$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    1:1:float getScaleFactor(int,int,int,int):0:0 -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost -> o0.l$b:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    1:1:float getScaleFactor(int,int,int,int):0:0 -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside -> o0.l$c:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    1:1:float getScaleFactor(int,int,int,int):0:0 -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside -> o0.l$d:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    1:1:float getScaleFactor(int,int,int,int):0:0 -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter -> o0.l$e:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    1:1:float getScaleFactor(int,int,int,int):0:0 -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None -> o0.l$f:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Lo0/l$g;"}
    1:1:float getScaleFactor(int,int,int,int):0:0 -> b
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding -> o0.l$g:
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding MEMORY -> e
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding QUALITY -> f
    com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo0/l$g;"}
    1:1:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/l$g;"}
com.bumptech.glide.load.resource.bitmap.Downsampler -> o0.r:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> a
    android.util.DisplayMetrics displayMetrics -> b
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> c
    java.util.List parsers -> d
    com.bumptech.glide.load.resource.bitmap.HardwareConfigState hardwareConfigState -> e
    com.bumptech.glide.load.Option DECODE_FORMAT -> f
    com.bumptech.glide.load.Option PREFERRED_COLOR_SPACE -> g
    com.bumptech.glide.load.Option DOWNSAMPLE_STRATEGY -> h
    com.bumptech.glide.load.Option FIX_BITMAP_SIZE_TO_REQUESTED_DIMENSIONS -> i
    com.bumptech.glide.load.Option ALLOW_HARDWARE_CONFIG -> j
    java.util.Set NO_DOWNSAMPLE_PRE_N_MIME_TYPES -> k
    com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks EMPTY_CALLBACKS -> l
    java.util.Set TYPES_THAT_USE_POOL_PRE_KITKAT -> m
    java.util.Queue OPTIONS_QUEUE -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List,android.util.DisplayMetrics,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Landroid/util/DisplayMetrics;Li0/d;Li0/b;)V"}
    1:1:int adjustTargetDensityForError(double):0:0 -> a
    1:1:void calculateConfig(com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/w;Lf0/b;ZZLandroid/graphics/BitmapFactory$Options;II)V"}
    1:1:void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;Lo0/w;Lo0/r$b;Li0/d;Lo0/l;IIIIILandroid/graphics/BitmapFactory$Options;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/ParcelFileDescriptor;IILf0/h;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;IILf0/h;Lo0/r$b;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;IILf0/h;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.resource.bitmap.ImageReader,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/w;IILf0/h;Lo0/r$b;)Lh0/v;"}
    1:1:android.graphics.Bitmap decodeFromWrappedStreams(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,com.bumptech.glide.load.PreferredColorSpace,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/w;Landroid/graphics/BitmapFactory$Options;Lo0/l;Lf0/b;Lf0/i;ZIIZLo0/r$b;)Landroid/graphics/Bitmap;"}
    1:1:android.graphics.Bitmap decodeStream(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/w;Landroid/graphics/BitmapFactory$Options;Lo0/r$b;Li0/d;)Landroid/graphics/Bitmap;"}
    1:1:java.lang.String getBitmapString(android.graphics.Bitmap):0:0 -> j
    1:1:android.graphics.BitmapFactory$Options getDefaultOptions():0:0 -> k
    1:1:int getDensityMultiplier(double):0:0 -> l
    1:1:int[] getDimensions(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/w;Landroid/graphics/BitmapFactory$Options;Lo0/r$b;Li0/d;)[I"}
    1:1:java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options):0:0 -> n
    1:1:boolean handles(android.os.ParcelFileDescriptor):0:0 -> o
    1:1:boolean handles(java.io.InputStream):0:0 -> p
    1:1:boolean handles(java.nio.ByteBuffer):0:0 -> q
    1:1:boolean isRotationRequired(int):0:0 -> r
    1:1:boolean isScaling(android.graphics.BitmapFactory$Options):0:0 -> s
    1:1:void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long):0:0 -> t
    1:1:java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options):0:0 -> u
    1:1:void releaseOptions(android.graphics.BitmapFactory$Options):0:0 -> v
    1:1:void resetOptions(android.graphics.BitmapFactory$Options):0:0 -> w
    1:1:int round(double):0:0 -> x
    1:1:void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/BitmapFactory$Options;Li0/d;II)V"}
    1:1:boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType):0:0 -> z
com.bumptech.glide.load.resource.bitmap.Downsampler$$ExternalSyntheticApiModelOutline0 -> o0.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace com.bumptech.glide.load.resource.bitmap.Downsampler$$InternalSyntheticApiModelOutline$4$c2a1376b89b0de03014225aac8be7d2060a25261638e58673a97dfdcdb116898$0.m(android.graphics.BitmapFactory$Options):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.Downsampler$$ExternalSyntheticApiModelOutline1 -> o0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.bitmap.Downsampler$$InternalSyntheticApiModelOutline$4$c2a1376b89b0de03014225aac8be7d2060a25261638e58673a97dfdcdb116898$6.m(android.graphics.BitmapFactory$Options,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.Downsampler$$ExternalSyntheticApiModelOutline2 -> o0.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.bitmap.Downsampler$$InternalSyntheticApiModelOutline$4$de6104e783a540bdc6f4252e80dc3647e961122b9abdb878e5993c8ed90bd353$1.m(android.graphics.BitmapFactory$Options,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.Downsampler$$ExternalSyntheticApiModelOutline3 -> o0.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.bitmap.Downsampler$$InternalSyntheticApiModelOutline$4$de6104e783a540bdc6f4252e80dc3647e961122b9abdb878e5993c8ed90bd353$2.m(android.graphics.BitmapFactory$Options,android.graphics.Bitmap$Config):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.Downsampler$$ExternalSyntheticApiModelOutline4 -> o0.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap$Config com.bumptech.glide.load.resource.bitmap.Downsampler$$InternalSyntheticApiModelOutline$5$1c15704abba639ccea89ec61f29add1f69e191e3d8352ef07a09bebd4eb0cbde$1.m(android.graphics.BitmapFactory$Options):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.Downsampler$1 -> o0.r$a:
    void <init>() -> <init>
    1:1:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Landroid/graphics/Bitmap;)V"}
    1:1:void onObtainBounds():0:0 -> b
com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks -> o0.r$b:
    void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Landroid/graphics/Bitmap;)V"}
    void onObtainBounds() -> b
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter -> o0.s:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool NO_RECYCLE_BITMAP_POOL -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:com.bumptech.glide.load.engine.Resource convert(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Landroid/graphics/drawable/Drawable;II)Lh0/v;"}
    1:1:android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Landroid/graphics/drawable/Drawable;II)Landroid/graphics/Bitmap;"}
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1 -> o0.s$a:
    void <init>() -> <init>
    1:1:void put(android.graphics.Bitmap):0:0 -> d
com.bumptech.glide.load.resource.bitmap.DrawableTransformation -> o0.t:
    com.bumptech.glide.load.Transformation wrapped -> b
    boolean isRequired -> c
    1:1:void <init>(com.bumptech.glide.load.Transformation,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/l;Z)V"}
    1:1:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh0/v;II)Lh0/v;"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:com.bumptech.glide.load.Transformation asBitmapDrawable():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/l;"}
    1:1:com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh0/v;)Lh0/v;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser -> o0.u:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer):0:0 -> a
    1:1:int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Li0/b;)I"}
    1:1:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;)I"}
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream):0:0 -> d
com.bumptech.glide.load.resource.bitmap.HardwareConfigState -> o0.v:
    boolean isHardwareConfigAllowedByDeviceModel -> a
    int sdkBasedMaxFdCount -> b
    int minHardwareDimension -> c
    int decodesSinceLastFdCheck -> d
    boolean isFdSizeBelowHardwareLimit -> e
    java.util.concurrent.atomic.AtomicBoolean isHardwareConfigAllowedByAppState -> f
    boolean BLOCK_HARDWARE_BITMAPS_WHEN_GL_CONTEXT_MIGHT_NOT_BE_INITIALIZED -> g
    boolean HARDWARE_BITMAPS_SUPPORTED -> h
    java.io.File FD_SIZE_LIST -> i
    com.bumptech.glide.load.resource.bitmap.HardwareConfigState instance -> j
    int manualOverrideMaxFdCount -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:boolean areHardwareBitmapsBlockedByAppState():0:0 -> a
    1:1:com.bumptech.glide.load.resource.bitmap.HardwareConfigState getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/v;"}
    1:1:int getMaxFdCount():0:0 -> c
    1:1:boolean isFdSizeBelowHardwareLimit():0:0 -> d
    1:1:boolean isHardwareConfigAllowed(int,int,boolean,boolean):0:0 -> e
    1:1:boolean isHardwareConfigAllowedByDeviceModel():0:0 -> f
    1:1:boolean isHardwareConfigDisallowedByB112551574():0:0 -> g
    1:1:boolean isHardwareConfigDisallowedByB147430447():0:0 -> h
    1:1:boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,boolean,boolean):0:0 -> i
com.bumptech.glide.load.resource.bitmap.ImageReader -> o0.w:
    android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options) -> a
    com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType() -> b
    void stopGrowingBuffers() -> c
    int getImageOrientation() -> d
com.bumptech.glide.load.resource.bitmap.ImageReader$ByteBufferReader -> o0.w$a:
    java.nio.ByteBuffer buffer -> a
    java.util.List parsers -> b
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> c
    1:1:void <init>(java.nio.ByteBuffer,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Ljava/util/List;Li0/b;)V"}
    1:1:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options):0:0 -> a
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType():0:0 -> b
    1:1:void stopGrowingBuffers():0:0 -> c
    1:1:int getImageOrientation():0:0 -> d
    1:1:java.io.InputStream stream():0:0 -> e
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader -> o0.w$b:
    com.bumptech.glide.load.data.InputStreamRewinder dataRewinder -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> b
    java.util.List parsers -> c
    1:1:void <init>(java.io.InputStream,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Ljava/util/List;Li0/b;)V"}
    1:1:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options):0:0 -> a
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType():0:0 -> b
    1:1:void stopGrowingBuffers():0:0 -> c
    1:1:int getImageOrientation():0:0 -> d
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader -> o0.w$c:
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> a
    java.util.List parsers -> b
    com.bumptech.glide.load.data.ParcelFileDescriptorRewinder dataRewinder -> c
    1:1:void <init>(android.os.ParcelFileDescriptor,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/ParcelFileDescriptor;Ljava/util/List;Li0/b;)V"}
    1:1:android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options):0:0 -> a
    1:1:com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType():0:0 -> b
    1:1:void stopGrowingBuffers():0:0 -> c
    1:1:int getImageOrientation():0:0 -> d
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder -> o0.x:
    com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder wrapped -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource -> o0.y:
    android.content.res.Resources resources -> e
    com.bumptech.glide.load.engine.Resource bitmapResource -> f
    1:1:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.Resource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Lh0/v;)V"}
    1:1:void initialize():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:android.graphics.drawable.BitmapDrawable get():0:0 -> e
    1:1:com.bumptech.glide.load.engine.Resource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.Resource):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources;Lh0/v;)Lh0/v;"}
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder -> o0.z:
    com.bumptech.glide.load.resource.bitmap.Downsampler downsampler -> a
    1:1:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/ParcelFileDescriptor;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(android.os.ParcelFileDescriptor,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/ParcelFileDescriptor;Lf0/h;)Z"}
    1:1:boolean isSafeToTryDecoding(android.os.ParcelFileDescriptor):0:0 -> e
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream -> o0.a0:
    byte[] buf -> e
    int count -> f
    int marklimit -> g
    int markpos -> h
    int pos -> i
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> j
    1:1:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;)V"}
    2:2:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Li0/b;I)V"}
    1:1:int fillbuf(java.io.InputStream,byte[]):0:0 -> a
    1:1:int available():0:0 -> available
    1:1:void fixMarkLimit():0:0 -> b
    1:1:void release():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:java.io.IOException streamClosed():0:0 -> d
    1:1:void mark(int):0:0 -> mark
    1:1:boolean markSupported():0:0 -> markSupported
    1:1:int read():0:0 -> read
    2:2:int read(byte[],int,int):0:0 -> read
    1:1:void reset():0:0 -> reset
    1:1:long skip(long):0:0 -> skip
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException -> o0.a0$a:
    1:1:void <init>(java.lang.String):0:0 -> <init>
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder -> o0.b0:
    com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder drawableDecoder -> a
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> b
    1:1:void <init>(com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/l;Li0/d;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(android.net.Uri,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder -> o0.c0:
    com.bumptech.glide.load.resource.bitmap.Downsampler downsampler -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> b
    1:1:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;Li0/b;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks -> o0.c0$a:
    com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream bufferedStream -> a
    com.bumptech.glide.util.ExceptionPassthroughInputStream exceptionStream -> b
    1:1:void <init>(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,com.bumptech.glide.util.ExceptionPassthroughInputStream):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/a0;Lb1/d;)V"}
    1:1:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Landroid/graphics/Bitmap;)V"}
    1:1:void onObtainBounds():0:0 -> b
com.bumptech.glide.load.resource.bitmap.TransformationUtils -> o0.d0:
    android.graphics.Paint DEFAULT_PAINT -> a
    android.graphics.Paint CIRCLE_CROP_SHAPE_PAINT -> b
    android.graphics.Paint CIRCLE_CROP_BITMAP_PAINT -> c
    java.util.Set MODELS_REQUIRING_BITMAP_LOCK -> d
    java.util.concurrent.locks.Lock BITMAP_DRAWABLE_LOCK -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void applyMatrix(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix):0:0 -> a
    1:1:void clear(android.graphics.Canvas):0:0 -> b
    1:1:java.util.concurrent.locks.Lock getBitmapDrawableLock():0:0 -> c
    1:1:int getExifOrientationDegrees(int):0:0 -> d
    1:1:android.graphics.Bitmap$Config getNonNullConfig(android.graphics.Bitmap):0:0 -> e
    1:1:void initializeMatrixForRotation(int,android.graphics.Matrix):0:0 -> f
    1:1:boolean isExifOrientationRequired(int):0:0 -> g
    1:1:android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;"}
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock -> o0.d0$a:
    void <init>() -> <init>
    1:1:void lock():0:0 -> lock
    1:1:void lockInterruptibly():0:0 -> lockInterruptibly
    1:1:java.util.concurrent.locks.Condition newCondition():0:0 -> newCondition
    1:1:boolean tryLock():0:0 -> tryLock
    2:2:boolean tryLock(long,java.util.concurrent.TimeUnit):0:0 -> tryLock
    1:1:void unlock():0:0 -> unlock
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder -> o0.e0:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(android.graphics.Bitmap,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Lf0/h;)Z"}
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource -> o0.e0$a:
    android.graphics.Bitmap bitmap -> e
    1:1:void <init>(android.graphics.Bitmap):0:0 -> <init>
    1:1:android.graphics.Bitmap get():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.bitmap.VideoDecoder -> o0.g0:
    com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaInitializer initializer -> a
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> b
    com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory factory -> c
    com.bumptech.glide.load.Option TARGET_FRAME -> d
    com.bumptech.glide.load.Option FRAME_OPTION -> e
    com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory DEFAULT_FACTORY -> f
    java.util.List PIXEL_T_BUILD_ID_PREFIXES_REQUIRING_HDR_180_ROTATION_FIX -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaInitializer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Lo0/g0$e;)V"}
    2:2:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Lo0/g0$e;Lo0/g0$f;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;)Lf0/j;"}
    1:1:com.bumptech.glide.load.ResourceDecoder byteBuffer(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;)Lf0/j;"}
    1:1:android.graphics.Bitmap correctHdr180DegVideoFrameOrientation(android.media.MediaMetadataRetriever,android.graphics.Bitmap):0:0 -> e
    1:1:android.graphics.Bitmap decodeFrame(java.lang.Object,android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Landroid/media/MediaMetadataRetriever;JIIILo0/l;)Landroid/graphics/Bitmap;"}
    1:1:android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int):0:0 -> g
    1:1:android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaMetadataRetriever;JIIILo0/l;)Landroid/graphics/Bitmap;"}
    1:1:boolean isHDR(android.media.MediaMetadataRetriever):0:0 -> i
    1:1:boolean isHdr180RotationFixRequired():0:0 -> j
    1:1:boolean isTBuildRequiringRotationFix():0:0 -> k
    1:1:boolean isUnsupportedFormat(java.lang.Object,android.media.MediaMetadataRetriever):0:0 -> l
    1:1:com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;)Lf0/j;"}
com.bumptech.glide.load.resource.bitmap.VideoDecoder$$ExternalSyntheticApiModelOutline0 -> o0.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap com.bumptech.glide.load.resource.bitmap.VideoDecoder$$InternalSyntheticApiModelOutline$5$12c47324c121d2c1bbe3d56f4d2e057087043dcebc57b50cd496f5d325cc1f31$0.m(android.media.MediaMetadataRetriever,long,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1 -> o0.g0$a:
    java.nio.ByteBuffer buffer -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void update(byte[],java.lang.Object,java.security.MessageDigest):0:0 -> a
    1:1:void update(byte[],java.lang.Long,java.security.MessageDigest):0:0 -> b
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2 -> o0.g0$b:
    java.nio.ByteBuffer buffer -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void update(byte[],java.lang.Object,java.security.MessageDigest):0:0 -> a
    1:1:void update(byte[],java.lang.Integer,java.security.MessageDigest):0:0 -> b
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer -> o0.g0$c:
    void <init>() -> <init>
    1:1:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/g0$a;)V"}
    1:1:void initializeRetriever(android.media.MediaMetadataRetriever,java.lang.Object):0:0 -> a
    1:1:void initializeExtractor(android.media.MediaExtractor,java.lang.Object):0:0 -> b
    1:1:void initializeExtractor(android.media.MediaExtractor,android.content.res.AssetFileDescriptor):0:0 -> c
    1:1:void initializeRetriever(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor):0:0 -> d
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer -> o0.g0$d:
    void <init>() -> <init>
    1:1:void initializeRetriever(android.media.MediaMetadataRetriever,java.lang.Object):0:0 -> a
    1:1:void initializeExtractor(android.media.MediaExtractor,java.lang.Object):0:0 -> b
    1:1:android.media.MediaDataSource getMediaDataSource(java.nio.ByteBuffer):0:0 -> c
    1:1:void initializeExtractor(android.media.MediaExtractor,java.nio.ByteBuffer):0:0 -> d
    1:1:void initializeRetriever(android.media.MediaMetadataRetriever,java.nio.ByteBuffer):0:0 -> e
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$$ExternalSyntheticApiModelOutline0 -> o0.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$$InternalSyntheticApiModelOutline$5$33739f0728fe18c9071f063a5fcef182300e12b65312dbdedc27b5cc4b77a4dc$0.m(android.media.MediaExtractor,android.media.MediaDataSource):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$$ExternalSyntheticApiModelOutline1 -> o0.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$$InternalSyntheticApiModelOutline$5$c4cd91eacca03aa3f17615270aa4b7ec4464bb7ff67a8f26bc8e76bca39727d2$0.m(android.media.MediaMetadataRetriever,android.media.MediaDataSource):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1 -> o0.g0$d$a:
    java.nio.ByteBuffer val$data -> e
    com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer this$0 -> f
    1:1:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer,java.nio.ByteBuffer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/g0$d;Ljava/nio/ByteBuffer;)V"}
    1:1:void close():0:0 -> close
    1:1:long getSize():0:0 -> getSize
    1:1:int readAt(long,byte[],int,int):0:0 -> readAt
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaInitializer -> o0.g0$e:
    void initializeRetriever(android.media.MediaMetadataRetriever,java.lang.Object) -> a
    void initializeExtractor(android.media.MediaExtractor,java.lang.Object) -> b
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory -> o0.g0$f:
    void <init>() -> <init>
    1:1:android.media.MediaMetadataRetriever build():0:0 -> a
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer -> o0.g0$g:
    void <init>() -> <init>
    1:1:void initializeRetriever(android.media.MediaMetadataRetriever,java.lang.Object):0:0 -> a
    1:1:void initializeExtractor(android.media.MediaExtractor,java.lang.Object):0:0 -> b
    1:1:void initializeExtractor(android.media.MediaExtractor,android.os.ParcelFileDescriptor):0:0 -> c
    1:1:void initializeRetriever(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor):0:0 -> d
com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException -> o0.g0$h:
    1:1:void <init>():0:0 -> <init>
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder -> p0.a:
    java.nio.ByteBuffer buffer -> a
    1:1:void <init>(java.nio.ByteBuffer):0:0 -> <init>
    1:1:java.lang.Object rewindAndGet():0:0 -> a
    1:1:void cleanup():0:0 -> b
    1:1:java.nio.ByteBuffer rewindAndGet():0:0 -> c
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory -> p0.a$a:
    void <init>() -> <init>
    1:1:java.lang.Class getDataClass():0:0 -> a
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/e;"}
    1:1:com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/data/e;"}
com.bumptech.glide.load.resource.bytes.BytesResource -> p0.b:
    byte[] bytes -> e
    1:1:void <init>(byte[]):0:0 -> <init>
    1:1:byte[] get():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder -> q0.h:
    java.util.List imageHeaderParsers -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> b
    1:1:void <init>(java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Li0/b;)V"}
    1:1:com.bumptech.glide.load.ResourceDecoder byteBufferDecoder(java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Li0/b;)Lf0/j;"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder$Source;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.io.InputStream):0:0 -> c
    1:1:boolean handles(java.nio.ByteBuffer):0:0 -> d
    1:1:boolean isHandled(com.bumptech.glide.load.ImageHeaderParser$ImageType):0:0 -> e
    1:1:com.bumptech.glide.load.ResourceDecoder streamDecoder(java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Li0/b;)Lf0/j;"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$$ExternalSyntheticApiModelOutline0 -> q0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.Drawable com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$$InternalSyntheticApiModelOutline$5$f23ea48b2335581d31859c3b8f8772d7af03e119b12fed72006a993aad20f507$0.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$$ExternalSyntheticApiModelOutline1 -> q0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$$InternalSyntheticApiModelOutline$5$f23ea48b2335581d31859c3b8f8772d7af03e119b12fed72006a993aad20f507$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$$ExternalSyntheticApiModelOutline2 -> q0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.drawable.AnimatedImageDrawable com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$$InternalSyntheticApiModelOutline$5$f23ea48b2335581d31859c3b8f8772d7af03e119b12fed72006a993aad20f507$2.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource -> q0.h$a:
    android.graphics.drawable.AnimatedImageDrawable imageDrawable -> e
    1:1:void <init>(android.graphics.drawable.AnimatedImageDrawable):0:0 -> <init>
    1:1:android.graphics.drawable.AnimatedImageDrawable get():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$ExternalSyntheticApiModelOutline0 -> q0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$InternalSyntheticApiModelOutline$6$7f9a568d826a09fc2a846347613cd1c8d707603eabfad4807dafc9bd902323e3$0.m(android.graphics.drawable.AnimatedImageDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$ExternalSyntheticApiModelOutline1 -> q0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$InternalSyntheticApiModelOutline$6$7f9a568d826a09fc2a846347613cd1c8d707603eabfad4807dafc9bd902323e3$1.m(android.graphics.drawable.AnimatedImageDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$ExternalSyntheticApiModelOutline2 -> q0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$InternalSyntheticApiModelOutline$6$cd40be4cd672f84e4b2f2374925779a41a07ea357565950ffeb266444cb6bfbc$0.m(android.graphics.drawable.AnimatedImageDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$ExternalSyntheticApiModelOutline3 -> q0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$AnimatedImageDrawableResource$$InternalSyntheticApiModelOutline$6$cd40be4cd672f84e4b2f2374925779a41a07ea357565950ffeb266444cb6bfbc$1.m(android.graphics.drawable.AnimatedImageDrawable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$ByteBufferAnimatedImageDecoder -> q0.h$b:
    com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder delegate -> a
    1:1:void <init>(com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/h;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lf0/h;)Z"}
com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder$StreamAnimatedImageDecoder -> q0.h$c:
    com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder delegate -> a
    1:1:void <init>(com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/h;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Lf0/h;)Z"}
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat -> q0.i:
    boolean shouldCallAppCompatResources -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme):0:0 -> a
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int):0:0 -> b
    1:1:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int,android.content.res.Resources$Theme):0:0 -> c
    1:1:android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme):0:0 -> d
    1:1:android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme):0:0 -> e
com.bumptech.glide.load.resource.drawable.DrawableResource -> q0.j:
    android.graphics.drawable.Drawable drawable -> e
    1:1:void <init>(android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:void initialize():0:0 -> a
    1:1:android.graphics.drawable.Drawable get():0:0 -> e
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource -> q0.k:
    1:1:void <init>(android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
    1:1:com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;)Lh0/v;"}
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder -> q0.l:
    android.content.Context context -> a
    com.bumptech.glide.load.Option THEME -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IILf0/h;)Lh0/v;"}
    1:1:android.content.Context findContextForPackage(android.net.Uri,java.lang.String):0:0 -> d
    1:1:int findResourceIdFromResourceIdUri(android.net.Uri):0:0 -> e
    1:1:int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri):0:0 -> f
    1:1:int findResourceIdFromUri(android.content.Context,android.net.Uri):0:0 -> g
    1:1:boolean handles(android.net.Uri,com.bumptech.glide.load.Options):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lf0/h;)Z"}
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder -> q0.m:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(android.graphics.drawable.Drawable,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/drawable/Drawable;Lf0/h;)Z"}
com.bumptech.glide.load.resource.file.FileDecoder -> r0.a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.io.File,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;Lf0/h;)Z"}
com.bumptech.glide.load.resource.file.FileResource -> r0.b:
    1:1:void <init>(java.io.File):0:0 -> <init>
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder -> s0.a:
    android.content.Context context -> a
    java.util.List parsers -> b
    com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool parserPool -> c
    com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory gifDecoderFactory -> d
    com.bumptech.glide.load.resource.gif.GifBitmapProvider provider -> e
    com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory GIF_DECODER_FACTORY -> f
    com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool PARSER_POOL -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/List;Li0/d;Li0/b;)V"}
    2:2:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/List;Li0/d;Li0/b;Ls0/a$b;Ls0/a$a;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;IILe0/d;Lf0/h;)Ls0/e;"}
    1:1:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;IILf0/h;)Ls0/e;"}
    1:1:int getSampleSize(com.bumptech.glide.gifdecoder.GifHeader,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/c;II)I"}
    1:1:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lf0/h;)Z"}
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory -> s0.a$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a$a;Le0/c;Ljava/nio/ByteBuffer;I)Le0/a;"}
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool -> s0.a$b:
    java.util.Queue pool -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.gifdecoder.GifHeaderParser obtain(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Le0/d;"}
    1:1:void release(com.bumptech.glide.gifdecoder.GifHeaderParser):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/d;)V"}
com.bumptech.glide.load.resource.gif.GifBitmapProvider -> s0.b:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> a
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool -> b
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Li0/b;)V"}
    1:1:int[] obtainIntArray(int):0:0 -> a
    1:1:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config):0:0 -> b
    1:1:void release(byte[]):0:0 -> c
    1:1:void release(android.graphics.Bitmap):0:0 -> d
    1:1:byte[] obtainByteArray(int):0:0 -> e
    1:1:void release(int[]):0:0 -> f
com.bumptech.glide.load.resource.gif.GifDrawable -> s0.c:
    com.bumptech.glide.load.resource.gif.GifDrawable$GifState state -> a
    boolean isRunning -> b
    boolean isStarted -> c
    boolean isRecycled -> d
    boolean isVisible -> e
    int loopCount -> f
    int maxLoopCount -> g
    boolean applyGravity -> h
    android.graphics.Paint paint -> i
    android.graphics.Rect destRect -> j
    java.util.List animationCallbacks -> k
    1:1:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le0/a;Lf0/l;IILandroid/graphics/Bitmap;)V"}
    2:2:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/c$a;)V"}
    1:1:void onFrameReady():0:0 -> a
    1:1:android.graphics.drawable.Drawable$Callback findCallback():0:0 -> b
    1:1:java.nio.ByteBuffer getBuffer():0:0 -> c
    1:1:android.graphics.Rect getDestRect():0:0 -> d
    1:1:void draw(android.graphics.Canvas):0:0 -> draw
    1:1:android.graphics.Bitmap getFirstFrame():0:0 -> e
    1:1:int getFrameCount():0:0 -> f
    1:1:int getFrameIndex():0:0 -> g
    1:1:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:1:int getIntrinsicHeight():0:0 -> getIntrinsicHeight
    1:1:int getIntrinsicWidth():0:0 -> getIntrinsicWidth
    1:1:int getOpacity():0:0 -> getOpacity
    1:1:android.graphics.Paint getPaint():0:0 -> h
    1:1:int getSize():0:0 -> i
    1:1:boolean isRunning():0:0 -> isRunning
    1:1:void notifyAnimationEndToListeners():0:0 -> j
    1:1:void recycle():0:0 -> k
    1:1:void resetLoopCount():0:0 -> l
    1:1:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/l;Landroid/graphics/Bitmap;)V"}
    1:1:void startRunning():0:0 -> n
    1:1:void stopRunning():0:0 -> o
    1:1:void onBoundsChange(android.graphics.Rect):0:0 -> onBoundsChange
    1:1:void setAlpha(int):0:0 -> setAlpha
    1:1:void setColorFilter(android.graphics.ColorFilter):0:0 -> setColorFilter
    1:1:boolean setVisible(boolean,boolean):0:0 -> setVisible
    1:1:void start():0:0 -> start
    1:1:void stop():0:0 -> stop
com.bumptech.glide.load.resource.gif.GifDrawable$GifState -> s0.c$a:
    com.bumptech.glide.load.resource.gif.GifFrameLoader frameLoader -> a
    1:1:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/g;)V"}
    1:1:int getChangingConfigurations():0:0 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():0:0 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):0:0 -> newDrawable
com.bumptech.glide.load.resource.gif.GifDrawableEncoder -> s0.d:
    void <init>() -> <init>
    1:1:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/io/File;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/h;)Lf0/c;"}
    1:1:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Ljava/io/File;Lf0/h;)Z"}
com.bumptech.glide.load.resource.gif.GifDrawableResource -> s0.e:
    1:1:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/c;)V"}
    1:1:void initialize():0:0 -> a
    1:1:int getSize():0:0 -> b
    1:1:java.lang.Class getResourceClass():0:0 -> c
    1:1:void recycle():0:0 -> d
com.bumptech.glide.load.resource.gif.GifDrawableTransformation -> s0.f:
    com.bumptech.glide.load.Transformation wrapped -> b
    1:1:void <init>(com.bumptech.glide.load.Transformation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/l;)V"}
    1:1:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh0/v;II)Lh0/v;"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.bumptech.glide.load.resource.gif.GifFrameLoader -> s0.g:
    com.bumptech.glide.gifdecoder.GifDecoder gifDecoder -> a
    android.os.Handler handler -> b
    java.util.List callbacks -> c
    com.bumptech.glide.RequestManager requestManager -> d
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> e
    boolean isRunning -> f
    boolean isLoadPending -> g
    boolean startFromFirstFrame -> h
    com.bumptech.glide.RequestBuilder requestBuilder -> i
    com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget current -> j
    boolean isCleared -> k
    com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget next -> l
    android.graphics.Bitmap firstFrame -> m
    com.bumptech.glide.load.Transformation transformation -> n
    com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget pendingTarget -> o
    int firstFrameSize -> p
    int width -> q
    int height -> r
    1:1:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Transformation,android.graphics.Bitmap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Le0/a;IILf0/l;Landroid/graphics/Bitmap;)V"}
    2:2:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Lcom/bumptech/glide/k;Le0/a;Landroid/os/Handler;Lcom/bumptech/glide/j;Lf0/l;Landroid/graphics/Bitmap;)V"}
    1:1:void clear():0:0 -> a
    1:1:java.nio.ByteBuffer getBuffer():0:0 -> b
    1:1:android.graphics.Bitmap getCurrentFrame():0:0 -> c
    1:1:int getCurrentIndex():0:0 -> d
    1:1:android.graphics.Bitmap getFirstFrame():0:0 -> e
    1:1:int getFrameCount():0:0 -> f
    1:1:com.bumptech.glide.load.Key getFrameSignature():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/f;"}
    1:1:int getHeight():0:0 -> h
    1:1:com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/k;II)Lcom/bumptech/glide/j;"}
    1:1:int getSize():0:0 -> j
    1:1:int getWidth():0:0 -> k
    1:1:void loadNextFrame():0:0 -> l
    1:1:void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/g$a;)V"}
    1:1:void recycleFirstFrame():0:0 -> n
    1:1:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/l;Landroid/graphics/Bitmap;)V"}
    1:1:void start():0:0 -> p
    1:1:void stop():0:0 -> q
    1:1:void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/g$b;)V"}
    1:1:void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/g$b;)V"}
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget -> s0.g$a:
    android.os.Handler handler -> d
    int index -> e
    long targetTime -> f
    android.graphics.Bitmap resource -> g
    1:1:void <init>(android.os.Handler,int,long):0:0 -> <init>
    1:1:android.graphics.Bitmap getResource():0:0 -> c
    1:1:void onLoadCleared(android.graphics.drawable.Drawable):0:0 -> i
    1:1:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;Lz0/b;)V"}
    1:1:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/b;)V"}
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback -> s0.g$b:
    void onFrameReady() -> a
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback -> s0.g$c:
    com.bumptech.glide.load.resource.gif.GifFrameLoader this$0 -> a
    1:1:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/g;)V"}
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder -> s0.h:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> a
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a;Lf0/h;)Z"}
com.bumptech.glide.load.resource.gif.GifOptions -> s0.i:
    com.bumptech.glide.load.Option DECODE_FORMAT -> a
    com.bumptech.glide.load.Option DISABLE_ANIMATION -> b
    1:1:void <clinit>():0:0 -> <clinit>
com.bumptech.glide.load.resource.gif.StreamGifDecoder -> s0.j:
    java.util.List parsers -> a
    com.bumptech.glide.load.ResourceDecoder byteBufferDecoder -> b
    com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool -> c
    1:1:void <init>(java.util.List,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lf0/j;Li0/b;)V"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.lang.Object,com.bumptech.glide.load.Options):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lf0/h;)Z"}
    1:1:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;IILf0/h;)Lh0/v;"}
    1:1:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Lf0/h;)Z"}
    1:1:byte[] inputStreamToBytes(java.io.InputStream):0:0 -> e
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder -> t0.a:
    android.graphics.Bitmap$CompressFormat compressFormat -> a
    int quality -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.graphics.Bitmap$CompressFormat,int):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/h;)Lh0/v;"}
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder -> t0.b:
    android.content.res.Resources resources -> a
    1:1:void <init>(android.content.res.Resources):0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/h;)Lh0/v;"}
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder -> t0.c:
    com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool -> a
    com.bumptech.glide.load.resource.transcode.ResourceTranscoder bitmapBytesTranscoder -> b
    com.bumptech.glide.load.resource.transcode.ResourceTranscoder gifDrawableBytesTranscoder -> c
    1:1:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/d;Lt0/e;Lt0/e;)V"}
    1:1:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/h;)Lh0/v;"}
    1:1:com.bumptech.glide.load.engine.Resource toGifDrawableResource(com.bumptech.glide.load.engine.Resource):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;)Lh0/v;"}
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder -> t0.d:
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/h;)Lh0/v;"}
com.bumptech.glide.load.resource.transcode.ResourceTranscoder -> t0.e:
    com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/h;)Lh0/v;"}
com.bumptech.glide.load.resource.transcode.TranscoderRegistry -> t0.f:
    java.util.List transcoders -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;)Lt0/e;"}
    1:1:java.util.List getTranscodeClasses(java.lang.Class,java.lang.Class):0:0 -> b
    1:1:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Lt0/e;)V"}
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry -> t0.f$a:
    java.lang.Class fromClass -> a
    java.lang.Class toClass -> b
    com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder -> c
    1:1:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Lt0/e;)V"}
    1:1:boolean handles(java.lang.Class,java.lang.Class):0:0 -> a
com.bumptech.glide.load.resource.transcode.UnitTranscoder -> t0.g:
    com.bumptech.glide.load.resource.transcode.UnitTranscoder UNIT_TRANSCODER -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/h;)Lh0/v;"}
    1:1:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt0/e;"}
com.bumptech.glide.manager.ActivityFragmentLifecycle -> u0.a:
    java.util.Set lifecycleListeners -> a
    boolean isStarted -> b
    boolean isDestroyed -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void addListener(com.bumptech.glide.manager.LifecycleListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/m;)V"}
    1:1:void removeListener(com.bumptech.glide.manager.LifecycleListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/m;)V"}
    1:1:void onDestroy():0:0 -> c
    1:1:void onStart():0:0 -> d
    1:1:void onStop():0:0 -> e
com.bumptech.glide.manager.ApplicationLifecycle -> u0.b:
    void <init>() -> <init>
    1:1:void addListener(com.bumptech.glide.manager.LifecycleListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/m;)V"}
    1:1:void removeListener(com.bumptech.glide.manager.LifecycleListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/m;)V"}
com.bumptech.glide.manager.ConnectivityMonitor -> u0.c:
com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener -> u0.c$a:
    void onConnectivityChanged(boolean) -> a
com.bumptech.glide.manager.ConnectivityMonitorFactory -> u0.d:
    com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu0/c$a;)Lu0/c;"}
com.bumptech.glide.manager.DefaultConnectivityMonitor -> u0.e:
    android.content.Context context -> a
    com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener listener -> b
    1:1:void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu0/c$a;)V"}
    1:1:void onStart():0:0 -> a
    1:1:void register():0:0 -> c
    1:1:void onStop():0:0 -> g
    1:1:void unregister():0:0 -> j
    1:1:void onDestroy():0:0 -> l
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory -> u0.f:
    void <init>() -> <init>
    1:1:com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu0/c$a;)Lu0/c;"}
com.bumptech.glide.manager.DoNothingFirstFrameWaiter -> u0.g:
    void <init>() -> <init>
    1:1:void registerSelf(android.app.Activity):0:0 -> a
com.bumptech.glide.manager.EmptyRequestManagerTreeNode -> u0.h:
    void <init>() -> <init>
    1:1:java.util.Set getDescendants():0:0 -> a
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter -> u0.i:
    void <init>() -> <init>
    1:1:void registerSelf(android.app.Activity):0:0 -> a
    1:1:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onLowMemory():0:0 -> onLowMemory
    1:1:void onTrimMemory(int):0:0 -> onTrimMemory
com.bumptech.glide.manager.FirstFrameWaiter -> u0.j:
    void <init>() -> <init>
    1:1:void registerSelf(android.app.Activity):0:0 -> a
com.bumptech.glide.manager.FrameWaiter -> u0.k:
    void registerSelf(android.app.Activity) -> a
com.bumptech.glide.manager.Lifecycle -> u0.l:
    void addListener(com.bumptech.glide.manager.LifecycleListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/m;)V"}
    void removeListener(com.bumptech.glide.manager.LifecycleListener) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/m;)V"}
com.bumptech.glide.manager.LifecycleListener -> u0.m:
    void onStart() -> a
    void onStop() -> g
    void onDestroy() -> l
com.bumptech.glide.manager.LifecycleRequestManagerRetriever -> u0.n:
    java.util.Map lifecycleToRequestManager -> a
    com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory factory -> b
    1:1:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/q$b;)V"}
com.bumptech.glide.manager.NullConnectivityMonitor -> u0.o:
    void <init>() -> <init>
    1:1:void onStart():0:0 -> a
    1:1:void onStop():0:0 -> g
    1:1:void onDestroy():0:0 -> l
com.bumptech.glide.manager.RequestManagerFragment -> u0.p:
    com.bumptech.glide.manager.ActivityFragmentLifecycle lifecycle -> a
    com.bumptech.glide.manager.RequestManagerTreeNode requestManagerTreeNode -> b
    java.util.Set childRequestManagerFragments -> c
    com.bumptech.glide.RequestManager requestManager -> d
    com.bumptech.glide.manager.RequestManagerFragment rootRequestManagerFragment -> e
    android.app.Fragment parentFragmentHint -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/a;)V"}
    1:1:void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/p;)V"}
    1:1:java.util.Set getDescendantRequestManagerFragments():0:0 -> b
    1:1:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu0/a;"}
    1:1:android.app.Fragment getParentFragmentUsingHint():0:0 -> d
    1:1:com.bumptech.glide.RequestManager getRequestManager():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/k;"}
    1:1:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu0/r;"}
    1:1:boolean isDescendant(android.app.Fragment):0:0 -> g
    1:1:void registerFragmentWithRoot(android.app.Activity):0:0 -> h
    1:1:void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/p;)V"}
    1:1:void setParentFragmentHint(android.app.Fragment):0:0 -> j
    1:1:void setRequestManager(com.bumptech.glide.RequestManager):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/k;)V"}
    1:1:void unregisterFragmentWithRoot():0:0 -> l
    1:1:void onAttach(android.app.Activity):0:0 -> onAttach
    1:1:void onDestroy():0:0 -> onDestroy
    1:1:void onDetach():0:0 -> onDetach
    1:1:void onStart():0:0 -> onStart
    1:1:void onStop():0:0 -> onStop
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode -> u0.p$a:
    com.bumptech.glide.manager.RequestManagerFragment this$0 -> a
    1:1:void <init>(com.bumptech.glide.manager.RequestManagerFragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/p;)V"}
    1:1:java.util.Set getDescendants():0:0 -> a
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.manager.RequestManagerRetriever -> u0.q:
    com.bumptech.glide.RequestManager applicationManager -> a
    java.util.Map pendingRequestManagerFragments -> b
    java.util.Map pendingSupportRequestManagerFragments -> c
    android.os.Handler handler -> d
    com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory factory -> e
    androidx.collection.ArrayMap tempViewToSupportFragment -> f
    androidx.collection.ArrayMap tempViewToFragment -> g
    android.os.Bundle tempBundle -> h
    com.bumptech.glide.manager.FrameWaiter frameWaiter -> i
    com.bumptech.glide.manager.LifecycleRequestManagerRetriever lifecycleRequestManagerRetriever -> j
    com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory DEFAULT_FACTORY -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory,com.bumptech.glide.GlideExperiments):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/q$b;Lcom/bumptech/glide/e;)V"}
    1:1:void assertNotDestroyed(android.app.Activity):0:0 -> a
    1:1:com.bumptech.glide.manager.FrameWaiter buildFrameWaiter(com.bumptech.glide.GlideExperiments):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/e;)Lu0/k;"}
    1:1:android.app.Activity findActivity(android.content.Context):0:0 -> c
    1:1:com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/app/FragmentManager;Landroid/app/Fragment;Z)Lcom/bumptech/glide/k;"}
    1:1:com.bumptech.glide.RequestManager get(android.app.Activity):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lcom/bumptech/glide/k;"}
    1:1:com.bumptech.glide.RequestManager get(android.content.Context):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lcom/bumptech/glide/k;"}
    1:1:com.bumptech.glide.RequestManager getApplicationManager(android.content.Context):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lcom/bumptech/glide/k;"}
    1:1:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lu0/p;"}
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
    1:1:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/FragmentManager;Landroid/app/Fragment;)Lu0/p;"}
    1:1:boolean isActivityVisible(android.content.Context):0:0 -> j
    1:1:boolean verifyOurFragmentWasAddedOrCantBeAdded(android.app.FragmentManager,boolean):0:0 -> k
    1:1:boolean verifyOurSupportFragmentWasAddedOrCantBeAdded(androidx.fragment.app.FragmentManager,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c0;Z)Z"}
com.bumptech.glide.manager.RequestManagerRetriever$1 -> u0.q$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Lu0/l;Lu0/r;Landroid/content/Context;)Lcom/bumptech/glide/k;"}
com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory -> u0.q$b:
    com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/b;Lu0/l;Lu0/r;Landroid/content/Context;)Lcom/bumptech/glide/k;"}
com.bumptech.glide.manager.RequestManagerTreeNode -> u0.r:
    java.util.Set getDescendants() -> a
com.bumptech.glide.manager.RequestTracker -> u0.s:
    java.util.Set requests -> a
    java.util.Set pendingRequests -> b
    boolean isPaused -> c
    1:1:void <init>():0:0 -> <init>
    1:1:boolean clearAndRemove(com.bumptech.glide.request.Request):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void clearRequests():0:0 -> b
    1:1:void pauseAllRequests():0:0 -> c
    1:1:void pauseRequests():0:0 -> d
    1:1:void restartRequests():0:0 -> e
    1:1:void resumeRequests():0:0 -> f
    1:1:void runRequest(com.bumptech.glide.request.Request):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.manager.SingletonConnectivityReceiver -> u0.t:
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitor frameworkConnectivityMonitor -> a
    java.util.Set listeners -> b
    boolean isRegistered -> c
    com.bumptech.glide.manager.SingletonConnectivityReceiver instance -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.bumptech.glide.manager.SingletonConnectivityReceiver get(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lu0/t;"}
    1:1:void maybeRegisterReceiver():0:0 -> b
    1:1:void maybeUnregisterReceiver():0:0 -> c
    1:1:void register(com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/c$a;)V"}
    1:1:void unregister(com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/c$a;)V"}
com.bumptech.glide.manager.SingletonConnectivityReceiver$1 -> u0.t$a:
    android.content.Context val$context -> a
    com.bumptech.glide.manager.SingletonConnectivityReceiver this$0 -> b
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t;Landroid/content/Context;)V"}
    1:1:android.net.ConnectivityManager get():0:0 -> a
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.manager.SingletonConnectivityReceiver$2 -> u0.t$b:
    com.bumptech.glide.manager.SingletonConnectivityReceiver this$0 -> a
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t;)V"}
    1:1:void onConnectivityChanged(boolean):0:0 -> a
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitor -> u0.t$c:
    void unregister() -> a
    boolean register() -> b
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24 -> u0.t$d:
    boolean isConnected -> a
    com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener listener -> b
    com.bumptech.glide.util.GlideSuppliers$GlideSupplier connectivityManager -> c
    android.net.ConnectivityManager$NetworkCallback networkCallback -> d
    1:1:void <init>(com.bumptech.glide.util.GlideSuppliers$GlideSupplier,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/f$b;Lu0/c$a;)V"}
    1:1:void unregister():0:0 -> a
    1:1:boolean register():0:0 -> b
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$$ExternalSyntheticApiModelOutline0 -> u0.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Network com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$$InternalSyntheticApiModelOutline$3$68d207163aecad5cabcbb1ef7f4c4358a7acdaa03a5ae48e55451ceb3ec927ee$0.m(android.net.ConnectivityManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$$ExternalSyntheticApiModelOutline1 -> u0.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$$InternalSyntheticApiModelOutline$3$68d207163aecad5cabcbb1ef7f4c4358a7acdaa03a5ae48e55451ceb3ec927ee$1.m(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1 -> u0.t$d$a:
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24 this$0 -> a
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$d;)V"}
    1:1:void onConnectivityChange(boolean):0:0 -> a
    1:1:void postOnConnectivityChange(boolean):0:0 -> b
    1:1:void onAvailable(android.net.Network):0:0 -> onAvailable
    1:1:void onLost(android.net.Network):0:0 -> onLost
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1$1 -> u0.t$d$a$a:
    boolean val$newState -> e
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1 this$1 -> f
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPostApi24$1,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$d$a;Z)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24 -> u0.t$e:
    android.content.Context context -> a
    com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener listener -> b
    com.bumptech.glide.util.GlideSuppliers$GlideSupplier connectivityManager -> c
    boolean isConnected -> d
    boolean isRegistered -> e
    android.content.BroadcastReceiver connectivityReceiver -> f
    java.util.concurrent.Executor EXECUTOR -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,com.bumptech.glide.util.GlideSuppliers$GlideSupplier,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lb1/f$b;Lu0/c$a;)V"}
    1:1:void unregister():0:0 -> a
    1:1:boolean register():0:0 -> b
    1:1:boolean isConnected():0:0 -> c
    1:1:void notifyChangeOnUiThread(boolean):0:0 -> d
    1:1:void onConnectivityChange():0:0 -> e
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24$1 -> u0.t$e$a:
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24 this$0 -> a
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$e;)V"}
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24$2 -> u0.t$e$b:
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24 this$0 -> e
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$e;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24$3 -> u0.t$e$c:
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24 this$0 -> e
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$e;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24$4 -> u0.t$e$d:
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24 this$0 -> e
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$e;)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24$5 -> u0.t$e$e:
    boolean val$isConnected -> e
    com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24 this$0 -> f
    1:1:void <init>(com.bumptech.glide.manager.SingletonConnectivityReceiver$FrameworkConnectivityMonitorPreApi24,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/t$e;Z)V"}
    1:1:void run():0:0 -> run
com.bumptech.glide.manager.SupportRequestManagerFragment -> u0.w:
    com.bumptech.glide.manager.ActivityFragmentLifecycle lifecycle -> b0
    com.bumptech.glide.manager.RequestManagerTreeNode requestManagerTreeNode -> c0
    java.util.Set childRequestManagerFragments -> d0
    com.bumptech.glide.manager.SupportRequestManagerFragment rootRequestManagerFragment -> e0
    com.bumptech.glide.RequestManager requestManager -> f0
    androidx.fragment.app.Fragment parentFragmentHint -> g0
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/a;)V"}
    1:1:java.util.Set getDescendantRequestManagerFragments():0:0 -> O0
    1:1:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle():0:0 -> P0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu0/a;"}
    1:1:androidx.fragment.app.Fragment getParentFragmentUsingHint():0:0 -> Q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/p;"}
    1:1:com.bumptech.glide.RequestManager getRequestManager():0:0 -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/k;"}
    1:1:boolean isDescendant(androidx.fragment.app.Fragment):0:0 -> S0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/p;)Z"}
    1:1:void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment):0:0 -> T0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/w;)V"}
    1:1:void unregisterFragmentWithRoot():0:0 -> U0
    1:1:void onDetach():0:0 -> Y
    1:1:void onStart():0:0 -> g0
    1:1:void onStop():0:0 -> h0
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode -> u0.w$a:
    com.bumptech.glide.manager.SupportRequestManagerFragment this$0 -> a
    1:1:void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu0/w;)V"}
    1:1:java.util.Set getDescendants():0:0 -> a
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.manager.TargetTracker -> u0.x:
    java.util.Set targets -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void onStart():0:0 -> a
    1:1:void clear():0:0 -> c
    1:1:void onStop():0:0 -> g
    1:1:java.util.List getAll():0:0 -> j
    1:1:void onDestroy():0:0 -> l
    1:1:void track(com.bumptech.glide.request.target.Target):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)V"}
    1:1:void untrack(com.bumptech.glide.request.target.Target):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/d;)V"}
com.bumptech.glide.module.AppGlideModule -> v0.a:
    void <init>() -> <init>
    1:1:void applyOptions(android.content.Context,com.bumptech.glide.GlideBuilder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/c;)V"}
    1:1:boolean isManifestParsingEnabled():0:0 -> c
com.bumptech.glide.module.GlideModule -> v0.b:
com.bumptech.glide.module.LibraryGlideModule -> v0.c:
    void <init>() -> <init>
    1:1:void registerComponents(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/b;Lcom/bumptech/glide/h;)V"}
com.bumptech.glide.module.ManifestParser -> v0.d:
    android.content.Context context -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:android.content.pm.ApplicationInfo getOurApplicationInfo():0:0 -> a
    1:1:java.util.List parse():0:0 -> b
    1:1:com.bumptech.glide.module.GlideModule parseModule(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lv0/b;"}
    1:1:void throwInstantiateGlideModuleException(java.lang.Class,java.lang.Exception):0:0 -> d
com.bumptech.glide.provider.EncoderRegistry -> w0.a:
    java.util.List encoders -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void append(java.lang.Class,com.bumptech.glide.load.Encoder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/d;)V"}
    1:1:com.bumptech.glide.load.Encoder getEncoder(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lf0/d;"}
com.bumptech.glide.provider.EncoderRegistry$Entry -> w0.a$a:
    java.lang.Class dataClass -> a
    com.bumptech.glide.load.Encoder encoder -> b
    1:1:void <init>(java.lang.Class,com.bumptech.glide.load.Encoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/d;)V"}
    1:1:boolean handles(java.lang.Class):0:0 -> a
com.bumptech.glide.provider.ImageHeaderParserRegistry -> w0.b:
    java.util.List parsers -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void add(com.bumptech.glide.load.ImageHeaderParser):0:0 -> a
    1:1:java.util.List getParsers():0:0 -> b
com.bumptech.glide.provider.LoadPathCache -> w0.c:
    androidx.collection.ArrayMap cache -> a
    java.util.concurrent.atomic.AtomicReference keyRef -> b
    com.bumptech.glide.load.engine.LoadPath NO_PATHS_SIGNAL -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:com.bumptech.glide.load.engine.LoadPath get(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lh0/t;"}
    1:1:com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lb1/j;"}
    1:1:boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/t;)Z"}
    1:1:void put(java.lang.Class,java.lang.Class,java.lang.Class,com.bumptech.glide.load.engine.LoadPath):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lh0/t;)V"}
com.bumptech.glide.provider.ModelToResourceClassCache -> w0.d:
    java.util.concurrent.atomic.AtomicReference resourceClassKeyRef -> a
    androidx.collection.ArrayMap registeredResourceClassCache -> b
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.List get(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> a
    1:1:void put(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List):0:0 -> b
com.bumptech.glide.provider.ResourceDecoderRegistry -> w0.e:
    java.util.List bucketPriorityList -> a
    java.util.Map decoders -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void append(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lf0/j;Ljava/lang/Class;Ljava/lang/Class;)V"}
    1:1:java.util.List getDecoders(java.lang.Class,java.lang.Class):0:0 -> b
    1:1:java.util.List getOrAddEntryList(java.lang.String):0:0 -> c
    1:1:java.util.List getResourceClasses(java.lang.Class,java.lang.Class):0:0 -> d
    1:1:void setBucketPriorityList(java.util.List):0:0 -> e
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry -> w0.e$a:
    java.lang.Class dataClass -> a
    java.lang.Class resourceClass -> b
    com.bumptech.glide.load.ResourceDecoder decoder -> c
    1:1:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/Class;Lf0/j;)V"}
    1:1:boolean handles(java.lang.Class,java.lang.Class):0:0 -> a
com.bumptech.glide.provider.ResourceEncoderRegistry -> w0.f:
    java.util.List encoders -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/k;)V"}
    1:1:com.bumptech.glide.load.ResourceEncoder get(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lf0/k;"}
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry -> w0.f$a:
    java.lang.Class resourceClass -> a
    com.bumptech.glide.load.ResourceEncoder encoder -> b
    1:1:void <init>(java.lang.Class,com.bumptech.glide.load.ResourceEncoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/k;)V"}
    1:1:boolean handles(java.lang.Class):0:0 -> a
com.bumptech.glide.request.BaseRequestOptions -> x0.a:
    boolean useUnlimitedSourceGeneratorsPool -> A
    boolean onlyRetrieveFromCache -> B
    boolean isScaleOnlyOrNoTransform -> C
    boolean useAnimationPool -> D
    int fields -> e
    float sizeMultiplier -> f
    com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy -> g
    com.bumptech.glide.Priority priority -> h
    android.graphics.drawable.Drawable errorPlaceholder -> i
    int errorId -> j
    android.graphics.drawable.Drawable placeholderDrawable -> k
    int placeholderId -> l
    boolean isCacheable -> m
    int overrideHeight -> n
    int overrideWidth -> o
    com.bumptech.glide.load.Key signature -> p
    boolean isTransformationRequired -> q
    boolean isTransformationAllowed -> r
    android.graphics.drawable.Drawable fallbackDrawable -> s
    int fallbackId -> t
    com.bumptech.glide.load.Options options -> u
    java.util.Map transformations -> v
    java.lang.Class resourceClass -> w
    boolean isLocked -> x
    android.content.res.Resources$Theme theme -> y
    boolean isAutoCloneEnabled -> z
    1:1:void <init>():0:0 -> <init>
    1:1:boolean isMemoryCacheable():0:0 -> A
    1:1:boolean isPrioritySet():0:0 -> B
    1:1:boolean isScaleOnlyOrNoTransform():0:0 -> C
    1:1:boolean isSet(int):0:0 -> D
    1:1:boolean isSet(int,int):0:0 -> E
    1:1:boolean isTransformationRequired():0:0 -> F
    1:1:boolean isValidOverride():0:0 -> G
    1:1:com.bumptech.glide.request.BaseRequestOptions lock():0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions override(int,int):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions priority(com.bumptech.glide.Priority):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/bumptech/glide/g;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions removeOption(com.bumptech.glide.load.Option):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/g;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions self():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions selfOrThrowIfLocked():0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions set(com.bumptech.glide.load.Option,java.lang.Object):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/g;Ljava/lang/Object;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions signature(com.bumptech.glide.load.Key):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions skipMemoryCache(boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions theme(android.content.res.Resources$Theme):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/Resources$Theme;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/l;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation,boolean):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/l;Z)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation,boolean):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lf0/l;Z)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions useAnimationPool(boolean):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/a;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions autoClone():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions clone():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/a;"}
    1:1:java.lang.Object clone():0:0 -> clone
    1:1:com.bumptech.glide.request.BaseRequestOptions decode(java.lang.Class):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lx0/a;"}
    1:1:com.bumptech.glide.request.BaseRequestOptions diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/j;)Lx0/a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:com.bumptech.glide.request.BaseRequestOptions frame(long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lx0/a;"}
    1:1:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/j;"}
    1:1:int getErrorId():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:android.graphics.drawable.Drawable getErrorPlaceholder():0:0 -> i
    1:1:android.graphics.drawable.Drawable getFallbackDrawable():0:0 -> j
    1:1:int getFallbackId():0:0 -> k
    1:1:boolean getOnlyRetrieveFromCache():0:0 -> l
    1:1:com.bumptech.glide.load.Options getOptions():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/h;"}
    1:1:int getOverrideHeight():0:0 -> n
    1:1:int getOverrideWidth():0:0 -> o
    1:1:android.graphics.drawable.Drawable getPlaceholderDrawable():0:0 -> p
    1:1:int getPlaceholderId():0:0 -> q
    1:1:com.bumptech.glide.Priority getPriority():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lcom/bumptech/glide/g;"}
    1:1:java.lang.Class getResourceClass():0:0 -> s
    1:1:com.bumptech.glide.load.Key getSignature():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf0/f;"}
    1:1:float getSizeMultiplier():0:0 -> u
    1:1:android.content.res.Resources$Theme getTheme():0:0 -> v
    1:1:java.util.Map getTransformations():0:0 -> w
    1:1:boolean getUseAnimationPool():0:0 -> x
    1:1:boolean getUseUnlimitedSourceGeneratorsPool():0:0 -> y
    1:1:boolean isAutoCloneEnabled():0:0 -> z
com.bumptech.glide.request.ErrorRequestCoordinator -> x0.b:
    java.lang.Object requestLock -> a
    com.bumptech.glide.request.RequestCoordinator parent -> b
    com.bumptech.glide.request.Request primary -> c
    com.bumptech.glide.request.Request error -> d
    com.bumptech.glide.request.RequestCoordinator$RequestState primaryState -> e
    com.bumptech.glide.request.RequestCoordinator$RequestState errorState -> f
    1:1:void <init>(java.lang.Object,com.bumptech.glide.request.RequestCoordinator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx0/e;)V"}
    1:1:com.bumptech.glide.request.RequestCoordinator getRoot():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/e;"}
    1:1:void pause():0:0 -> b
    1:1:boolean canNotifyCleared(com.bumptech.glide.request.Request):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void clear():0:0 -> clear
    1:1:boolean isAnyResourceSet():0:0 -> d
    1:1:boolean isEquivalentTo(com.bumptech.glide.request.Request):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void begin():0:0 -> f
    1:1:boolean canSetImage(com.bumptech.glide.request.Request):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void onRequestFailed(com.bumptech.glide.request.Request):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    1:1:boolean isComplete():0:0 -> i
    1:1:boolean isRunning():0:0 -> isRunning
    1:1:void onRequestSuccess(com.bumptech.glide.request.Request):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    1:1:boolean isCleared():0:0 -> k
    1:1:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:boolean isValidRequestForStatusChanged(com.bumptech.glide.request.Request):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:boolean parentCanNotifyCleared():0:0 -> n
    1:1:boolean parentCanNotifyStatusChanged():0:0 -> o
    1:1:boolean parentCanSetImage():0:0 -> p
    1:1:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;Lx0/d;)V"}
com.bumptech.glide.request.FutureTarget -> x0.c:
com.bumptech.glide.request.Request -> x0.d:
    void pause() -> b
    void clear() -> clear
    boolean isAnyResourceSet() -> d
    boolean isEquivalentTo(com.bumptech.glide.request.Request) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    void begin() -> f
    boolean isComplete() -> i
    boolean isRunning() -> isRunning
    boolean isCleared() -> k
com.bumptech.glide.request.RequestCoordinator -> x0.e:
    com.bumptech.glide.request.RequestCoordinator getRoot() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/e;"}
    boolean canNotifyCleared(com.bumptech.glide.request.Request) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    boolean isAnyResourceSet() -> d
    boolean canSetImage(com.bumptech.glide.request.Request) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    void onRequestFailed(com.bumptech.glide.request.Request) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    void onRequestSuccess(com.bumptech.glide.request.Request) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
com.bumptech.glide.request.RequestCoordinator$RequestState -> x0.e$a:
    boolean isComplete -> e
    com.bumptech.glide.request.RequestCoordinator$RequestState RUNNING -> f
    com.bumptech.glide.request.RequestCoordinator$RequestState PAUSED -> g
    com.bumptech.glide.request.RequestCoordinator$RequestState CLEARED -> h
    com.bumptech.glide.request.RequestCoordinator$RequestState SUCCESS -> i
    com.bumptech.glide.request.RequestCoordinator$RequestState FAILED -> j
    com.bumptech.glide.request.RequestCoordinator$RequestState[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,boolean):0:0 -> <init>
    1:1:boolean isComplete():0:0 -> a
    1:1:com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lx0/e$a;"}
    1:1:com.bumptech.glide.request.RequestCoordinator$RequestState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lx0/e$a;"}
com.bumptech.glide.request.RequestFutureTarget -> x0.f:
    int width -> a
    int height -> b
    boolean assertBackgroundThread -> c
    com.bumptech.glide.request.RequestFutureTarget$Waiter waiter -> d
    java.lang.Object resource -> e
    com.bumptech.glide.request.Request request -> f
    boolean isCancelled -> g
    boolean resultReceived -> h
    boolean loadFailed -> i
    com.bumptech.glide.load.engine.GlideException exception -> j
    com.bumptech.glide.request.RequestFutureTarget$Waiter DEFAULT_WAITER -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(int,int,boolean,com.bumptech.glide.request.RequestFutureTarget$Waiter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZLx0/f$a;)V"}
    1:1:void onStart():0:0 -> a
    1:1:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/c;)V"}
    1:1:boolean onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;Ljava/lang/Object;Ly0/d;Z)Z"}
    1:1:boolean cancel(boolean):0:0 -> cancel
    1:1:void onLoadStarted(android.graphics.drawable.Drawable):0:0 -> d
    1:1:void getSize(com.bumptech.glide.request.target.SizeReadyCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/c;)V"}
    1:1:void onLoadFailed(android.graphics.drawable.Drawable):0:0 -> f
    1:1:void onStop():0:0 -> g
    1:1:java.lang.Object get():0:0 -> get
    2:2:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:com.bumptech.glide.request.Request getRequest():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/d;"}
    1:1:void onLoadCleared(android.graphics.drawable.Drawable):0:0 -> i
    1:1:boolean isCancelled():0:0 -> isCancelled
    1:1:boolean isDone():0:0 -> isDone
    1:1:boolean onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ly0/d;Lf0/a;Z)Z"}
    1:1:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/b;)V"}
    1:1:void onDestroy():0:0 -> l
    1:1:void setRequest(com.bumptech.glide.request.Request):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    1:1:java.lang.Object doGet(java.lang.Long):0:0 -> n
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.request.RequestFutureTarget$Waiter -> x0.f$a:
    void <init>() -> <init>
    1:1:void notifyAll(java.lang.Object):0:0 -> a
    1:1:void waitForTimeout(java.lang.Object,long):0:0 -> b
com.bumptech.glide.request.RequestListener -> x0.g:
    boolean onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;Ljava/lang/Object;Ly0/d;Z)Z"}
    boolean onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ly0/d;Lf0/a;Z)Z"}
com.bumptech.glide.request.RequestOptions -> x0.h:
    void <init>() -> <init>
    1:1:com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lx0/h;"}
    1:1:com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/j;)Lx0/h;"}
    1:1:com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/f;)Lx0/h;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.bumptech.glide.request.ResourceCallback -> x0.i:
    void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;)V"}
    void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/a;Z)V"}
    java.lang.Object getLock() -> g
com.bumptech.glide.request.SingleRequest -> x0.j:
    int width -> A
    int height -> B
    boolean isCallingCallbacks -> C
    java.lang.RuntimeException requestOrigin -> D
    boolean IS_VERBOSE_LOGGABLE -> E
    int cookie -> a
    java.lang.String tag -> b
    com.bumptech.glide.util.pool.StateVerifier stateVerifier -> c
    java.lang.Object requestLock -> d
    com.bumptech.glide.request.RequestListener targetListener -> e
    com.bumptech.glide.request.RequestCoordinator requestCoordinator -> f
    android.content.Context context -> g
    com.bumptech.glide.GlideContext glideContext -> h
    java.lang.Object model -> i
    java.lang.Class transcodeClass -> j
    com.bumptech.glide.request.BaseRequestOptions requestOptions -> k
    int overrideWidth -> l
    int overrideHeight -> m
    com.bumptech.glide.Priority priority -> n
    com.bumptech.glide.request.target.Target target -> o
    java.util.List requestListeners -> p
    com.bumptech.glide.request.transition.TransitionFactory animationFactory -> q
    java.util.concurrent.Executor callbackExecutor -> r
    com.bumptech.glide.load.engine.Resource resource -> s
    com.bumptech.glide.load.engine.Engine$LoadStatus loadStatus -> t
    long startTime -> u
    com.bumptech.glide.load.engine.Engine engine -> v
    com.bumptech.glide.request.SingleRequest$Status status -> w
    android.graphics.drawable.Drawable errorDrawable -> x
    android.graphics.drawable.Drawable placeholderDrawable -> y
    android.graphics.drawable.Drawable fallbackDrawable -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lx0/a;IILcom/bumptech/glide/g;Ly0/d;Lx0/g;Ljava/util/List;Lx0/e;Lh0/k;Lz0/c;Ljava/util/concurrent/Executor;)V"}
    1:1:void onLoadFailed(com.bumptech.glide.load.engine.GlideException,int):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;I)V"}
    1:1:void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource,boolean):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Ljava/lang/Object;Lf0/a;Z)V"}
    1:1:void setErrorPlaceholder():0:0 -> C
    1:1:void onLoadFailed(com.bumptech.glide.load.engine.GlideException):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/q;)V"}
    1:1:void pause():0:0 -> b
    1:1:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/v;Lf0/a;Z)V"}
    1:1:void clear():0:0 -> clear
    1:1:boolean isAnyResourceSet():0:0 -> d
    1:1:boolean isEquivalentTo(com.bumptech.glide.request.Request):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void begin():0:0 -> f
    1:1:java.lang.Object getLock():0:0 -> g
    1:1:void onSizeReady(int,int):0:0 -> h
    1:1:boolean isComplete():0:0 -> i
    1:1:boolean isRunning():0:0 -> isRunning
    1:1:void assertNotCallingCallbacks():0:0 -> j
    1:1:boolean isCleared():0:0 -> k
    1:1:boolean canNotifyCleared():0:0 -> l
    1:1:boolean canNotifyStatusChanged():0:0 -> m
    1:1:boolean canSetResource():0:0 -> n
    1:1:void cancel():0:0 -> o
    1:1:void experimentalNotifyRequestStarted(java.lang.Object):0:0 -> p
    1:1:android.graphics.drawable.Drawable getErrorDrawable():0:0 -> q
    1:1:android.graphics.drawable.Drawable getFallbackDrawable():0:0 -> r
    1:1:android.graphics.drawable.Drawable getPlaceholderDrawable():0:0 -> s
    1:1:boolean isFirstReadyResource():0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
    1:1:android.graphics.drawable.Drawable loadDrawable(int):0:0 -> u
    1:1:void logV(java.lang.String):0:0 -> v
    1:1:int maybeApplySizeMultiplier(int,float):0:0 -> w
    1:1:void notifyRequestCoordinatorLoadFailed():0:0 -> x
    1:1:void notifyRequestCoordinatorLoadSucceeded():0:0 -> y
    1:1:com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lx0/a;IILcom/bumptech/glide/g;Ly0/d;Lx0/g;Ljava/util/List;Lx0/e;Lh0/k;Lz0/c;Ljava/util/concurrent/Executor;)Lx0/j;"}
com.bumptech.glide.request.SingleRequest$Status -> x0.j$a:
    com.bumptech.glide.request.SingleRequest$Status PENDING -> e
    com.bumptech.glide.request.SingleRequest$Status RUNNING -> f
    com.bumptech.glide.request.SingleRequest$Status WAITING_FOR_SIZE -> g
    com.bumptech.glide.request.SingleRequest$Status COMPLETE -> h
    com.bumptech.glide.request.SingleRequest$Status FAILED -> i
    com.bumptech.glide.request.SingleRequest$Status CLEARED -> j
    com.bumptech.glide.request.SingleRequest$Status[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lx0/j$a;"}
    1:1:com.bumptech.glide.request.SingleRequest$Status[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lx0/j$a;"}
com.bumptech.glide.request.ThumbnailRequestCoordinator -> x0.k:
    com.bumptech.glide.request.RequestCoordinator parent -> a
    java.lang.Object requestLock -> b
    com.bumptech.glide.request.Request full -> c
    com.bumptech.glide.request.Request thumb -> d
    com.bumptech.glide.request.RequestCoordinator$RequestState fullState -> e
    com.bumptech.glide.request.RequestCoordinator$RequestState thumbState -> f
    boolean isRunningDuringBegin -> g
    1:1:void <init>(java.lang.Object,com.bumptech.glide.request.RequestCoordinator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx0/e;)V"}
    1:1:com.bumptech.glide.request.RequestCoordinator getRoot():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/e;"}
    1:1:void pause():0:0 -> b
    1:1:boolean canNotifyCleared(com.bumptech.glide.request.Request):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void clear():0:0 -> clear
    1:1:boolean isAnyResourceSet():0:0 -> d
    1:1:boolean isEquivalentTo(com.bumptech.glide.request.Request):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void begin():0:0 -> f
    1:1:boolean canSetImage(com.bumptech.glide.request.Request):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:void onRequestFailed(com.bumptech.glide.request.Request):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    1:1:boolean isComplete():0:0 -> i
    1:1:boolean isRunning():0:0 -> isRunning
    1:1:void onRequestSuccess(com.bumptech.glide.request.Request):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
    1:1:boolean isCleared():0:0 -> k
    1:1:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)Z"}
    1:1:boolean parentCanNotifyCleared():0:0 -> m
    1:1:boolean parentCanNotifyStatusChanged():0:0 -> n
    1:1:boolean parentCanSetImage():0:0 -> o
    1:1:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;Lx0/d;)V"}
com.bumptech.glide.request.target.CustomTarget -> y0.a:
    int width -> a
    int height -> b
    com.bumptech.glide.request.Request request -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int,int):0:0 -> <init>
    1:1:void onStart():0:0 -> a
    1:1:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/c;)V"}
    1:1:void onLoadStarted(android.graphics.drawable.Drawable):0:0 -> d
    1:1:void getSize(com.bumptech.glide.request.target.SizeReadyCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/c;)V"}
    1:1:void onLoadFailed(android.graphics.drawable.Drawable):0:0 -> f
    1:1:void onStop():0:0 -> g
    1:1:com.bumptech.glide.request.Request getRequest():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/d;"}
    1:1:void onDestroy():0:0 -> l
    1:1:void setRequest(com.bumptech.glide.request.Request):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
com.bumptech.glide.request.target.ImageViewTargetFactory -> y0.b:
    void <init>() -> <init>
com.bumptech.glide.request.target.SizeReadyCallback -> y0.c:
    void onSizeReady(int,int) -> h
com.bumptech.glide.request.target.Target -> y0.d:
    void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/c;)V"}
    void onLoadStarted(android.graphics.drawable.Drawable) -> d
    void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/c;)V"}
    void onLoadFailed(android.graphics.drawable.Drawable) -> f
    com.bumptech.glide.request.Request getRequest() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/d;"}
    void onLoadCleared(android.graphics.drawable.Drawable) -> i
    void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/b;)V"}
    void setRequest(com.bumptech.glide.request.Request) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/d;)V"}
com.bumptech.glide.request.transition.NoTransition -> z0.a:
    com.bumptech.glide.request.transition.NoTransition NO_ANIMATION -> a
    com.bumptech.glide.request.transition.TransitionFactory NO_ANIMATION_FACTORY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.bumptech.glide.request.transition.TransitionFactory getFactory():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz0/c;"}
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory -> z0.a$a:
    void <init>() -> <init>
    1:1:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;Z)Lz0/b;"}
com.bumptech.glide.request.transition.Transition -> z0.b:
com.bumptech.glide.request.transition.TransitionFactory -> z0.c:
    com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;Z)Lz0/b;"}
com.bumptech.glide.signature.AndroidResourceSignature -> a1.a:
    int nightMode -> b
    com.bumptech.glide.load.Key applicationVersion -> c
    1:1:void <init>(int,com.bumptech.glide.load.Key):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILf0/f;)V"}
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:com.bumptech.glide.load.Key obtain(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lf0/f;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.bumptech.glide.signature.ApplicationVersionSignature -> a1.b:
    java.util.concurrent.ConcurrentMap PACKAGE_NAME_TO_KEY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.Context):0:0 -> a
    1:1:java.lang.String getVersionCode(android.content.pm.PackageInfo):0:0 -> b
    1:1:com.bumptech.glide.load.Key obtain(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lf0/f;"}
    1:1:com.bumptech.glide.load.Key obtainVersionSignature(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lf0/f;"}
com.bumptech.glide.signature.EmptySignature -> a1.c:
    com.bumptech.glide.signature.EmptySignature EMPTY_KEY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:com.bumptech.glide.signature.EmptySignature obtain():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La1/c;"}
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.signature.ObjectKey -> a1.d:
    java.lang.Object object -> b
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:void updateDiskCacheKey(java.security.MessageDigest):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.util.ByteBufferUtil -> b1.a:
    java.util.concurrent.atomic.AtomicReference BUFFER_REF -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.nio.ByteBuffer fromFile(java.io.File):0:0 -> a
    1:1:java.nio.ByteBuffer fromStream(java.io.InputStream):0:0 -> b
    1:1:com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lb1/a$b;"}
    1:1:java.nio.ByteBuffer rewind(java.nio.ByteBuffer):0:0 -> d
    1:1:byte[] toBytes(java.nio.ByteBuffer):0:0 -> e
    1:1:void toFile(java.nio.ByteBuffer,java.io.File):0:0 -> f
    1:1:java.io.InputStream toStream(java.nio.ByteBuffer):0:0 -> g
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream -> b1.a$a:
    java.nio.ByteBuffer byteBuffer -> e
    int markPos -> f
    1:1:void <init>(java.nio.ByteBuffer):0:0 -> <init>
    1:1:int available():0:0 -> available
    1:1:void mark(int):0:0 -> mark
    1:1:boolean markSupported():0:0 -> markSupported
    1:1:int read():0:0 -> read
    2:2:int read(byte[],int,int):0:0 -> read
    1:1:void reset():0:0 -> reset
    1:1:long skip(long):0:0 -> skip
com.bumptech.glide.util.ByteBufferUtil$SafeArray -> b1.a$b:
    int offset -> a
    int limit -> b
    byte[] data -> c
    1:1:void <init>(byte[],int,int):0:0 -> <init>
com.bumptech.glide.util.CachedHashCodeArrayMap -> b1.b:
    int hashCode -> m
    void <init>() -> <init>
    1:1:void clear():0:0 -> clear
    1:1:int hashCode():0:0 -> hashCode
    1:1:void putAll(androidx.collection.SimpleArrayMap):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le/d;)V"}
    1:1:java.lang.Object removeAt(int):0:0 -> k
    1:1:java.lang.Object setValueAt(int,java.lang.Object):0:0 -> l
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
com.bumptech.glide.util.ContentLengthInputStream -> b1.c:
    long contentLength -> e
    int readSoFar -> f
    1:1:void <init>(java.io.InputStream,long):0:0 -> <init>
    1:1:int checkReadSoFarOrThrow(int):0:0 -> a
    1:1:int available():0:0 -> available
    1:1:java.io.InputStream obtain(java.io.InputStream,long):0:0 -> b
    1:1:int read():0:0 -> read
    2:2:int read(byte[]):0:0 -> read
    3:3:int read(byte[],int,int):0:0 -> read
com.bumptech.glide.util.ExceptionPassthroughInputStream -> b1.d:
    java.io.InputStream wrapped -> e
    java.io.IOException exception -> f
    java.util.Queue POOL -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.io.IOException getException():0:0 -> a
    1:1:int available():0:0 -> available
    1:1:com.bumptech.glide.util.ExceptionPassthroughInputStream obtain(java.io.InputStream):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;)Lb1/d;"}
    1:1:void release():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:void setInputStream(java.io.InputStream):0:0 -> d
    1:1:void mark(int):0:0 -> mark
    1:1:boolean markSupported():0:0 -> markSupported
    1:1:int read():0:0 -> read
    2:2:int read(byte[]):0:0 -> read
    3:3:int read(byte[],int,int):0:0 -> read
    1:1:void reset():0:0 -> reset
    1:1:long skip(long):0:0 -> skip
com.bumptech.glide.util.Executors -> b1.e:
    java.util.concurrent.Executor MAIN_THREAD_EXECUTOR -> a
    java.util.concurrent.Executor DIRECT_EXECUTOR -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.concurrent.Executor directExecutor():0:0 -> a
    1:1:java.util.concurrent.Executor mainThreadExecutor():0:0 -> b
com.bumptech.glide.util.Executors$1 -> b1.e$a:
    void <init>() -> <init>
    1:1:void execute(java.lang.Runnable):0:0 -> execute
com.bumptech.glide.util.Executors$2 -> b1.e$b:
    void <init>() -> <init>
    1:1:void execute(java.lang.Runnable):0:0 -> execute
com.bumptech.glide.util.GlideSuppliers -> b1.f:
    1:1:com.bumptech.glide.util.GlideSuppliers$GlideSupplier memorize(com.bumptech.glide.util.GlideSuppliers$GlideSupplier):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/f$b;)Lb1/f$b;"}
com.bumptech.glide.util.GlideSuppliers$1 -> b1.f$a:
    java.lang.Object instance -> a
    com.bumptech.glide.util.GlideSuppliers$GlideSupplier val$supplier -> b
    1:1:void <init>(com.bumptech.glide.util.GlideSuppliers$GlideSupplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/f$b;)V"}
    1:1:java.lang.Object get():0:0 -> get
com.bumptech.glide.util.GlideSuppliers$GlideSupplier -> b1.f$b:
    java.lang.Object get() -> get
com.bumptech.glide.util.LogTime -> b1.g:
    double MILLIS_MULTIPLIER -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:double getElapsedMillis(long):0:0 -> a
    1:1:long getLogTime():0:0 -> b
com.bumptech.glide.util.LruCache -> b1.h:
    java.util.Map cache -> a
    long initialMaxSize -> b
    long maxSize -> c
    long currentSize -> d
    1:1:void <init>(long):0:0 -> <init>
    1:1:void clearMemory():0:0 -> b
    1:1:void evict():0:0 -> f
    1:1:java.lang.Object get(java.lang.Object):0:0 -> g
    1:1:long getMaxSize():0:0 -> h
    1:1:int getSize(java.lang.Object):0:0 -> i
    1:1:void onItemEvicted(java.lang.Object,java.lang.Object):0:0 -> j
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> l
    1:1:void trimToSize(long):0:0 -> m
com.bumptech.glide.util.LruCache$Entry -> b1.h$a:
    java.lang.Object value -> a
    int size -> b
    1:1:void <init>(java.lang.Object,int):0:0 -> <init>
com.bumptech.glide.util.MarkEnforcingInputStream -> b1.i:
    int availableBytes -> e
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    1:1:long getBytesToRead(long):0:0 -> a
    1:1:int available():0:0 -> available
    1:1:void updateAvailableBytesAfterRead(long):0:0 -> b
    1:1:void mark(int):0:0 -> mark
    1:1:int read():0:0 -> read
    2:2:int read(byte[],int,int):0:0 -> read
    1:1:void reset():0:0 -> reset
    1:1:long skip(long):0:0 -> skip
com.bumptech.glide.util.MultiClassKey -> b1.j:
    java.lang.Class first -> a
    java.lang.Class second -> b
    java.lang.Class third -> c
    void <init>() -> <init>
    1:1:void <init>(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> <init>
    1:1:void set(java.lang.Class,java.lang.Class,java.lang.Class):0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.bumptech.glide.util.Preconditions -> b1.k:
    1:1:void checkArgument(boolean,java.lang.String):0:0 -> a
    1:1:java.lang.String checkNotEmpty(java.lang.String):0:0 -> b
    1:1:java.util.Collection checkNotEmpty(java.util.Collection):0:0 -> c
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> d
    1:1:java.lang.Object checkNotNull(java.lang.Object,java.lang.String):0:0 -> e
com.bumptech.glide.util.Util -> b1.l:
    char[] HEX_CHAR_ARRAY -> a
    char[] SHA_256_CHARS -> b
    android.os.Handler mainThreadHandler -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void assertBackgroundThread():0:0 -> a
    1:1:void assertMainThread():0:0 -> b
    1:1:boolean bothModelsNullEquivalentOrEquals(java.lang.Object,java.lang.Object):0:0 -> c
    1:1:boolean bothNullOrEqual(java.lang.Object,java.lang.Object):0:0 -> d
    1:1:java.lang.String bytesToHex(byte[],char[]):0:0 -> e
    1:1:java.util.Queue createQueue(int):0:0 -> f
    1:1:int getBitmapByteSize(int,int,android.graphics.Bitmap$Config):0:0 -> g
    1:1:int getBitmapByteSize(android.graphics.Bitmap):0:0 -> h
    1:1:int getBytesPerPixel(android.graphics.Bitmap$Config):0:0 -> i
    1:1:java.util.List getSnapshot(java.util.Collection):0:0 -> j
    1:1:android.os.Handler getUiThreadHandler():0:0 -> k
    1:1:int hashCode(float):0:0 -> l
    1:1:int hashCode(float,int):0:0 -> m
    1:1:int hashCode(int,int):0:0 -> n
    1:1:int hashCode(java.lang.Object,int):0:0 -> o
    1:1:int hashCode(boolean,int):0:0 -> p
    1:1:boolean isOnBackgroundThread():0:0 -> q
    1:1:boolean isOnMainThread():0:0 -> r
    1:1:boolean isValidDimension(int):0:0 -> s
    1:1:boolean isValidDimensions(int,int):0:0 -> t
    1:1:void postOnUiThread(java.lang.Runnable):0:0 -> u
    1:1:void removeCallbacksOnUiThread(java.lang.Runnable):0:0 -> v
    1:1:java.lang.String sha256BytesToHex(byte[]):0:0 -> w
com.bumptech.glide.util.Util$1 -> b1.l$a:
    int[] $SwitchMap$android$graphics$Bitmap$Config -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.bumptech.glide.util.pool.FactoryPools -> c1.a:
    com.bumptech.glide.util.pool.FactoryPools$Resetter EMPTY_RESETTER -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d;Lc1/a$d;)Lh/d;"}
    1:1:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d;Lc1/a$d;Lc1/a$g;)Lh/d;"}
    1:1:com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/a$g;"}
    1:1:androidx.core.util.Pools$Pool threadSafe(int,com.bumptech.glide.util.pool.FactoryPools$Factory):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILc1/a$d;)Lh/d;"}
    1:1:androidx.core.util.Pools$Pool threadSafeList():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh/d;"}
    1:1:androidx.core.util.Pools$Pool threadSafeList(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lh/d;"}
com.bumptech.glide.util.pool.FactoryPools$1 -> c1.a$a:
    void <init>() -> <init>
    1:1:void reset(java.lang.Object):0:0 -> a
com.bumptech.glide.util.pool.FactoryPools$2 -> c1.a$b:
    void <init>() -> <init>
    1:1:java.lang.Object create():0:0 -> a
    1:1:java.util.List create():0:0 -> b
com.bumptech.glide.util.pool.FactoryPools$3 -> c1.a$c:
    void <init>() -> <init>
    1:1:void reset(java.lang.Object):0:0 -> a
    1:1:void reset(java.util.List):0:0 -> b
com.bumptech.glide.util.pool.FactoryPools$Factory -> c1.a$d:
    java.lang.Object create() -> a
com.bumptech.glide.util.pool.FactoryPools$FactoryPool -> c1.a$e:
    com.bumptech.glide.util.pool.FactoryPools$Factory factory -> a
    com.bumptech.glide.util.pool.FactoryPools$Resetter resetter -> b
    androidx.core.util.Pools$Pool pool -> c
    1:1:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/d;Lc1/a$d;Lc1/a$g;)V"}
    1:1:boolean release(java.lang.Object):0:0 -> a
    1:1:java.lang.Object acquire():0:0 -> b
com.bumptech.glide.util.pool.FactoryPools$Poolable -> c1.a$f:
    com.bumptech.glide.util.pool.StateVerifier getVerifier() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/c;"}
com.bumptech.glide.util.pool.FactoryPools$Resetter -> c1.a$g:
    void reset(java.lang.Object) -> a
com.bumptech.glide.util.pool.GlideTrace -> c1.b:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void beginSection(java.lang.String):0:0 -> a
    1:1:int beginSectionAsync(java.lang.String):0:0 -> b
    1:1:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object):0:0 -> c
    1:1:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> d
    1:1:void endSection():0:0 -> e
    1:1:void endSectionAsync(java.lang.String,int):0:0 -> f
com.bumptech.glide.util.pool.StateVerifier -> c1.c:
    void <init>() -> <init>
    1:1:void <init>(com.bumptech.glide.util.pool.StateVerifier$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc1/c$a;)V"}
    1:1:com.bumptech.glide.util.pool.StateVerifier newInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc1/c;"}
    void setRecycled(boolean) -> b
    void throwIfRecycled() -> c
com.bumptech.glide.util.pool.StateVerifier$1 -> c1.c$a:
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier -> c1.c$b:
    boolean isReleased -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void setRecycled(boolean):0:0 -> b
    1:1:void throwIfRecycled():0:0 -> c
com.fluttercandies.photo_manager.PhotoManagerPlugin -> d1.b:
    com.fluttercandies.photo_manager.core.PhotoManagerPlugin plugin -> a
    com.fluttercandies.photo_manager.permission.PermissionsUtils permissionsUtils -> b
    io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding binding -> c
    io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener requestPermissionsResultListener -> d
    com.fluttercandies.photo_manager.PhotoManagerPlugin$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void activityAttached(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:void addRequestPermissionsResultListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void onDetachedFromActivity():0:0 -> d
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void onRemoveRequestPermissionResultListener(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> i
com.fluttercandies.photo_manager.PhotoManagerPlugin$Companion -> d1.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:boolean $r8$lambda$s2WOBG9wfMpUXmzKny6nF3kY4O8(com.fluttercandies.photo_manager.permission.PermissionsUtils,int,java.lang.String[],int[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;I[Ljava/lang/String;[I)Z"}
    1:1:io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener createAddRequestPermissionsResultListener(com.fluttercandies.photo_manager.permission.PermissionsUtils):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;)La2/m;"}
    1:1:boolean createAddRequestPermissionsResultListener$lambda$1(com.fluttercandies.photo_manager.permission.PermissionsUtils,int,java.lang.String[],int[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;I[Ljava/lang/String;[I)Z"}
    1:1:void register(com.fluttercandies.photo_manager.core.PhotoManagerPlugin,io.flutter.plugin.common.BinaryMessenger):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;La2/c;)V"}
com.fluttercandies.photo_manager.PhotoManagerPlugin$Companion$$ExternalSyntheticLambda0 -> d1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.fluttercandies.photo_manager.permission.PermissionsUtils com.fluttercandies.photo_manager.PhotoManagerPlugin$Companion$$InternalSyntheticLambda$1$bd28905f5fa84c20d3c03f8684ad8e8b007302798e91a5ed0f6260b59ca5cbaf$0.f$0 -> a
    1:1:void com.fluttercandies.photo_manager.PhotoManagerPlugin$Companion$$InternalSyntheticLambda$1$bd28905f5fa84c20d3c03f8684ad8e8b007302798e91a5ed0f6260b59ca5cbaf$0.<init>(com.fluttercandies.photo_manager.permission.PermissionsUtils):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;)V"}
    1:1:boolean com.fluttercandies.photo_manager.PhotoManagerPlugin$Companion$$InternalSyntheticLambda$1$bd28905f5fa84c20d3c03f8684ad8e8b007302798e91a5ed0f6260b59ca5cbaf$0.onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.constant.AssetType -> e1.a:
    com.fluttercandies.photo_manager.constant.AssetType Image -> e
    com.fluttercandies.photo_manager.constant.AssetType Video -> f
    com.fluttercandies.photo_manager.constant.AssetType Audio -> g
    com.fluttercandies.photo_manager.constant.AssetType[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.fluttercandies.photo_manager.constant.AssetType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le1/a;"}
    1:1:com.fluttercandies.photo_manager.constant.AssetType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le1/a;"}
    1:1:com.fluttercandies.photo_manager.constant.AssetType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le1/a;"}
com.fluttercandies.photo_manager.constant.Methods -> e1.b:
    com.fluttercandies.photo_manager.constant.Methods$Companion Companion -> a
    java.lang.String[] haveRequestTypeMethods -> b
    java.lang.String[] needMediaLocationMethods -> c
    1:1:void <clinit>():0:0 -> <clinit>
com.fluttercandies.photo_manager.constant.Methods$Companion -> e1.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:boolean isNotNeedPermissionMethod(java.lang.String):0:0 -> a
    1:1:boolean isPermissionMethod(java.lang.String):0:0 -> b
com.fluttercandies.photo_manager.core.PhotoManager -> f1.b:
    android.content.Context context -> a
    boolean useOldApi -> b
    java.util.ArrayList cacheFutures -> c
    com.fluttercandies.photo_manager.core.PhotoManager$Companion Companion -> d
    java.util.concurrent.ExecutorService threadPool -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveVideo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:void setUseOldApi(boolean):0:0 -> C
    1:1:void $r8$lambda$vp5AP4axkoLf-6D4ckC9C6t2N50(com.bumptech.glide.request.FutureTarget):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/c;)V"}
    1:1:void assetExists(java.lang.String,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ln1/e;)V"}
    1:1:void cancelCacheRequests():0:0 -> c
    1:1:void clearFileCache():0:0 -> d
    1:1:void copyToGallery(java.lang.String,java.lang.String,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ln1/e;)V"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity fetchEntityProperties(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetPathEntity fetchPathProperties(java.lang.String,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILi1/e;)Lh1/c;"}
    1:1:void getAssetCount(com.fluttercandies.photo_manager.util.ResultHandler,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;Li1/e;I)V"}
    1:1:void getAssetCount(com.fluttercandies.photo_manager.util.ResultHandler,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;Li1/e;ILjava/lang/String;)V"}
    1:1:java.util.List getAssetListPaged(java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    1:1:java.util.List getAssetListRange(java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    1:1:java.util.List getAssetPathList(int,boolean,boolean,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZZLi1/e;)Ljava/util/List;"}
    1:1:void getAssetsByRange(com.fluttercandies.photo_manager.util.ResultHandler,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;Li1/e;III)V"}
    1:1:void getColumnNames(com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;)V"}
    1:1:com.fluttercandies.photo_manager.core.utils.IDBUtils getDbUtils():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj1/e;"}
    1:1:void getFile(java.lang.String,boolean,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ZLn1/e;)V"}
    1:1:java.util.Map getLocation(java.lang.String):0:0 -> q
    1:1:java.lang.String getMediaUri(long,int):0:0 -> r
    1:1:void getOriginBytes(java.lang.String,com.fluttercandies.photo_manager.util.ResultHandler,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ln1/e;Z)V"}
    1:1:void getThumb(java.lang.String,com.fluttercandies.photo_manager.core.entity.ThumbLoadOption,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lh1/e;Ln1/e;)V"}
    1:1:android.net.Uri getUri(java.lang.String):0:0 -> u
    1:1:void moveToGallery(java.lang.String,java.lang.String,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ln1/e;)V"}
    1:1:void removeAllExistsAssets(com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;)V"}
    1:1:void requestCache(java.util.List,com.fluttercandies.photo_manager.core.entity.ThumbLoadOption,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lh1/e;Ln1/e;)V"}
    1:1:void requestCache$lambda$3(com.bumptech.glide.request.FutureTarget):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/c;)V"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
com.fluttercandies.photo_manager.core.PhotoManager$$ExternalSyntheticLambda0 -> f1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.bumptech.glide.request.FutureTarget com.fluttercandies.photo_manager.core.PhotoManager$$InternalSyntheticLambda$3$f5495c0f480f2f377ade0120a7b94676bb913266dd8731fded51b7f087d7d650$0.f$0 -> e
    1:1:void com.fluttercandies.photo_manager.core.PhotoManager$$InternalSyntheticLambda$3$f5495c0f480f2f377ade0120a7b94676bb913266dd8731fded51b7f087d7d650$0.<init>(com.bumptech.glide.request.FutureTarget):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/c;)V"}
    1:1:void com.fluttercandies.photo_manager.core.PhotoManager$$InternalSyntheticLambda$3$f5495c0f480f2f377ade0120a7b94676bb913266dd8731fded51b7f087d7d650$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManager$Companion -> f1.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager -> f1.i:
    android.content.Context context -> a
    android.app.Activity activity -> b
    int androidQDeleteRequestCode -> c
    java.util.Map androidQUriMap -> d
    java.util.List androidQSuccessIds -> e
    java.util.List androidQRemovedIds -> f
    java.util.LinkedList waitPermissionQueue -> g
    com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$AndroidQDeleteTask currentTask -> h
    int androidRDeleteRequestCode -> i
    com.fluttercandies.photo_manager.util.ResultHandler androidRHandler -> j
    com.fluttercandies.photo_manager.util.ResultHandler androidQHandler -> k
    1:1:void <init>(android.content.Context,android.app.Activity):0:0 -> <init>
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:android.app.Activity access$getActivity$p(com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/i;)Landroid/app/Activity;"}
    1:1:int access$getAndroidQDeleteRequestCode$p(com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/i;)I"}
    1:1:java.util.List access$getAndroidQSuccessIds$p(com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/i;)Ljava/util/List;"}
    1:1:void access$requestAndroidQNextPermission(com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/i;)V"}
    1:1:void bindActivity(android.app.Activity):0:0 -> f
    1:1:void deleteInApi28(java.util.List):0:0 -> g
    1:1:void deleteInApi30(java.util.List,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ln1/e;)V"}
    1:1:void deleteJustInApi29(java.util.HashMap,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/HashMap;Ln1/e;)V"}
    1:1:android.content.ContentResolver getCr():0:0 -> j
    1:1:void handleAndroidRDelete(int):0:0 -> k
    1:1:void moveToTrashInApi30(java.util.List,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ln1/e;)V"}
    1:1:void replyAndroidQDeleteResult():0:0 -> m
    1:1:void requestAndroidQNextPermission():0:0 -> n
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$ExternalSyntheticApiModelOutline0 -> f1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.PendingIntent com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$InternalSyntheticApiModelOutline$3$609f6182ed39b7734521be04bfc176cacfe3b994be292f92f2dfb189fa513942$0.m(android.content.ContentResolver,java.util.Collection,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$ExternalSyntheticApiModelOutline1 -> f1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$InternalSyntheticApiModelOutline$3$8fd62af36e1ba65a83dafe0d2151e74026aea1b719ae867bf590bef28a620a37$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$ExternalSyntheticApiModelOutline2 -> f1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.RecoverableSecurityException com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$InternalSyntheticApiModelOutline$3$8fd62af36e1ba65a83dafe0d2151e74026aea1b719ae867bf590bef28a620a37$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$ExternalSyntheticApiModelOutline3 -> f1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.PendingIntent com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$$InternalSyntheticApiModelOutline$3$c472e64d2f4f4dce38f2de51e1a96606cc562691c9fe4f03d676fc5b0eeaad5a$0.m(android.content.ContentResolver,java.util.Collection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$AndroidQDeleteTask -> f1.i$a:
    java.lang.String id -> a
    android.net.Uri uri -> b
    android.app.RecoverableSecurityException exception -> c
    com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager this$0 -> d
    1:1:void <init>(com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager,java.lang.String,android.net.Uri,android.app.RecoverableSecurityException):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/i;Ljava/lang/String;Landroid/net/Uri;Landroid/app/RecoverableSecurityException;)V"}
    1:1:void handleResult(int):0:0 -> a
    1:1:void requestPermission():0:0 -> b
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$AndroidQDeleteTask$$ExternalSyntheticApiModelOutline0 -> f1.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.RemoteAction com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$AndroidQDeleteTask$$InternalSyntheticApiModelOutline$4$c5d27461b40813b1b86ad874e8b194a17e631752111b76bbcbf1e67a282eac67$0.m(android.app.RecoverableSecurityException):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$AndroidQDeleteTask$$ExternalSyntheticApiModelOutline1 -> f1.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.PendingIntent com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$AndroidQDeleteTask$$InternalSyntheticApiModelOutline$4$c5d27461b40813b1b86ad874e8b194a17e631752111b76bbcbf1e67a282eac67$1.m(android.app.RemoteAction):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$deleteInApi28$where$1 -> f1.i$b:
    com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager$deleteInApi28$where$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(java.lang.String):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel -> f1.j:
    android.content.Context applicationContext -> a
    boolean notifying -> b
    com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel$MediaObserver videoObserver -> c
    com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel$MediaObserver imageObserver -> d
    com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel$MediaObserver audioObserver -> e
    android.net.Uri allUri -> f
    android.net.Uri imageUri -> g
    android.net.Uri videoUri -> h
    android.net.Uri audioUri -> i
    io.flutter.plugin.common.MethodChannel methodChannel -> j
    1:1:void <init>(android.content.Context,io.flutter.plugin.common.BinaryMessenger,android.os.Handler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;La2/c;Landroid/os/Handler;)V"}
    1:1:android.net.Uri access$getAllUri$p(com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/j;)Landroid/net/Uri;"}
    1:1:android.content.Context getApplicationContext():0:0 -> b
    1:1:android.content.Context getContext():0:0 -> c
    1:1:void onOuterChange(android.net.Uri,java.lang.String,java.lang.Long,java.lang.Long,int):0:0 -> d
    1:1:void registerObserver(com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel$MediaObserver,android.net.Uri):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/j$a;Landroid/net/Uri;)V"}
    1:1:void startNotify():0:0 -> f
    1:1:void stopNotify():0:0 -> g
com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel$MediaObserver -> f1.j$a:
    int type -> a
    android.net.Uri uri -> b
    com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel this$0 -> c
    1:1:void <init>(com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel,int,android.os.Handler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/j;ILandroid/os/Handler;)V"}
    1:1:android.content.Context getContext():0:0 -> a
    1:1:android.content.ContentResolver getCr():0:0 -> b
    1:1:kotlin.Pair getGalleryIdAndName(long,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JI)Lg2/j;"}
    1:1:void setUri(android.net.Uri):0:0 -> d
    1:1:void onChange(boolean,android.net.Uri):0:0 -> onChange
com.fluttercandies.photo_manager.core.PhotoManagerPlugin -> f1.k:
    android.content.Context applicationContext -> a
    android.app.Activity activity -> b
    com.fluttercandies.photo_manager.permission.PermissionsUtils permissionsUtils -> c
    com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager deleteManager -> d
    com.fluttercandies.photo_manager.core.PhotoManagerNotifyChannel notifyChannel -> e
    com.fluttercandies.photo_manager.core.PhotoManager photoManager -> f
    boolean ignorePermissionCheck -> g
    com.fluttercandies.photo_manager.core.PhotoManagerPlugin$Companion Companion -> h
    java.util.concurrent.ThreadPoolExecutor threadPool -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,io.flutter.plugin.common.BinaryMessenger,android.app.Activity,com.fluttercandies.photo_manager.permission.PermissionsUtils):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;La2/c;Landroid/app/Activity;Lk1/e;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:android.content.Context access$getApplicationContext$p(com.fluttercandies.photo_manager.core.PhotoManagerPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;)Landroid/content/Context;"}
    1:1:com.fluttercandies.photo_manager.permission.PermissionsUtils access$getPermissionsUtils$p(com.fluttercandies.photo_manager.core.PhotoManagerPlugin):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;)Lk1/e;"}
    1:1:com.fluttercandies.photo_manager.core.PhotoManager access$getPhotoManager$p(com.fluttercandies.photo_manager.core.PhotoManagerPlugin):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;)Lf1/b;"}
    1:1:java.util.concurrent.ThreadPoolExecutor access$getThreadPool$cp():0:0 -> e
    1:1:void access$handleMethodResult(com.fluttercandies.photo_manager.core.PhotoManagerPlugin,com.fluttercandies.photo_manager.util.ResultHandler,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;Ln1/e;Z)V"}
    1:1:void bindActivity(android.app.Activity):0:0 -> g
    1:1:com.fluttercandies.photo_manager.core.PhotoManagerDeleteManager getDeleteManager():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf1/i;"}
    1:1:int getInt(io.flutter.plugin.common.MethodCall,java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;Ljava/lang/String;)I"}
    1:1:com.fluttercandies.photo_manager.core.entity.filter.FilterOption getOption(io.flutter.plugin.common.MethodCall):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;)Li1/e;"}
    1:1:java.lang.String getString(io.flutter.plugin.common.MethodCall,java.lang.String):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:void handleMethodResult(com.fluttercandies.photo_manager.util.ResultHandler,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;Z)V"}
    1:1:void handleNotNeedPermissionMethod(com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;)V"}
    1:1:void handleOtherMethods(com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;)V"}
    1:1:void handlePermissionMethod(com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;)V"}
com.fluttercandies.photo_manager.core.PhotoManagerPlugin$1 -> f1.k$a:
    void <init>() -> <init>
    1:1:void onGranted(java.util.List):0:0 -> a
    1:1:void onDenied(java.util.List,java.util.List,java.util.List):0:0 -> b
com.fluttercandies.photo_manager.core.PhotoManagerPlugin$Companion -> f1.k$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:void $r8$lambda$vWNc2g2BWEDWg6G41MFWJAaVd4g(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:void runOnBackground(kotlin.jvm.functions.Function0):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:void runOnBackground$lambda$0(kotlin.jvm.functions.Function0):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
com.fluttercandies.photo_manager.core.PhotoManagerPlugin$Companion$$ExternalSyntheticLambda0 -> f1.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function0 com.fluttercandies.photo_manager.core.PhotoManagerPlugin$Companion$$InternalSyntheticLambda$2$ab1a201d453f50ef0598dffdac2b255c51526f7e405a23ef416b445b1ca2a96f$0.f$0 -> e
    1:1:void com.fluttercandies.photo_manager.core.PhotoManagerPlugin$Companion$$InternalSyntheticLambda$2$ab1a201d453f50ef0598dffdac2b255c51526f7e405a23ef416b445b1ca2a96f$0.<init>(kotlin.jvm.functions.Function0):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:void com.fluttercandies.photo_manager.core.PhotoManagerPlugin$Companion$$InternalSyntheticLambda$2$ab1a201d453f50ef0598dffdac2b255c51526f7e405a23ef416b445b1ca2a96f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.PhotoManagerPlugin$handleNotNeedPermissionMethod$1 -> f1.k$c:
    com.fluttercandies.photo_manager.core.PhotoManagerPlugin this$0 -> f
    com.fluttercandies.photo_manager.util.ResultHandler $resultHandler -> g
    1:1:void <init>(com.fluttercandies.photo_manager.core.PhotoManagerPlugin,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;Ln1/e;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
com.fluttercandies.photo_manager.core.PhotoManagerPlugin$handleOtherMethods$1 -> f1.k$d:
    com.fluttercandies.photo_manager.core.PhotoManagerPlugin this$0 -> f
    com.fluttercandies.photo_manager.util.ResultHandler $resultHandler -> g
    1:1:void <init>(com.fluttercandies.photo_manager.core.PhotoManagerPlugin,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/k;Ln1/e;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> d
com.fluttercandies.photo_manager.core.PhotoManagerPlugin$handlePermissionMethod$1 -> f1.k$e:
    com.fluttercandies.photo_manager.util.ResultHandler $resultHandler -> a
    com.fluttercandies.photo_manager.core.PhotoManagerPlugin this$0 -> b
    int $requestType -> c
    boolean $mediaLocation -> d
    1:1:void <init>(com.fluttercandies.photo_manager.util.ResultHandler,com.fluttercandies.photo_manager.core.PhotoManagerPlugin,int,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;Lf1/k;IZ)V"}
    1:1:void onGranted(java.util.List):0:0 -> a
    1:1:void onDenied(java.util.List,java.util.List,java.util.List):0:0 -> b
com.fluttercandies.photo_manager.core.cache.ScopedCache -> g1.a:
    com.fluttercandies.photo_manager.core.cache.ScopedCache$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void clearFileCache(android.content.Context):0:0 -> a
    1:1:java.io.File getCacheFile(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/b;Z)Ljava/io/File;"}
    1:1:java.io.File getCacheFileFromEntity(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/b;Z)Ljava/io/File;"}
com.fluttercandies.photo_manager.core.cache.ScopedCache$Companion -> g1.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.core.entity.AssetEntity -> h1.b:
    long id -> a
    java.lang.String path -> b
    long duration -> c
    long createDt -> d
    int width -> e
    int height -> f
    int type -> g
    java.lang.String displayName -> h
    long modifiedDate -> i
    int orientation -> j
    java.lang.Double lat -> k
    java.lang.Double lng -> l
    java.lang.String androidQRelativePath -> m
    java.lang.String mimeType -> n
    java.lang.String relativePath -> o
    1:1:void <init>(long,java.lang.String,long,long,int,int,int,java.lang.String,long,int,java.lang.Double,java.lang.Double,java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(long,java.lang.String,long,long,int,int,int,java.lang.String,long,int,java.lang.Double,java.lang.Double,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLjava/lang/String;JJIIILjava/lang/String;JILjava/lang/Double;Ljava/lang/Double;Ljava/lang/String;Ljava/lang/String;ILs2/g;)V"}
    1:1:long getCreateDt():0:0 -> a
    1:1:java.lang.String getDisplayName():0:0 -> b
    1:1:long getDuration():0:0 -> c
    1:1:int getHeight():0:0 -> d
    1:1:long getId():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Double getLat():0:0 -> f
    1:1:java.lang.Double getLng():0:0 -> g
    1:1:java.lang.String getMimeType():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:long getModifiedDate():0:0 -> i
    1:1:int getOrientation():0:0 -> j
    1:1:java.lang.String getPath():0:0 -> k
    1:1:java.lang.String getRelativePath():0:0 -> l
    1:1:int getType():0:0 -> m
    1:1:android.net.Uri getUri():0:0 -> n
    1:1:int getWidth():0:0 -> o
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.core.entity.AssetEntity$$ExternalSyntheticBackport0 -> h1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int com.fluttercandies.photo_manager.core.entity.AssetEntity$$InternalSyntheticBackport$4$a941528a859bf8d76c6977e32318fdd817a6acead7bd98cbf8caec1b5f7a7e59$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.entity.AssetPathEntity -> h1.c:
    java.lang.String id -> a
    java.lang.String name -> b
    int assetCount -> c
    int typeInt -> d
    boolean isAll -> e
    java.lang.Long modifiedDate -> f
    1:1:void <init>(java.lang.String,java.lang.String,int,int,boolean,java.lang.Long):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,int,int,boolean,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;IIZLjava/lang/Long;ILs2/g;)V"}
    1:1:int getAssetCount():0:0 -> a
    1:1:java.lang.String getId():0:0 -> b
    1:1:java.lang.Long getModifiedDate():0:0 -> c
    1:1:java.lang.String getName():0:0 -> d
    1:1:boolean isAll():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:void setModifiedDate(java.lang.Long):0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.core.entity.PermissionResult -> h1.d:
    int value -> e
    com.fluttercandies.photo_manager.core.entity.PermissionResult NotDetermined -> f
    com.fluttercandies.photo_manager.core.entity.PermissionResult Denied -> g
    com.fluttercandies.photo_manager.core.entity.PermissionResult Authorized -> h
    com.fluttercandies.photo_manager.core.entity.PermissionResult Limited -> i
    com.fluttercandies.photo_manager.core.entity.PermissionResult[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lh1/d;"}
    1:1:int getValue():0:0 -> b
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lh1/d;"}
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lh1/d;"}
com.fluttercandies.photo_manager.core.entity.ThumbLoadOption -> h1.e:
    int width -> a
    int height -> b
    android.graphics.Bitmap$CompressFormat format -> c
    int quality -> d
    long frame -> e
    com.fluttercandies.photo_manager.core.entity.ThumbLoadOption$Factory Factory -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,android.graphics.Bitmap$CompressFormat,int,long):0:0 -> <init>
    1:1:android.graphics.Bitmap$CompressFormat getFormat():0:0 -> a
    1:1:long getFrame():0:0 -> b
    1:1:int getHeight():0:0 -> c
    1:1:int getQuality():0:0 -> d
    1:1:int getWidth():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.core.entity.ThumbLoadOption$Factory -> h1.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:com.fluttercandies.photo_manager.core.entity.ThumbLoadOption fromMap(java.util.Map):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Lh1/e;"}
com.fluttercandies.photo_manager.core.entity.filter.CommonFilterOption -> i1.a:
    com.fluttercandies.photo_manager.core.entity.filter.FilterCond videoOption -> a
    com.fluttercandies.photo_manager.core.entity.filter.FilterCond imageOption -> b
    com.fluttercandies.photo_manager.core.entity.filter.FilterCond audioOption -> c
    com.fluttercandies.photo_manager.core.entity.filter.DateCond createDateCond -> d
    com.fluttercandies.photo_manager.core.entity.filter.DateCond updateDateCond -> e
    boolean containsPathModified -> f
    java.util.List orderByCond -> g
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:boolean getContainsPathModified():0:0 -> a
    1:1:java.lang.String makeWhere(int,java.util.ArrayList,boolean):0:0 -> b
    1:1:java.lang.String orderByCondString():0:0 -> d
    1:1:java.lang.String addDateCond(java.util.ArrayList,com.fluttercandies.photo_manager.core.entity.filter.DateCond,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Li1/c;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.String getCondFromType(int,com.fluttercandies.photo_manager.core.entity.filter.CommonFilterOption,java.util.ArrayList):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILi1/a;Ljava/util/ArrayList;)Ljava/lang/String;"}
    1:1:java.lang.String getDateCond(java.util.ArrayList,com.fluttercandies.photo_manager.core.entity.filter.CommonFilterOption):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Li1/a;)Ljava/lang/String;"}
    1:1:com.fluttercandies.photo_manager.core.utils.RequestTypeUtils getTypeUtils():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj1/g;"}
    1:1:java.lang.String sizeWhere(java.lang.Integer,com.fluttercandies.photo_manager.core.entity.filter.CommonFilterOption):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;Li1/a;)Ljava/lang/String;"}
com.fluttercandies.photo_manager.core.entity.filter.CommonFilterOption$orderByCondString$1 -> i1.a$a:
    com.fluttercandies.photo_manager.core.entity.filter.CommonFilterOption$orderByCondString$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(com.fluttercandies.photo_manager.core.entity.filter.OrderByCond):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/f;)Ljava/lang/CharSequence;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.entity.filter.CustomOption -> i1.b:
    java.util.Map map -> a
    boolean containsPathModified -> b
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:boolean getContainsPathModified():0:0 -> a
    1:1:java.lang.String makeWhere(int,java.util.ArrayList,boolean):0:0 -> b
    1:1:java.lang.String orderByCondString():0:0 -> d
com.fluttercandies.photo_manager.core.entity.filter.CustomOption$orderByCondString$1 -> i1.b$a:
    com.fluttercandies.photo_manager.core.entity.filter.CustomOption$orderByCondString$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(java.lang.Object):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.entity.filter.DateCond -> i1.c:
    long minMs -> a
    long maxMs -> b
    boolean ignore -> c
    1:1:void <init>(long,long,boolean):0:0 -> <init>
    1:1:boolean getIgnore():0:0 -> a
    1:1:long getMaxMs():0:0 -> b
    1:1:long getMinMs():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.core.entity.filter.FilterCond -> i1.d:
    boolean isShowTitle -> a
    com.fluttercandies.photo_manager.core.entity.filter.FilterCond$SizeConstraint sizeConstraint -> b
    com.fluttercandies.photo_manager.core.entity.filter.FilterCond$DurationConstraint durationConstraint -> c
    com.fluttercandies.photo_manager.core.entity.filter.FilterCond$Companion Companion -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String[] durationArgs():0:0 -> a
    1:1:java.lang.String durationCond():0:0 -> b
    1:1:com.fluttercandies.photo_manager.core.entity.filter.FilterCond$DurationConstraint getDurationConstraint():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d$b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.filter.FilterCond$SizeConstraint getSizeConstraint():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d$c;"}
    1:1:void setDurationConstraint(com.fluttercandies.photo_manager.core.entity.filter.FilterCond$DurationConstraint):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d$b;)V"}
    1:1:void setShowTitle(boolean):0:0 -> f
    1:1:void setSizeConstraint(com.fluttercandies.photo_manager.core.entity.filter.FilterCond$SizeConstraint):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d$c;)V"}
    1:1:java.lang.String[] sizeArgs():0:0 -> h
    1:1:java.lang.String sizeCond():0:0 -> i
com.fluttercandies.photo_manager.core.entity.filter.FilterCond$Companion -> i1.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.core.entity.filter.FilterCond$DurationConstraint -> i1.d$b:
    long min -> a
    long max -> b
    boolean allowNullable -> c
    void <init>() -> <init>
    1:1:boolean getAllowNullable():0:0 -> a
    1:1:long getMax():0:0 -> b
    1:1:long getMin():0:0 -> c
    1:1:void setAllowNullable(boolean):0:0 -> d
    1:1:void setMax(long):0:0 -> e
    1:1:void setMin(long):0:0 -> f
com.fluttercandies.photo_manager.core.entity.filter.FilterCond$SizeConstraint -> i1.d$c:
    int minWidth -> a
    int maxWidth -> b
    int minHeight -> c
    int maxHeight -> d
    boolean ignoreSize -> e
    void <init>() -> <init>
    1:1:boolean getIgnoreSize():0:0 -> a
    1:1:int getMaxHeight():0:0 -> b
    1:1:int getMaxWidth():0:0 -> c
    1:1:int getMinHeight():0:0 -> d
    1:1:int getMinWidth():0:0 -> e
    1:1:void setIgnoreSize(boolean):0:0 -> f
    1:1:void setMaxHeight(int):0:0 -> g
    1:1:void setMaxWidth(int):0:0 -> h
    1:1:void setMinHeight(int):0:0 -> i
    1:1:void setMinWidth(int):0:0 -> j
com.fluttercandies.photo_manager.core.entity.filter.FilterOption -> i1.e:
    void <init>() -> <init>
    boolean getContainsPathModified() -> a
    java.lang.String makeWhere(int,java.util.ArrayList,boolean) -> b
    1:1:java.lang.String makeWhere$default(com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,java.util.ArrayList,boolean,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/e;ILjava/util/ArrayList;ZILjava/lang/Object;)Ljava/lang/String;"}
    java.lang.String orderByCondString() -> d
com.fluttercandies.photo_manager.core.entity.filter.OrderByCond -> i1.f:
    java.lang.String key -> a
    boolean asc -> b
    1:1:void <init>(java.lang.String,boolean):0:0 -> <init>
    1:1:java.lang.String getOrder():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils -> j1.a:
    com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils INSTANCE -> b
    com.fluttercandies.photo_manager.core.cache.ScopedCache scopedCache -> c
    boolean shouldUseScopedCache -> d
    boolean isQStorageLegacy -> e
    java.util.concurrent.locks.ReentrantLock deleteLock -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void injectModifiedDate(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetPathEntity):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/c;)V"}
    1:1:java.util.List getAssetsPath(android.content.Context,java.util.List):0:0 -> B
    1:1:java.util.List getMainAssetPathEntity(android.content.Context,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILi1/e;)Ljava/util/List;"}
    1:1:java.lang.Long getPathModifiedDate(android.content.Context,java.lang.String):0:0 -> D
    1:1:java.lang.String[] keys():0:0 -> E
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveVideo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:java.util.List getColumnNames(android.content.Context):0:0 -> G
    1:1:java.lang.String getMediaUri(android.content.Context,long,int):0:0 -> H
    1:1:java.util.List getAssetListRange(android.content.Context,java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    1:1:androidx.exifinterface.media.ExifInterface getExif(android.content.Context,java.lang.String):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Landroidx/exifinterface/media/a;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetPathEntity getAssetPathEntityFromId(android.content.Context,java.lang.String,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;ILi1/e;)Lh1/c;"}
    1:1:int convertTypeToMediaType(int):0:0 -> L
    1:1:void cursorWithRange(android.database.Cursor,int,int,kotlin.jvm.functions.Function1):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;IILr2/l;)V"}
    1:1:java.lang.String getIdSelection():0:0 -> N
    1:1:java.lang.String getRelativePath(android.content.Context,java.lang.String):0:0 -> O
    1:1:kotlin.Pair getSomeInfo(android.content.Context,java.lang.String):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Lg2/j;"}
    1:1:java.lang.String getSortOrder(int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILi1/e;)Ljava/lang/String;"}
    1:1:java.lang.String getStringOrNull(android.database.Cursor,java.lang.String):0:0 -> R
    1:1:int getTypeFromMediaType(int):0:0 -> S
    1:1:android.net.Uri getUri(com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;Z)Landroid/net/Uri;"}
    1:1:android.net.Uri getUri$default(com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils,com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean,int,java.lang.Object):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;Lh1/b;ZILjava/lang/Object;)Landroid/net/Uri;"}
    1:1:int getMediaType(int):0:0 -> a
    1:1:java.lang.String getFilePath(android.content.Context,java.lang.String,boolean):0:0 -> b
    1:1:java.util.List getAssetPathList(android.content.Context,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILi1/e;)Ljava/util/List;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity getAssetEntity(android.content.Context,java.lang.String,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Z)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity copyToGallery(android.content.Context,java.lang.String,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lh1/b;"}
    1:1:boolean removeAllExistsAssets(android.content.Context):0:0 -> f
    1:1:void clearFileCache(android.content.Context):0:0 -> g
    1:1:android.net.Uri getAllUri():0:0 -> h
    1:1:java.util.List getAssetListPaged(android.content.Context,java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(android.content.Context,byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:int getAssetCount(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;I)I"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity moveToGallery(android.content.Context,java.lang.String,java.lang.String):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lh1/b;"}
    1:1:int getInt(android.database.Cursor,java.lang.String):0:0 -> m
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:java.lang.Void throwMsg(java.lang.String):0:0 -> o
    1:1:long getLong(android.database.Cursor,java.lang.String):0:0 -> p
    1:1:int getAssetCount(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;ILjava/lang/String;)I"}
    1:1:java.lang.Void throwIdNotFound(java.lang.Object):0:0 -> r
    1:1:java.util.List getAssetsByRange(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,int,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;III)Ljava/util/List;"}
    1:1:android.database.Cursor logQuery(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0:0 -> t
    1:1:boolean assetExists(android.content.Context,java.lang.String):0:0 -> u
    1:1:void logRowWithId(android.content.Context,java.lang.String):0:0 -> v
    1:1:byte[] getOriginBytes(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/b;Z)[B"}
    1:1:java.lang.String getString(android.database.Cursor,java.lang.String):0:0 -> x
    1:1:android.net.Uri getUri(long,int,boolean):0:0 -> y
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity toAssetEntity(android.database.Cursor,android.content.Context,boolean,boolean):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;Landroid/content/Context;ZZ)Lh1/b;"}
com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils$getAssetListPaged$1$1 -> j1.a$a:
    android.content.Context $context -> f
    java.util.ArrayList $list -> g
    1:1:void <init>(android.content.Context,java.util.ArrayList):0:0 -> <init>
    1:1:void invoke(android.database.Cursor):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils$getAssetListRange$1$1 -> j1.a$b:
    android.content.Context $context -> f
    java.util.ArrayList $list -> g
    1:1:void <init>(android.content.Context,java.util.ArrayList):0:0 -> <init>
    1:1:void invoke(android.database.Cursor):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils$removeAllExistsAssets$1$idWhere$1 -> j1.a$c:
    com.fluttercandies.photo_manager.core.utils.AndroidQDBUtils$removeAllExistsAssets$1$idWhere$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(java.lang.String):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.utils.CommonExtKt -> j1.b:
    1:1:void checkDirs(java.lang.String):0:0 -> a
com.fluttercandies.photo_manager.core.utils.ConvertUtils -> j1.c:
    com.fluttercandies.photo_manager.core.utils.ConvertUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.util.Map convertAsset(com.fluttercandies.photo_manager.core.entity.AssetEntity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;)Ljava/util/Map;"}
    1:1:java.util.Map convertAssets(java.util.List):0:0 -> b
    1:1:java.util.Map convertPaths(java.util.List):0:0 -> c
    1:1:com.fluttercandies.photo_manager.core.entity.filter.DateCond convertToDateCond(java.util.Map):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Li1/c;"}
    1:1:com.fluttercandies.photo_manager.core.entity.filter.FilterOption convertToFilterOptions(java.util.Map):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Li1/e;"}
    1:1:com.fluttercandies.photo_manager.core.entity.filter.FilterCond convertToOption(java.util.Map):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Li1/d;"}
    1:1:java.util.List convertToOrderByConds(java.util.List):0:0 -> g
    1:1:com.fluttercandies.photo_manager.core.entity.filter.FilterCond getOptionFromType(java.util.Map,com.fluttercandies.photo_manager.constant.AssetType):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Le1/a;)Li1/d;"}
com.fluttercandies.photo_manager.core.utils.DBUtils -> j1.d:
    com.fluttercandies.photo_manager.core.utils.DBUtils INSTANCE -> b
    java.lang.String[] locationKeys -> c
    java.util.concurrent.locks.ReentrantLock deleteLock -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void injectModifiedDate(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetPathEntity):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/c;)V"}
    1:1:java.util.List getAssetsPath(android.content.Context,java.util.List):0:0 -> B
    1:1:java.util.List getMainAssetPathEntity(android.content.Context,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILi1/e;)Ljava/util/List;"}
    1:1:java.lang.Long getPathModifiedDate(android.content.Context,java.lang.String):0:0 -> D
    1:1:java.lang.String[] keys():0:0 -> E
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveVideo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:java.util.List getColumnNames(android.content.Context):0:0 -> G
    1:1:java.lang.String getMediaUri(android.content.Context,long,int):0:0 -> H
    1:1:java.util.List getAssetListRange(android.content.Context,java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    1:1:androidx.exifinterface.media.ExifInterface getExif(android.content.Context,java.lang.String):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Landroidx/exifinterface/media/a;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetPathEntity getAssetPathEntityFromId(android.content.Context,java.lang.String,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;ILi1/e;)Lh1/c;"}
    1:1:int convertTypeToMediaType(int):0:0 -> L
    1:1:com.fluttercandies.photo_manager.core.utils.DBUtils$GalleryInfo getGalleryInfo(android.content.Context,java.lang.String):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Lj1/d$a;"}
    1:1:java.lang.String getIdSelection():0:0 -> N
    1:1:kotlin.Pair getSomeInfo(android.content.Context,java.lang.String):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Lg2/j;"}
    1:1:java.lang.String getSortOrder(int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILi1/e;)Ljava/lang/String;"}
    1:1:java.lang.String getStringOrNull(android.database.Cursor,java.lang.String):0:0 -> Q
    1:1:int getMediaType(int):0:0 -> a
    1:1:java.lang.String getFilePath(android.content.Context,java.lang.String,boolean):0:0 -> b
    1:1:java.util.List getAssetPathList(android.content.Context,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILi1/e;)Ljava/util/List;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity getAssetEntity(android.content.Context,java.lang.String,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Z)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity copyToGallery(android.content.Context,java.lang.String,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lh1/b;"}
    1:1:boolean removeAllExistsAssets(android.content.Context):0:0 -> f
    1:1:void clearFileCache(android.content.Context):0:0 -> g
    1:1:android.net.Uri getAllUri():0:0 -> h
    1:1:java.util.List getAssetListPaged(android.content.Context,java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(android.content.Context,byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:int getAssetCount(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;I)I"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity moveToGallery(android.content.Context,java.lang.String,java.lang.String):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lh1/b;"}
    1:1:int getInt(android.database.Cursor,java.lang.String):0:0 -> m
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:java.lang.Void throwMsg(java.lang.String):0:0 -> o
    1:1:long getLong(android.database.Cursor,java.lang.String):0:0 -> p
    1:1:int getAssetCount(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;ILjava/lang/String;)I"}
    1:1:java.lang.Void throwIdNotFound(java.lang.Object):0:0 -> r
    1:1:java.util.List getAssetsByRange(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,int,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;III)Ljava/util/List;"}
    1:1:android.database.Cursor logQuery(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0:0 -> t
    1:1:boolean assetExists(android.content.Context,java.lang.String):0:0 -> u
    1:1:void logRowWithId(android.content.Context,java.lang.String):0:0 -> v
    1:1:byte[] getOriginBytes(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/b;Z)[B"}
    1:1:java.lang.String getString(android.database.Cursor,java.lang.String):0:0 -> x
    1:1:android.net.Uri getUri(long,int,boolean):0:0 -> y
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity toAssetEntity(android.database.Cursor,android.content.Context,boolean,boolean):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;Landroid/content/Context;ZZ)Lh1/b;"}
com.fluttercandies.photo_manager.core.utils.DBUtils$GalleryInfo -> j1.d$a:
    java.lang.String path -> a
    java.lang.String galleryId -> b
    java.lang.String galleryName -> c
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:java.lang.String getGalleryName():0:0 -> a
    1:1:java.lang.String getPath():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.core.utils.DBUtils$removeAllExistsAssets$1$idWhere$1 -> j1.d$b:
    com.fluttercandies.photo_manager.core.utils.DBUtils$removeAllExistsAssets$1$idWhere$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(java.lang.String):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.utils.IDBUtils -> j1.e:
    com.fluttercandies.photo_manager.core.utils.IDBUtils$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void injectModifiedDate(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetPathEntity) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/c;)V"}
    java.util.List getAssetsPath(android.content.Context,java.util.List) -> B
    java.util.List getMainAssetPathEntity(android.content.Context,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILi1/e;)Ljava/util/List;"}
    java.lang.Long getPathModifiedDate(android.content.Context,java.lang.String) -> D
    java.lang.String[] keys() -> E
    com.fluttercandies.photo_manager.core.entity.AssetEntity saveVideo(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer) -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    java.util.List getColumnNames(android.content.Context) -> G
    java.lang.String getMediaUri(android.content.Context,long,int) -> H
    java.util.List getAssetListRange(android.content.Context,java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption) -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    androidx.exifinterface.media.ExifInterface getExif(android.content.Context,java.lang.String) -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;)Landroidx/exifinterface/media/a;"}
    com.fluttercandies.photo_manager.core.entity.AssetPathEntity getAssetPathEntityFromId(android.content.Context,java.lang.String,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption) -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;ILi1/e;)Lh1/c;"}
    int getMediaType(int) -> a
    java.lang.String getFilePath(android.content.Context,java.lang.String,boolean) -> b
    java.util.List getAssetPathList(android.content.Context,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILi1/e;)Ljava/util/List;"}
    com.fluttercandies.photo_manager.core.entity.AssetEntity getAssetEntity(android.content.Context,java.lang.String,boolean) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Z)Lh1/b;"}
    com.fluttercandies.photo_manager.core.entity.AssetEntity copyToGallery(android.content.Context,java.lang.String,java.lang.String) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lh1/b;"}
    boolean removeAllExistsAssets(android.content.Context) -> f
    void clearFileCache(android.content.Context) -> g
    android.net.Uri getAllUri() -> h
    java.util.List getAssetListPaged(android.content.Context,java.lang.String,int,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;IIILi1/e;)Ljava/util/List;"}
    com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(android.content.Context,byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    int getAssetCount(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;I)I"}
    com.fluttercandies.photo_manager.core.entity.AssetEntity moveToGallery(android.content.Context,java.lang.String,java.lang.String) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lh1/b;"}
    int getInt(android.database.Cursor,java.lang.String) -> m
    com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    java.lang.Void throwMsg(java.lang.String) -> o
    long getLong(android.database.Cursor,java.lang.String) -> p
    int getAssetCount(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,java.lang.String) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;ILjava/lang/String;)I"}
    java.lang.Void throwIdNotFound(java.lang.Object) -> r
    java.util.List getAssetsByRange(android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,int,int) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li1/e;III)Ljava/util/List;"}
    android.database.Cursor logQuery(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> t
    boolean assetExists(android.content.Context,java.lang.String) -> u
    void logRowWithId(android.content.Context,java.lang.String) -> v
    byte[] getOriginBytes(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetEntity,boolean) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/b;Z)[B"}
    java.lang.String getString(android.database.Cursor,java.lang.String) -> x
    android.net.Uri getUri(long,int,boolean) -> y
    com.fluttercandies.photo_manager.core.entity.AssetEntity toAssetEntity(android.database.Cursor,android.content.Context,boolean,boolean) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;Landroid/content/Context;ZZ)Lh1/b;"}
com.fluttercandies.photo_manager.core.utils.IDBUtils$Companion -> j1.e$a:
    com.fluttercandies.photo_manager.core.utils.IDBUtils$Companion $$INSTANCE -> a
    boolean isAboveAndroidQ -> b
    java.util.List storeImageKeys -> c
    java.util.List storeVideoKeys -> d
    java.lang.String[] typeKeys -> e
    java.lang.String[] storeBucketKeys -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.net.Uri getAllUri():0:0 -> a
    1:1:java.lang.String[] getStoreBucketKeys():0:0 -> b
    1:1:java.util.List getStoreImageKeys():0:0 -> c
    1:1:java.util.List getStoreVideoKeys():0:0 -> d
    1:1:java.lang.String[] getTypeKeys():0:0 -> e
    1:1:boolean isAboveAndroidQ():0:0 -> f
com.fluttercandies.photo_manager.core.utils.IDBUtils$DefaultImpls -> j1.e$b:
    1:1:void logQuery$log(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,kotlin.jvm.functions.Function1,android.database.Cursor):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lr2/l;Landroid/database/Cursor;)V"}
    1:1:void logRowWithId(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.lang.String):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/lang/String;)V"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveImage(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;[BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:void saveImage$refreshStream(kotlin.jvm.internal.Ref$ObjectRef,byte[]):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;[B)V"}
    1:1:void saveImage$refreshStream$4(kotlin.jvm.internal.Ref$ObjectRef,java.io.File):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;Ljava/io/File;)V"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity saveVideo(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lh1/b;"}
    1:1:void saveVideo$refreshStream$7(kotlin.jvm.internal.Ref$ObjectRef,java.io.File):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;Ljava/io/File;)V"}
    1:1:java.lang.Void throwIdNotFound(com.fluttercandies.photo_manager.core.utils.IDBUtils,java.lang.Object):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Ljava/lang/Object;)Ljava/lang/Void;"}
    1:1:java.lang.Void throwMsg(com.fluttercandies.photo_manager.core.utils.IDBUtils,java.lang.String):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Ljava/lang/String;)Ljava/lang/Void;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity toAssetEntity(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.database.Cursor,android.content.Context,boolean,boolean):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/database/Cursor;Landroid/content/Context;ZZ)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity toAssetEntity$default(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.database.Cursor,android.content.Context,boolean,boolean,int,java.lang.Object):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/database/Cursor;Landroid/content/Context;ZZILjava/lang/Object;)Lh1/b;"}
    1:1:boolean assetExists(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/lang/String;)Z"}
    1:1:void clearFileCache(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;)V"}
    1:1:int convertTypeToMediaType(com.fluttercandies.photo_manager.core.utils.IDBUtils,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;I)I"}
    1:1:android.net.Uri getAllUri(com.fluttercandies.photo_manager.core.utils.IDBUtils):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;)Landroid/net/Uri;"}
    1:1:int getAssetCount(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Li1/e;I)I"}
    1:1:int getAssetCount(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Li1/e;ILjava/lang/String;)I"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity getAssetEntity$default(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.lang.String,boolean,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/lang/String;ZILjava/lang/Object;)Lh1/b;"}
    1:1:java.util.List getAssetsByRange(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,com.fluttercandies.photo_manager.core.entity.filter.FilterOption,int,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Li1/e;III)Ljava/util/List;"}
    1:1:java.util.List getAssetsPath(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/util/List;)Ljava/util/List;"}
    1:1:java.util.List getColumnNames(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;)Ljava/util/List;"}
    1:1:java.lang.String getIdSelection(com.fluttercandies.photo_manager.core.utils.IDBUtils):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;)Ljava/lang/String;"}
    1:1:int getInt(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.database.Cursor,java.lang.String):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/database/Cursor;Ljava/lang/String;)I"}
    1:1:long getLong(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.database.Cursor,java.lang.String):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/database/Cursor;Ljava/lang/String;)J"}
    1:1:int getMediaType(com.fluttercandies.photo_manager.core.utils.IDBUtils,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;I)I"}
    1:1:java.lang.String getMediaUri(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,long,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;JI)Ljava/lang/String;"}
    1:1:java.lang.Long getPathModifiedDate(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.lang.String):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/lang/String;)Ljava/lang/Long;"}
    1:1:java.lang.String getSortOrder(com.fluttercandies.photo_manager.core.utils.IDBUtils,int,int,com.fluttercandies.photo_manager.core.entity.filter.FilterOption):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;IILi1/e;)Ljava/lang/String;"}
    1:1:java.lang.String getString(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.database.Cursor,java.lang.String):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/database/Cursor;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.String getStringOrNull(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.database.Cursor,java.lang.String):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/database/Cursor;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int getTypeFromMediaType(com.fluttercandies.photo_manager.core.utils.IDBUtils,int):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;I)I"}
    1:1:android.net.Uri getUri(com.fluttercandies.photo_manager.core.utils.IDBUtils,long,int,boolean):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;JIZ)Landroid/net/Uri;"}
    1:1:android.net.Uri getUri$default(com.fluttercandies.photo_manager.core.utils.IDBUtils,long,int,boolean,int,java.lang.Object):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;JIZILjava/lang/Object;)Landroid/net/Uri;"}
    1:1:void injectModifiedDate(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetPathEntity):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Lh1/c;)V"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity insertUri(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.io.InputStream,android.net.Uri,android.content.ContentValues,boolean):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/io/InputStream;Landroid/net/Uri;Landroid/content/ContentValues;Z)Lh1/b;"}
    1:1:com.fluttercandies.photo_manager.core.entity.AssetEntity insertUri$default(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.Context,java.io.InputStream,android.net.Uri,android.content.ContentValues,boolean,int,java.lang.Object):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/Context;Ljava/io/InputStream;Landroid/net/Uri;Landroid/content/ContentValues;ZILjava/lang/Object;)Lh1/b;"}
    1:1:android.database.Cursor logQuery(com.fluttercandies.photo_manager.core.utils.IDBUtils,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/e;Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;"}
com.fluttercandies.photo_manager.core.utils.IDBUtils$getAssetsPath$idSelection$1 -> j1.e$b$a:
    com.fluttercandies.photo_manager.core.utils.IDBUtils$getAssetsPath$idSelection$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(java.lang.String):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.utils.IDBUtils$logQuery$1 -> j1.e$b$b:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Object):0:0 -> k
com.fluttercandies.photo_manager.core.utils.IDBUtils$logQuery$2 -> j1.e$b$c:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Object):0:0 -> k
com.fluttercandies.photo_manager.core.utils.MediaStoreUtils -> j1.f:
    com.fluttercandies.photo_manager.core.utils.MediaStoreUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int convertTypeToMediaType(int):0:0 -> a
    1:1:android.net.Uri getInsertUri(int):0:0 -> b
    1:1:android.net.Uri getUri(long,int):0:0 -> c
com.fluttercandies.photo_manager.core.utils.RequestTypeUtils -> j1.g:
    com.fluttercandies.photo_manager.core.utils.RequestTypeUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean checkType(int,int):0:0 -> a
    1:1:boolean containsAudio(int):0:0 -> b
    1:1:boolean containsImage(int):0:0 -> c
    1:1:boolean containsVideo(int):0:0 -> d
    1:1:java.lang.String toWhere(int):0:0 -> e
com.fluttercandies.photo_manager.core.utils.RequestTypeUtils$toWhere$where$1 -> j1.g$a:
    com.fluttercandies.photo_manager.core.utils.RequestTypeUtils$toWhere$where$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(int):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
com.fluttercandies.photo_manager.core.utils.VideoUtils -> j1.i:
    com.fluttercandies.photo_manager.core.utils.VideoUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean $r8$lambda$0oqojvLds6RTfv6-4KelGI6WLnM(android.media.MediaPlayer,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:com.fluttercandies.photo_manager.core.utils.VideoUtils$VideoInfo getPropertiesUseMediaPlayer(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj1/i$a;"}
    1:1:boolean getPropertiesUseMediaPlayer$lambda$0(android.media.MediaPlayer,int,int):0:0 -> c
com.fluttercandies.photo_manager.core.utils.VideoUtils$$ExternalSyntheticLambda0 -> j1.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.fluttercandies.photo_manager.core.utils.VideoUtils$$InternalSyntheticLambda$4$33e8cd4c5a4b4d3d6f8e98b49cd387b13416d8ac759060dd32bbf5ecd5e02fe3$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.fluttercandies.photo_manager.core.utils.VideoUtils$$InternalSyntheticLambda$4$33e8cd4c5a4b4d3d6f8e98b49cd387b13416d8ac759060dd32bbf5ecd5e02fe3$0.onError(android.media.MediaPlayer,int,int):0:0 -> onError
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.core.utils.VideoUtils$VideoInfo -> j1.i$a:
    java.lang.Integer width -> a
    java.lang.Integer height -> b
    java.lang.Integer duration -> c
    1:1:void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer):0:0 -> <init>
    1:1:java.lang.Integer getDuration():0:0 -> a
    1:1:java.lang.Integer getHeight():0:0 -> b
    1:1:java.lang.Integer getWidth():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.fluttercandies.photo_manager.permission.PermissionDelegate -> k1.c:
    com.fluttercandies.photo_manager.util.ResultHandler resultHandler -> a
    com.fluttercandies.photo_manager.permission.PermissionDelegate$Companion Companion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(android.app.Application,int,boolean) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Application;IZ)Lh1/d;"}
    1:1:com.fluttercandies.photo_manager.util.ResultHandler getResultHandler():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ln1/e;"}
    1:1:java.lang.String getTag():0:0 -> c
    1:1:void handlePermissionResult(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,java.lang.String[],int[],java.util.List,java.util.List,java.util.List,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;[Ljava/lang/String;[ILjava/util/List;Ljava/util/List;Ljava/util/List;I)V"}
    1:1:boolean haveAnyPermissionForUser(android.content.Context,java.lang.String[]):0:0 -> e
    boolean haveMediaLocation(android.content.Context) -> f
    1:1:boolean havePermission(android.content.Context,java.lang.String):0:0 -> g
    1:1:boolean havePermissionForUser(android.content.Context,java.lang.String):0:0 -> h
    1:1:boolean havePermissionInManifest(android.content.Context,java.lang.String):0:0 -> i
    1:1:boolean havePermissions(android.content.Context,java.lang.String[]):0:0 -> j
    1:1:boolean isHandlePermissionResult():0:0 -> k
    1:1:void presentLimited(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.app.Application,int,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/app/Application;ILn1/e;)V"}
    void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,int,boolean) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;IZ)V"}
    1:1:void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,java.util.List,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Ljava/util/List;I)V"}
    1:1:void requestPermission$default(com.fluttercandies.photo_manager.permission.PermissionDelegate,com.fluttercandies.photo_manager.permission.PermissionsUtils,java.util.List,int,int,java.lang.Object):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/c;Lk1/e;Ljava/util/List;IILjava/lang/Object;)V"}
    1:1:void setResultHandler(com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;)V"}
com.fluttercandies.photo_manager.permission.PermissionDelegate$$ExternalSyntheticApiModelOutline0 -> k1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageManager$PackageInfoFlags com.fluttercandies.photo_manager.permission.PermissionDelegate$$InternalSyntheticApiModelOutline$2$ece367149bbce49aee7d72e36025c5611cb31d5251820a7b38d6f789e011d9dc$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.permission.PermissionDelegate$$ExternalSyntheticApiModelOutline1 -> k1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageInfo com.fluttercandies.photo_manager.permission.PermissionDelegate$$InternalSyntheticApiModelOutline$2$ece367149bbce49aee7d72e36025c5611cb31d5251820a7b38d6f789e011d9dc$1.m(android.content.pm.PackageManager,java.lang.String,android.content.pm.PackageManager$PackageInfoFlags):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.permission.PermissionDelegate$Companion -> k1.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:com.fluttercandies.photo_manager.permission.PermissionDelegate create():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/c;"}
com.fluttercandies.photo_manager.permission.PermissionsListener -> k1.d:
    void onGranted(java.util.List) -> a
    void onDenied(java.util.List,java.util.List,java.util.List) -> b
com.fluttercandies.photo_manager.permission.PermissionsUtils -> k1.e:
    android.app.Activity mActivity -> a
    android.app.Application context -> b
    boolean isRequesting -> c
    com.fluttercandies.photo_manager.permission.PermissionDelegate delegate -> d
    java.util.List needToRequestPermissionsList -> e
    java.util.List deniedPermissionsList -> f
    java.util.List grantedPermissionsList -> g
    com.fluttercandies.photo_manager.permission.PermissionsListener permissionsListener -> h
    1:1:void <init>():0:0 -> <init>
    1:1:com.fluttercandies.photo_manager.permission.PermissionsUtils dealResult(int,java.lang.String[],int[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Ljava/lang/String;[I)Lk1/e;"}
    1:1:android.app.Activity getActivity():0:0 -> b
    1:1:void getAppDetailSettingIntent(android.content.Context):0:0 -> c
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Lh1/d;"}
    1:1:com.fluttercandies.photo_manager.permission.PermissionsListener getPermissionsListener():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/d;"}
    1:1:boolean haveLocationPermission(android.content.Context):0:0 -> f
    1:1:void presentLimited(int,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILn1/e;)V"}
    1:1:com.fluttercandies.photo_manager.permission.PermissionsUtils requestPermission(android.content.Context,int,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;IZ)Lk1/e;"}
    1:1:void resetStatus():0:0 -> i
    1:1:com.fluttercandies.photo_manager.permission.PermissionsUtils setListener(com.fluttercandies.photo_manager.permission.PermissionsListener):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/d;)Lk1/e;"}
    1:1:void setNeedToRequestPermissionsList(java.util.List):0:0 -> k
    1:1:void setPermissionsListener(com.fluttercandies.photo_manager.permission.PermissionsListener):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/d;)V"}
    1:1:com.fluttercandies.photo_manager.permission.PermissionsUtils withActivity(android.app.Activity):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lk1/e;"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate19 -> l1.a:
    void <init>() -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(android.app.Application,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Application;IZ)Lh1/d;"}
    1:1:boolean haveMediaLocation(android.content.Context):0:0 -> f
    1:1:void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;IZ)V"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate23 -> l1.b:
    com.fluttercandies.photo_manager.permission.impl.PermissionDelegate23$Companion Companion -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(android.app.Application,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Application;IZ)Lh1/d;"}
    1:1:boolean haveMediaLocation(android.content.Context):0:0 -> f
    1:1:void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;IZ)V"}
    1:1:boolean havePermissions(android.content.Context,int):0:0 -> q
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate23$Companion -> l1.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate29 -> l1.c:
    com.fluttercandies.photo_manager.permission.impl.PermissionDelegate29$Companion Companion -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(android.app.Application,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Application;IZ)Lh1/d;"}
    1:1:boolean haveMediaLocation(android.content.Context):0:0 -> f
    1:1:void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;IZ)V"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate29$Companion -> l1.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate33 -> l1.d:
    com.fluttercandies.photo_manager.permission.impl.PermissionDelegate33$Companion Companion -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(android.app.Application,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Application;IZ)Lh1/d;"}
    1:1:boolean haveMediaLocation(android.content.Context):0:0 -> f
    1:1:void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;IZ)V"}
    1:1:boolean havePermissions(android.content.Context,int):0:0 -> q
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate33$Companion -> l1.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate34 -> l1.e:
    com.fluttercandies.photo_manager.permission.impl.PermissionDelegate34$Companion Companion -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.fluttercandies.photo_manager.core.entity.PermissionResult getAuthValue(android.app.Application,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Application;IZ)Lh1/d;"}
    1:1:void handlePermissionResult(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,java.lang.String[],int[],java.util.List,java.util.List,java.util.List,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;[Ljava/lang/String;[ILjava/util/List;Ljava/util/List;Ljava/util/List;I)V"}
    1:1:boolean haveMediaLocation(android.content.Context):0:0 -> f
    1:1:boolean isHandlePermissionResult():0:0 -> k
    1:1:void presentLimited(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.app.Application,int,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/app/Application;ILn1/e;)V"}
    1:1:void requestPermission(com.fluttercandies.photo_manager.permission.PermissionsUtils,android.content.Context,int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;Landroid/content/Context;IZ)V"}
    1:1:void getAuthValue$changeResult(kotlin.jvm.internal.Ref$ObjectRef,com.fluttercandies.photo_manager.core.entity.PermissionResult):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;Lh1/d;)V"}
    1:1:boolean havePermissions(android.content.Context,int):0:0 -> r
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate34$Companion -> l1.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.fluttercandies.photo_manager.permission.impl.PermissionDelegate34$WhenMappings -> l1.e$b:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.fluttercandies.photo_manager.thumb.ThumbnailUtil -> m1.a:
    com.fluttercandies.photo_manager.thumb.ThumbnailUtil INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void clearCache(android.content.Context):0:0 -> a
    1:1:void getThumbnail(android.content.Context,com.fluttercandies.photo_manager.core.entity.AssetEntity,int,int,android.graphics.Bitmap$CompressFormat,int,long,com.fluttercandies.photo_manager.util.ResultHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lh1/b;IILandroid/graphics/Bitmap$CompressFormat;IJLn1/e;)V"}
    1:1:com.bumptech.glide.request.FutureTarget requestCacheThumb(android.content.Context,java.lang.String,com.fluttercandies.photo_manager.core.entity.ThumbLoadOption):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lh1/e;)Lx0/c;"}
com.fluttercandies.photo_manager.util.LogUtils -> n1.a:
    com.fluttercandies.photo_manager.util.LogUtils INSTANCE -> a
    boolean isLog -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void debug(java.lang.Object):0:0 -> a
    1:1:void error(java.lang.Object):0:0 -> b
    1:1:void error(java.lang.Object,java.lang.Throwable):0:0 -> c
    1:1:void info(java.lang.Object):0:0 -> d
    1:1:boolean isLog():0:0 -> e
    1:1:void logCursor(android.database.Cursor,java.lang.String):0:0 -> f
    1:1:void setLog(boolean):0:0 -> g
com.fluttercandies.photo_manager.util.ResultHandler -> n1.e:
    io.flutter.plugin.common.MethodChannel$Result result -> a
    io.flutter.plugin.common.MethodCall call -> b
    boolean isReplied -> c
    com.fluttercandies.photo_manager.util.ResultHandler$Companion Companion -> d
    android.os.Handler handler -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.plugin.common.MethodChannel$Result,io.flutter.plugin.common.MethodCall):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;La2/i;)V"}
    1:1:void $r8$lambda$-viJAA1ICfp9aUtuK5fWz1HD-G0(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Ljava/lang/Object;)V"}
    1:1:void $r8$lambda$QQtvmi9KxpvS-iy2whtCnpo9eaY(io.flutter.plugin.common.MethodChannel$Result):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;)V"}
    1:1:void $r8$lambda$eAqeP9NPKjNS4wgyUlNKQ4U64nk(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"}
    1:1:io.flutter.plugin.common.MethodCall getCall():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/i;"}
    1:1:void notImplemented():0:0 -> e
    1:1:void notImplemented$lambda$2(io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;)V"}
    1:1:void reply(java.lang.Object):0:0 -> g
    1:1:void reply$lambda$0(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Ljava/lang/Object;)V"}
    1:1:void replyError(java.lang.String,java.lang.String,java.lang.Object):0:0 -> i
    1:1:void replyError$default(com.fluttercandies.photo_manager.util.ResultHandler,java.lang.String,java.lang.String,java.lang.Object,int,java.lang.Object):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/e;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;ILjava/lang/Object;)V"}
    1:1:void replyError$lambda$1(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String,java.lang.Object):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"}
com.fluttercandies.photo_manager.util.ResultHandler$$ExternalSyntheticLambda0 -> n1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$2$43633f133cef2166d7c525686a138466d1cf9c2a4854f89c733281a56e31dcf6$0.f$0 -> e
    java.lang.Object com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$2$43633f133cef2166d7c525686a138466d1cf9c2a4854f89c733281a56e31dcf6$0.f$1 -> f
    1:1:void com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$2$43633f133cef2166d7c525686a138466d1cf9c2a4854f89c733281a56e31dcf6$0.<init>(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Ljava/lang/Object;)V"}
    1:1:void com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$2$43633f133cef2166d7c525686a138466d1cf9c2a4854f89c733281a56e31dcf6$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.util.ResultHandler$$ExternalSyntheticLambda1 -> n1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$98372af8d03c43712414b50b718f4ad00fb825e7b82825480386b939805e831b$0.f$0 -> e
    1:1:void com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$98372af8d03c43712414b50b718f4ad00fb825e7b82825480386b939805e831b$0.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;)V"}
    1:1:void com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$98372af8d03c43712414b50b718f4ad00fb825e7b82825480386b939805e831b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.util.ResultHandler$$ExternalSyntheticLambda2 -> n1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$af1eaac1be34efcb9b461e02d06e4157cce554b4e0e364af2f61ebcbecb42ed9$0.f$0 -> e
    java.lang.String com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$af1eaac1be34efcb9b461e02d06e4157cce554b4e0e364af2f61ebcbecb42ed9$0.f$1 -> f
    java.lang.String com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$af1eaac1be34efcb9b461e02d06e4157cce554b4e0e364af2f61ebcbecb42ed9$0.f$2 -> g
    java.lang.Object com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$af1eaac1be34efcb9b461e02d06e4157cce554b4e0e364af2f61ebcbecb42ed9$0.f$3 -> h
    1:1:void com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$af1eaac1be34efcb9b461e02d06e4157cce554b4e0e364af2f61ebcbecb42ed9$0.<init>(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V"}
    1:1:void com.fluttercandies.photo_manager.util.ResultHandler$$InternalSyntheticLambda$3$af1eaac1be34efcb9b461e02d06e4157cce554b4e0e364af2f61ebcbecb42ed9$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.fluttercandies.photo_manager.util.ResultHandler$Companion -> n1.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
com.tekartik.sqflite.Constant -> o1.a:
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.tekartik.sqflite.Database -> o1.k:
    boolean singleInstance -> a
    java.lang.String path -> b
    int id -> c
    int logLevel -> d
    android.content.Context context -> e
    java.util.List noTransactionOperationQueue -> f
    java.util.Map cursors -> g
    com.tekartik.sqflite.DatabaseWorkerPool databaseWorkerPool -> h
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> i
    int transactionDepth -> j
    int lastTransactionId -> k
    java.lang.Integer currentTransactionId -> l
    int lastCursorId -> m
    java.lang.Boolean walGloballyEnabled -> n
    1:1:void <init>(android.content.Context,java.lang.String,int,boolean,int):0:0 -> <init>
    1:1:java.lang.String getThreadLogPrefix():0:0 -> A
    1:1:java.lang.String getThreadLogTag():0:0 -> B
    1:1:android.database.sqlite.SQLiteDatabase getWritableDatabase():0:0 -> C
    1:1:void handleException(java.lang.Exception,com.tekartik.sqflite.operation.Operation):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Exception;Lq1/e;)V"}
    1:1:void insert(com.tekartik.sqflite.operation.Operation):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:boolean isInTransaction():0:0 -> F
    1:1:android.database.Cursor lambda$doQuery$1(com.tekartik.sqflite.SqlCommand,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/f0;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"}
    1:1:void lambda$execute$3(com.tekartik.sqflite.operation.Operation):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void lambda$insert$4(com.tekartik.sqflite.operation.Operation):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void lambda$query$0(com.tekartik.sqflite.operation.Operation):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void lambda$queryCursorNext$2(com.tekartik.sqflite.operation.Operation):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void lambda$update$5(com.tekartik.sqflite.operation.Operation):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void open():0:0 -> M
    1:1:void openReadOnly():0:0 -> N
    1:1:void query(com.tekartik.sqflite.operation.Operation):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void queryCursorNext(com.tekartik.sqflite.operation.Operation):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void runQueuedOperations():0:0 -> Q
    1:1:void update(com.tekartik.sqflite.operation.Operation):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:void wrapSqlOperationHandler(com.tekartik.sqflite.operation.Operation,java.lang.Runnable):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;Ljava/lang/Runnable;)V"}
    1:1:void $r8$lambda$3l1vrF4ATPljyhzrB8DCJJboDt0(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void $r8$lambda$C2ZyDElvpG2ZbfNaJOoNpiLXm-A(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void $r8$lambda$c-xOdAERGi3OjkUvz4iPUkE1E0I(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void $r8$lambda$c19sAoF16bTKNTWY6fyH01qagS8(com.tekartik.sqflite.Database):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;)V"}
    1:1:android.database.Cursor $r8$lambda$nsk1BuCblDs6WIqvaydLrYeFGO8(com.tekartik.sqflite.SqlCommand,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/f0;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"}
    1:1:void $r8$lambda$qYqp-SfAK3rTsQyww7jv1-RJLVs(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void $r8$lambda$wUNpYdaLJZoLAtH-Ee9EaHbrz6Q(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void batch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:boolean checkMetaBoolean(android.content.Context,java.lang.String,boolean):0:0 -> i
    1:1:boolean checkWalEnabled(android.content.Context):0:0 -> j
    1:1:void close():0:0 -> k
    1:1:void closeCursor(int):0:0 -> l
    1:1:void closeCursor(com.tekartik.sqflite.SqfliteCursor):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/v;)V"}
    1:1:java.util.Map cursorToResults(android.database.Cursor,java.lang.Integer):0:0 -> n
    1:1:void deleteDatabase(java.lang.String):0:0 -> o
    1:1:boolean doExecute(com.tekartik.sqflite.operation.Operation):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Z"}
    1:1:boolean doInsert(com.tekartik.sqflite.operation.Operation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Z"}
    1:1:boolean doQuery(com.tekartik.sqflite.operation.Operation):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Z"}
    1:1:boolean doQueryCursorNext(com.tekartik.sqflite.operation.Operation):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Z"}
    1:1:boolean doUpdate(com.tekartik.sqflite.operation.Operation):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Z"}
    1:1:void enterOrLeaveInTransaction(java.lang.Boolean):0:0 -> u
    1:1:void execute(com.tekartik.sqflite.operation.Operation):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)V"}
    1:1:boolean executeOrError(com.tekartik.sqflite.operation.Operation):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Z"}
    1:1:boolean existsDatabase(java.lang.String):0:0 -> x
    1:1:android.content.pm.ApplicationInfo getApplicationInfoWithMeta32(android.content.Context,java.lang.String,int):0:0 -> y
    1:1:android.database.sqlite.SQLiteDatabase getReadableDatabase():0:0 -> z
com.tekartik.sqflite.Database$$ExternalSyntheticApiModelOutline0 -> o1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageManager$ApplicationInfoFlags com.tekartik.sqflite.Database$$InternalSyntheticApiModelOutline$3$298bdab17e9a1021e44cc7030088c2d7e4769229a30366dcfc46d77ff3d6848e$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticApiModelOutline1 -> o1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.ApplicationInfo com.tekartik.sqflite.Database$$InternalSyntheticApiModelOutline$3$298bdab17e9a1021e44cc7030088c2d7e4769229a30366dcfc46d77ff3d6848e$1.m(android.content.pm.PackageManager,java.lang.String,android.content.pm.PackageManager$ApplicationInfoFlags):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda2 -> o1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$05fb06a265a417b79ba7a8c31bbc38fdda8de75b2ab307ced0ddf56d1a720ddf$0.f$0 -> e
    com.tekartik.sqflite.operation.Operation com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$05fb06a265a417b79ba7a8c31bbc38fdda8de75b2ab307ced0ddf56d1a720ddf$0.f$1 -> f
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$05fb06a265a417b79ba7a8c31bbc38fdda8de75b2ab307ced0ddf56d1a720ddf$0.<init>(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$05fb06a265a417b79ba7a8c31bbc38fdda8de75b2ab307ced0ddf56d1a720ddf$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda3 -> o1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$0ae6f6b8e39afeef66ab44abd7883b3f318374984f0d98a0c41303ec3346ad92$0.f$0 -> e
    com.tekartik.sqflite.operation.Operation com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$0ae6f6b8e39afeef66ab44abd7883b3f318374984f0d98a0c41303ec3346ad92$0.f$1 -> f
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$0ae6f6b8e39afeef66ab44abd7883b3f318374984f0d98a0c41303ec3346ad92$0.<init>(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$0ae6f6b8e39afeef66ab44abd7883b3f318374984f0d98a0c41303ec3346ad92$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda4 -> o1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$7d2214b45df0ec5b9dd9aed1abd0e617f74e35e4e3d14ef2f89db85a56bb3b99$0.f$0 -> e
    com.tekartik.sqflite.operation.Operation com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$7d2214b45df0ec5b9dd9aed1abd0e617f74e35e4e3d14ef2f89db85a56bb3b99$0.f$1 -> f
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$7d2214b45df0ec5b9dd9aed1abd0e617f74e35e4e3d14ef2f89db85a56bb3b99$0.<init>(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$7d2214b45df0ec5b9dd9aed1abd0e617f74e35e4e3d14ef2f89db85a56bb3b99$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda5 -> o1.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$814b6c5e1cfafe3ca553bd23e9065115d0f5f1b34ba20b454430af8cf6cc1c2c$0.f$0 -> e
    com.tekartik.sqflite.operation.Operation com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$814b6c5e1cfafe3ca553bd23e9065115d0f5f1b34ba20b454430af8cf6cc1c2c$0.f$1 -> f
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$814b6c5e1cfafe3ca553bd23e9065115d0f5f1b34ba20b454430af8cf6cc1c2c$0.<init>(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$814b6c5e1cfafe3ca553bd23e9065115d0f5f1b34ba20b454430af8cf6cc1c2c$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda6 -> o1.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.SqlCommand com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$e7609f9ccb065c27c69973a9364ba34a1e5f8e31b60f22ddd2075a7585b7fbe9$0.f$0 -> a
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$e7609f9ccb065c27c69973a9364ba34a1e5f8e31b60f22ddd2075a7585b7fbe9$0.<init>(com.tekartik.sqflite.SqlCommand):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/f0;)V"}
    1:1:android.database.Cursor com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$e7609f9ccb065c27c69973a9364ba34a1e5f8e31b60f22ddd2075a7585b7fbe9$0.newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> newCursor
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda7 -> o1.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$ebf70aaa4c454b1b2716ae89b4dfc6d842ea83149a91fa70cc732a6a859933bf$0.f$0 -> e
    com.tekartik.sqflite.operation.Operation com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$ebf70aaa4c454b1b2716ae89b4dfc6d842ea83149a91fa70cc732a6a859933bf$0.f$1 -> f
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$ebf70aaa4c454b1b2716ae89b4dfc6d842ea83149a91fa70cc732a6a859933bf$0.<init>(com.tekartik.sqflite.Database,com.tekartik.sqflite.operation.Operation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Lq1/e;)V"}
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$3$ebf70aaa4c454b1b2716ae89b4dfc6d842ea83149a91fa70cc732a6a859933bf$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$$ExternalSyntheticLambda8 -> o1.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.Database$$InternalSyntheticLambda$4$add5a0605a9ce17bcb5b4b621eead803725a1464f55764fa0b09d31fb26d1862$0.f$0 -> e
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$4$add5a0605a9ce17bcb5b4b621eead803725a1464f55764fa0b09d31fb26d1862$0.<init>(com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;)V"}
    1:1:void com.tekartik.sqflite.Database$$InternalSyntheticLambda$4$add5a0605a9ce17bcb5b4b621eead803725a1464f55764fa0b09d31fb26d1862$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.Database$1 -> o1.k$a:
    com.tekartik.sqflite.Database this$0 -> a
    1:1:void <init>(com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;)V"}
    1:1:void onCorruption(android.database.sqlite.SQLiteDatabase):0:0 -> onCorruption
com.tekartik.sqflite.DatabaseDelegate -> o1.l:
    int getDatabaseId() -> a
    boolean isInTransaction() -> b
com.tekartik.sqflite.DatabaseTask -> o1.m:
    com.tekartik.sqflite.DatabaseDelegate database -> a
    java.lang.Runnable runnable -> b
    1:1:void <init>(com.tekartik.sqflite.DatabaseDelegate,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/l;Ljava/lang/Runnable;)V"}
    1:1:java.lang.Integer getDatabaseId():0:0 -> a
    1:1:boolean isInTransaction():0:0 -> b
com.tekartik.sqflite.DatabaseWorker -> o1.o:
    java.lang.String name -> a
    int priority -> b
    android.os.HandlerThread handlerThread -> c
    android.os.Handler handler -> d
    java.lang.Runnable onIdle -> e
    com.tekartik.sqflite.DatabaseTask lastTask -> f
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:void $r8$lambda$Orw0KIcShVTS3jXmBG6ZnLaKjHI(com.tekartik.sqflite.DatabaseWorker,com.tekartik.sqflite.DatabaseTask):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/o;Lo1/m;)V"}
    1:1:boolean isLastTaskInTransaction():0:0 -> b
    1:1:void lambda$postTask$0(com.tekartik.sqflite.DatabaseTask):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/m;)V"}
    1:1:java.lang.Integer lastTaskDatabaseId():0:0 -> d
    1:1:void postTask(com.tekartik.sqflite.DatabaseTask):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/m;)V"}
    1:1:void quit():0:0 -> f
    1:1:void start(java.lang.Runnable):0:0 -> g
    1:1:void work(com.tekartik.sqflite.DatabaseTask):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/m;)V"}
com.tekartik.sqflite.DatabaseWorker$$ExternalSyntheticLambda0 -> o1.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.DatabaseWorker com.tekartik.sqflite.DatabaseWorker$$InternalSyntheticLambda$5$a75b5991f07f0da18a7cee277bf0c32842ea3df4423c530d94bfbb613b7ae2d2$0.f$0 -> e
    com.tekartik.sqflite.DatabaseTask com.tekartik.sqflite.DatabaseWorker$$InternalSyntheticLambda$5$a75b5991f07f0da18a7cee277bf0c32842ea3df4423c530d94bfbb613b7ae2d2$0.f$1 -> f
    1:1:void com.tekartik.sqflite.DatabaseWorker$$InternalSyntheticLambda$5$a75b5991f07f0da18a7cee277bf0c32842ea3df4423c530d94bfbb613b7ae2d2$0.<init>(com.tekartik.sqflite.DatabaseWorker,com.tekartik.sqflite.DatabaseTask):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/o;Lo1/m;)V"}
    1:1:void com.tekartik.sqflite.DatabaseWorker$$InternalSyntheticLambda$5$a75b5991f07f0da18a7cee277bf0c32842ea3df4423c530d94bfbb613b7ae2d2$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.DatabaseWorkerPool -> o1.q:
    void post(com.tekartik.sqflite.DatabaseTask) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/m;)V"}
    void post(com.tekartik.sqflite.Database,java.lang.Runnable) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Ljava/lang/Runnable;)V"}
    void quit() -> c
    void start() -> start
com.tekartik.sqflite.DatabaseWorkerPool$-CC -> o1.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    5:19:void com.tekartik.sqflite.DatabaseWorkerPool.post(com.tekartik.sqflite.Database,java.lang.Runnable):0:0 -> a
    5:19:void $default$post(com.tekartik.sqflite.DatabaseWorkerPool,com.tekartik.sqflite.Database,java.lang.Runnable):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/q;Lo1/k;Ljava/lang/Runnable;)V"}
    4:15:com.tekartik.sqflite.DatabaseWorkerPool com.tekartik.sqflite.DatabaseWorkerPool.create(java.lang.String,int,int):0:0 -> b
    4:15:com.tekartik.sqflite.DatabaseWorkerPool create(java.lang.String,int,int):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;II)Lo1/q;"}
com.tekartik.sqflite.DatabaseWorkerPool$1 -> o1.p$a:
    com.tekartik.sqflite.Database val$database -> a
    com.tekartik.sqflite.DatabaseWorkerPool this$0 -> b
    1:1:void <init>(com.tekartik.sqflite.DatabaseWorkerPool,com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/q;Lo1/k;)V"}
    1:1:int getDatabaseId():0:0 -> a
    1:1:boolean isInTransaction():0:0 -> b
com.tekartik.sqflite.DatabaseWorkerPoolImpl -> o1.s:
    java.lang.String name -> a
    int numberOfWorkers -> b
    int priority -> c
    java.util.LinkedList waitingList -> d
    java.util.Set idleWorkers -> e
    java.util.Set busyWorkers -> f
    java.util.Map onlyEligibleWorkers -> g
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    1:1:void post(com.tekartik.sqflite.DatabaseTask):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/m;)V"}
    1:1:void post(com.tekartik.sqflite.Database,java.lang.Runnable):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Ljava/lang/Runnable;)V"}
    1:1:void quit():0:0 -> c
    1:1:void $r8$lambda$K4SSu_O0L6jLTrL9FW42B0iNNuw(com.tekartik.sqflite.DatabaseWorkerPoolImpl,com.tekartik.sqflite.DatabaseWorker):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/s;Lo1/o;)V"}
    1:1:com.tekartik.sqflite.DatabaseWorker createWorker(java.lang.String,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Lo1/o;"}
    1:1:com.tekartik.sqflite.DatabaseTask findTaskForWorker(com.tekartik.sqflite.DatabaseWorker):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/o;)Lo1/m;"}
    1:1:void lambda$start$0(com.tekartik.sqflite.DatabaseWorker):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/o;)V"}
    1:1:void onWorkerIdle(com.tekartik.sqflite.DatabaseWorker):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/o;)V"}
    1:1:void tryPostingTaskToWorker(com.tekartik.sqflite.DatabaseWorker):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/o;)V"}
    1:1:void start():0:0 -> start
com.tekartik.sqflite.DatabaseWorkerPoolImpl$$ExternalSyntheticLambda0 -> o1.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.DatabaseWorkerPoolImpl com.tekartik.sqflite.DatabaseWorkerPoolImpl$$InternalSyntheticLambda$4$faa448157207b6ba937a7410ed8b34fe547617395fbe08491eac029f7ce4d3c5$0.f$0 -> e
    com.tekartik.sqflite.DatabaseWorker com.tekartik.sqflite.DatabaseWorkerPoolImpl$$InternalSyntheticLambda$4$faa448157207b6ba937a7410ed8b34fe547617395fbe08491eac029f7ce4d3c5$0.f$1 -> f
    1:1:void com.tekartik.sqflite.DatabaseWorkerPoolImpl$$InternalSyntheticLambda$4$faa448157207b6ba937a7410ed8b34fe547617395fbe08491eac029f7ce4d3c5$0.<init>(com.tekartik.sqflite.DatabaseWorkerPoolImpl,com.tekartik.sqflite.DatabaseWorker):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/s;Lo1/o;)V"}
    1:1:void com.tekartik.sqflite.DatabaseWorkerPoolImpl$$InternalSyntheticLambda$4$faa448157207b6ba937a7410ed8b34fe547617395fbe08491eac029f7ce4d3c5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.LogLevel -> o1.t:
    1:1:java.lang.Integer getLogLevel(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;)Ljava/lang/Integer;"}
    1:1:boolean hasSqlLevel(int):0:0 -> b
    1:1:boolean hasVerboseLevel(int):0:0 -> c
com.tekartik.sqflite.SingleDatabaseWorkerPoolImpl -> o1.u:
    java.lang.String name -> a
    int priority -> b
    android.os.HandlerThread handlerThread -> c
    android.os.Handler handler -> d
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:void post(com.tekartik.sqflite.DatabaseTask):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/m;)V"}
    1:1:void post(com.tekartik.sqflite.Database,java.lang.Runnable):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;Ljava/lang/Runnable;)V"}
    1:1:void quit():0:0 -> c
    1:1:void start():0:0 -> start
com.tekartik.sqflite.SqfliteCursor -> o1.v:
    int cursorId -> a
    int pageSize -> b
    android.database.Cursor cursor -> c
    1:1:void <init>(int,int,android.database.Cursor):0:0 -> <init>
com.tekartik.sqflite.SqflitePlugin -> o1.e0:
    android.content.Context context -> a
    io.flutter.plugin.common.MethodChannel methodChannel -> b
    java.util.Map _singleInstancesByPath -> c
    java.util.Map databaseMap -> d
    java.lang.Object databaseMapLocker -> e
    java.lang.Object openCloseLocker -> f
    int logLevel -> g
    java.lang.String databasesPath -> h
    int THREAD_PRIORITY -> i
    int THREAD_COUNT -> j
    int databaseId -> k
    com.tekartik.sqflite.DatabaseWorkerPool databaseWorkerPool -> l
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.util.Map makeOpenResult(int,boolean,boolean):0:0 -> A
    1:1:void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;La2/c;)V"}
    1:1:void onBatchCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onCloseDatabaseCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onDatabaseExistsCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onDebugCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onDebugModeCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onDeleteDatabaseCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onExecuteCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onGetDatabasesPathCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onInsertCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onOpenDatabaseCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onOptionsCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onQueryCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onQueryCursorNextCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onSetLocaleCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onUpdateCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:void $r8$lambda$10vcOTb9nk-HfBprIP8fjDGWhIo(boolean,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.Boolean,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,boolean,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLjava/lang/String;La2/j$d;Ljava/lang/Boolean;Lo1/k;La2/i;ZI)V"}
    1:1:void $r8$lambda$Bt-jykj9m-aQaWKe1HcY1FCbVOM(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:void $r8$lambda$D-BA9tnqgpP2UTid1lRJzgmWaOY(com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;La2/i;La2/j$d;)V"}
    1:1:void $r8$lambda$Ucv8DrEgLs2La1IS69uDB8msYpk(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void $r8$lambda$V7atGMI_V7gP0YuWuN5S7hIqUlA(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void $r8$lambda$f1wkciOvjvVRg4xo0ZSGJRucolw(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void $r8$lambda$ipEJgNwiuyuFtGOawDQMZuk-nyA(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void $r8$lambda$w9UXKIyzEJI1skH8gkI-Y_UOjgQ(io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodChannel$Result):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;Lo1/k;La2/j$d;)V"}
    1:1:void -$$Nest$mcloseDatabase(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/e0;Lo1/k;)V"}
    1:1:int -$$Nest$sfgetdatabaseId():0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object -$$Nest$sfgetopenCloseLocker():0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void closeDatabase(com.tekartik.sqflite.Database):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;)V"}
    1:1:com.tekartik.sqflite.Database getDatabase(int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo1/k;"}
    1:1:com.tekartik.sqflite.Database getDatabaseOrError(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)Lo1/k;"}
    1:1:boolean isInMemoryPath(java.lang.String):0:0 -> r
    1:1:void lambda$onBatchCall$2(com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;La2/i;La2/j$d;)V"}
    1:1:void lambda$onExecuteCall$4(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void lambda$onInsertCall$3(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void lambda$onOpenDatabaseCall$7(boolean,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.Boolean,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,boolean,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLjava/lang/String;La2/j$d;Ljava/lang/Boolean;Lo1/k;La2/i;ZI)V"}
    1:1:void lambda$onQueryCall$0(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void lambda$onQueryCursorNextCall$1(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void lambda$onSetLocaleCall$5(io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodChannel$Result):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;Lo1/k;La2/j$d;)V"}
    1:1:void lambda$onUpdateCall$6(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda0 -> o1.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$03ec7a25d00bfa842fb519a2688dc7f65405ca5861fd9e90ecf912cbf6589050$0.f$0 -> e
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$03ec7a25d00bfa842fb519a2688dc7f65405ca5861fd9e90ecf912cbf6589050$0.f$1 -> f
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$03ec7a25d00bfa842fb519a2688dc7f65405ca5861fd9e90ecf912cbf6589050$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$03ec7a25d00bfa842fb519a2688dc7f65405ca5861fd9e90ecf912cbf6589050$0.<init>(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$03ec7a25d00bfa842fb519a2688dc7f65405ca5861fd9e90ecf912cbf6589050$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda1 -> o1.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5944d65552528c5a3e61fbf5d4318f0da292cbc8296ef28346f060c35ae898e2$0.f$0 -> e
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5944d65552528c5a3e61fbf5d4318f0da292cbc8296ef28346f060c35ae898e2$0.f$1 -> f
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5944d65552528c5a3e61fbf5d4318f0da292cbc8296ef28346f060c35ae898e2$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5944d65552528c5a3e61fbf5d4318f0da292cbc8296ef28346f060c35ae898e2$0.<init>(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5944d65552528c5a3e61fbf5d4318f0da292cbc8296ef28346f060c35ae898e2$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda2 -> o1.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5d280920f2067ab07682449d38c0469528089c1631f5e3fc1cf5ed13f2ebb146$0.f$0 -> e
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5d280920f2067ab07682449d38c0469528089c1631f5e3fc1cf5ed13f2ebb146$0.f$1 -> f
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5d280920f2067ab07682449d38c0469528089c1631f5e3fc1cf5ed13f2ebb146$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5d280920f2067ab07682449d38c0469528089c1631f5e3fc1cf5ed13f2ebb146$0.<init>(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5d280920f2067ab07682449d38c0469528089c1631f5e3fc1cf5ed13f2ebb146$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda3 -> o1.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5dd69a2aac715c50f0a574802b61ebc3164d7c9747728511ba702d184f589c6a$0.f$0 -> e
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5dd69a2aac715c50f0a574802b61ebc3164d7c9747728511ba702d184f589c6a$0.f$1 -> f
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5dd69a2aac715c50f0a574802b61ebc3164d7c9747728511ba702d184f589c6a$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5dd69a2aac715c50f0a574802b61ebc3164d7c9747728511ba702d184f589c6a$0.<init>(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$5dd69a2aac715c50f0a574802b61ebc3164d7c9747728511ba702d184f589c6a$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda4 -> o1.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$6e79b78ab3809682e455d3842f85a3ffc17c0401c80022919b7257707b4a5113$0.f$0 -> e
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$6e79b78ab3809682e455d3842f85a3ffc17c0401c80022919b7257707b4a5113$0.f$1 -> f
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$6e79b78ab3809682e455d3842f85a3ffc17c0401c80022919b7257707b4a5113$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$6e79b78ab3809682e455d3842f85a3ffc17c0401c80022919b7257707b4a5113$0.<init>(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,com.tekartik.sqflite.Database):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;Lo1/k;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$6e79b78ab3809682e455d3842f85a3ffc17c0401c80022919b7257707b4a5113$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda5 -> o1.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$0 -> e
    java.lang.String com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$1 -> f
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$2 -> g
    java.lang.Boolean com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$3 -> h
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$4 -> i
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$5 -> j
    boolean com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$6 -> k
    int com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.f$7 -> l
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.<init>(boolean,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.Boolean,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLjava/lang/String;La2/j$d;Ljava/lang/Boolean;Lo1/k;La2/i;ZI)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$88af5fbb0094444a5246d725f65246e8483b156777424b502ceab2ec69c55673$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda6 -> o1.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$91aa29022b36340d40f11f9ea8470f7b56924e20434e3a39b72fa66d89ff3ba2$0.f$0 -> e
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$91aa29022b36340d40f11f9ea8470f7b56924e20434e3a39b72fa66d89ff3ba2$0.f$1 -> f
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$91aa29022b36340d40f11f9ea8470f7b56924e20434e3a39b72fa66d89ff3ba2$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$91aa29022b36340d40f11f9ea8470f7b56924e20434e3a39b72fa66d89ff3ba2$0.<init>(io.flutter.plugin.common.MethodCall,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;Lo1/k;La2/j$d;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$91aa29022b36340d40f11f9ea8470f7b56924e20434e3a39b72fa66d89ff3ba2$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$$ExternalSyntheticLambda7 -> o1.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.tekartik.sqflite.Database com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$ad7d6e7f24064a57f72d44a547ce1705c04f3c736f0212475ec73408536ebc2c$0.f$0 -> e
    io.flutter.plugin.common.MethodCall com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$ad7d6e7f24064a57f72d44a547ce1705c04f3c736f0212475ec73408536ebc2c$0.f$1 -> f
    io.flutter.plugin.common.MethodChannel$Result com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$ad7d6e7f24064a57f72d44a547ce1705c04f3c736f0212475ec73408536ebc2c$0.f$2 -> g
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$ad7d6e7f24064a57f72d44a547ce1705c04f3c736f0212475ec73408536ebc2c$0.<init>(com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/k;La2/i;La2/j$d;)V"}
    1:1:void com.tekartik.sqflite.SqflitePlugin$$InternalSyntheticLambda$2$ad7d6e7f24064a57f72d44a547ce1705c04f3c736f0212475ec73408536ebc2c$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.tekartik.sqflite.SqflitePlugin$1 -> o1.e0$a:
    com.tekartik.sqflite.Database val$database -> e
    io.flutter.plugin.common.MethodChannel$Result val$result -> f
    com.tekartik.sqflite.SqflitePlugin this$0 -> g
    1:1:void <init>(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/e0;Lo1/k;La2/j$d;)V"}
    1:1:void run():0:0 -> run
com.tekartik.sqflite.SqflitePlugin$2 -> o1.e0$b:
    com.tekartik.sqflite.Database val$openedDatabase -> e
    java.lang.String val$path -> f
    io.flutter.plugin.common.MethodChannel$Result val$result -> g
    com.tekartik.sqflite.SqflitePlugin this$0 -> h
    1:1:void <init>(com.tekartik.sqflite.SqflitePlugin,com.tekartik.sqflite.Database,java.lang.String,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/e0;Lo1/k;Ljava/lang/String;La2/j$d;)V"}
    1:1:void run():0:0 -> run
com.tekartik.sqflite.SqlCommand -> o1.f0:
    java.lang.String sql -> a
    java.util.List rawArguments -> b
    1:1:void <init>(java.lang.String,java.util.List):0:0 -> <init>
    1:1:void bindTo(android.database.sqlite.SQLiteProgram):0:0 -> a
    1:1:java.util.List getRawSqlArguments():0:0 -> b
    1:1:java.lang.String getSql():0:0 -> c
    1:1:java.lang.Object[] getSqlArguments():0:0 -> d
    1:1:java.lang.Object[] getSqlArguments(java.util.List):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object toValue(java.lang.Object):0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.tekartik.sqflite.Utils -> o1.g0:
    1:1:java.util.List cursorRowToList(android.database.Cursor,int):0:0 -> a
    1:1:java.lang.Object cursorValue(android.database.Cursor,int):0:0 -> b
    1:1:java.util.Locale localeForLanguageTag21(java.lang.String):0:0 -> c
    1:1:java.util.Locale localeForLanguateTag(java.lang.String):0:0 -> d
com.tekartik.sqflite.dev.Debug -> p1.a:
    boolean LOGV -> a
    boolean _EXTRA_LOGV -> b
    boolean EXTRA_LOGV -> c
    1:1:void <clinit>():0:0 -> <clinit>
com.tekartik.sqflite.operation.BaseOperation -> q1.a:
    void <init>() -> <init>
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    com.tekartik.sqflite.operation.OperationResult getOperationResult() -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq1/f;"}
com.tekartik.sqflite.operation.BaseReadOperation -> q1.b:
    void <init>() -> <init>
    1:1:com.tekartik.sqflite.SqlCommand getSqlCommand():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo1/f0;"}
    1:1:boolean getNoResult():0:0 -> e
    1:1:java.lang.Boolean getInTransactionChange():0:0 -> f
    1:1:java.lang.Integer getTransactionId():0:0 -> h
    1:1:boolean hasNullTransactionId():0:0 -> i
    1:1:java.lang.Boolean getBoolean(java.lang.String):0:0 -> k
    1:1:boolean getContinueOnError():0:0 -> l
    1:1:java.lang.String getSql():0:0 -> m
    1:1:java.util.List getSqlArguments():0:0 -> n
    1:1:java.lang.String toString():0:0 -> toString
com.tekartik.sqflite.operation.BatchOperation -> q1.c:
    java.util.Map map -> a
    com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult operationResult -> b
    boolean noResult -> c
    1:1:void <init>(java.util.Map,boolean):0:0 -> <init>
    1:1:java.lang.Object getArgument(java.lang.String):0:0 -> c
    1:1:boolean getNoResult():0:0 -> e
    1:1:java.lang.String getMethod():0:0 -> g
    1:1:boolean hasArgument(java.lang.String):0:0 -> j
    1:1:com.tekartik.sqflite.operation.OperationResult getOperationResult():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq1/f;"}
    1:1:java.util.Map getOperationError():0:0 -> p
    1:1:java.util.Map getOperationSuccessResult():0:0 -> q
    1:1:void handleError(io.flutter.plugin.common.MethodChannel$Result):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;)V"}
    1:1:void handleErrorContinue(java.util.List):0:0 -> s
    1:1:void handleSuccess(java.util.List):0:0 -> t
com.tekartik.sqflite.operation.BatchOperation$BatchOperationResult -> q1.c$a:
    java.lang.Object result -> a
    java.lang.String errorCode -> b
    java.lang.String errorMessage -> c
    java.lang.Object errorData -> d
    com.tekartik.sqflite.operation.BatchOperation this$0 -> e
    1:1:void <init>(com.tekartik.sqflite.operation.BatchOperation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/c;)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
com.tekartik.sqflite.operation.MethodCallOperation -> q1.d:
    com.tekartik.sqflite.operation.MethodCallOperation$Result result -> a
    io.flutter.plugin.common.MethodCall methodCall -> b
    1:1:void <init>(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:java.lang.Object getArgument(java.lang.String):0:0 -> c
    1:1:java.lang.String getMethod():0:0 -> g
    1:1:boolean hasArgument(java.lang.String):0:0 -> j
    1:1:com.tekartik.sqflite.operation.OperationResult getOperationResult():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq1/f;"}
com.tekartik.sqflite.operation.MethodCallOperation$Result -> q1.d$a:
    io.flutter.plugin.common.MethodChannel$Result result -> a
    com.tekartik.sqflite.operation.MethodCallOperation this$0 -> b
    1:1:void <init>(com.tekartik.sqflite.operation.MethodCallOperation,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/d;La2/j$d;)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
com.tekartik.sqflite.operation.Operation -> q1.e:
    java.lang.Object getArgument(java.lang.String) -> c
    com.tekartik.sqflite.SqlCommand getSqlCommand() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo1/f0;"}
    boolean getNoResult() -> e
    java.lang.Boolean getInTransactionChange() -> f
    java.lang.String getMethod() -> g
    java.lang.Integer getTransactionId() -> h
    boolean hasNullTransactionId() -> i
    boolean hasArgument(java.lang.String) -> j
com.tekartik.sqflite.operation.OperationResult -> q1.f:
    void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    void success(java.lang.Object) -> b
com.tekartik.sqflite.operation.QueuedOperation -> q1.g:
    com.tekartik.sqflite.operation.Operation operation -> a
    java.lang.Runnable runnable -> b
    1:1:void <init>(com.tekartik.sqflite.operation.Operation,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> a
com.tekartik.sqflite.operation.SqlErrorInfo -> q1.h:
    1:1:java.util.Map getMap(com.tekartik.sqflite.operation.Operation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq1/e;)Ljava/util/Map;"}
io.flutter.FlutterInjector -> r1.a:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory -> b
    java.util.concurrent.ExecutorService executorService -> c
    io.flutter.FlutterInjector instance -> d
    boolean accessed -> e
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;Lt1/a;Lio/flutter/embedding/engine/FlutterJNI$c;Ljava/util/concurrent/ExecutorService;)V"}
    2:2:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;Lt1/a;Lio/flutter/embedding/engine/FlutterJNI$c;Ljava/util/concurrent/ExecutorService;Lr1/a$a;)V"}
    1:1:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt1/a;"}
    1:1:java.util.concurrent.ExecutorService executorService():0:0 -> b
    1:1:io.flutter.embedding.engine.loader.FlutterLoader flutterLoader():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu1/d;"}
    1:1:io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/FlutterJNI$c;"}
    1:1:io.flutter.FlutterInjector instance():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr1/a;"}
io.flutter.FlutterInjector$1 -> r1.a$a:
io.flutter.FlutterInjector$Builder -> r1.a$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory -> b
    java.util.concurrent.ExecutorService executorService -> c
    void <init>() -> <init>
    1:1:io.flutter.FlutterInjector build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr1/a;"}
    1:1:void fillDefaults():0:0 -> b
io.flutter.FlutterInjector$Builder$NamedThreadFactory -> r1.a$b$a:
    int threadId -> a
    io.flutter.FlutterInjector$Builder this$0 -> b
    1:1:void <init>(io.flutter.FlutterInjector$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a$b;)V"}
    2:2:void <init>(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a$b;Lr1/a$a;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
io.flutter.Log -> r1.b:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void d(java.lang.String,java.lang.String):0:0 -> a
    1:1:void e(java.lang.String,java.lang.String):0:0 -> b
    1:1:void e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> c
    1:1:java.lang.String getStackTraceString(java.lang.Throwable):0:0 -> d
    1:1:void i(java.lang.String,java.lang.String):0:0 -> e
    1:1:void v(java.lang.String,java.lang.String):0:0 -> f
    1:1:void w(java.lang.String,java.lang.String):0:0 -> g
    1:1:void w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> h
io.flutter.embedding.android.AndroidTouchProcessor -> io.flutter.embedding.android.c:
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> a
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> b
    boolean trackMotionEvents -> c
    java.util.Map ongoingPans -> d
    int cachedVerticalScrollFactor -> e
    android.graphics.Matrix IDENTITY_TRANSFORM -> f
    1:1:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer):0:0 -> a
    1:1:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer,android.content.Context):0:0 -> b
    1:1:float getHorizontalScrollFactor(android.content.Context):0:0 -> c
    1:1:int getPointerChangeForAction(int):0:0 -> d
    1:1:int getPointerChangeForPanZoom(int):0:0 -> e
    1:1:int getPointerDeviceTypeForToolType(int):0:0 -> f
    1:1:float getVerticalScrollFactor(android.content.Context):0:0 -> g
    1:1:float getVerticalScrollFactorAbove26(android.content.Context):0:0 -> h
    1:1:int getVerticalScrollFactorPre26(android.content.Context):0:0 -> i
    1:1:boolean onGenericMotionEvent(android.view.MotionEvent,android.content.Context):0:0 -> j
    1:1:boolean onTouchEvent(android.view.MotionEvent):0:0 -> k
    1:1:boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix):0:0 -> l
io.flutter.embedding.android.AndroidTouchProcessor$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.android.AndroidTouchProcessor$$InternalSyntheticApiModelOutline$1$40d1bdd3d9a4ae6292f4999315675ea20ec0780bb2ad4da275be9f3530c5b86d$0.m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.AndroidTouchProcessor$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.android.AndroidTouchProcessor$$InternalSyntheticApiModelOutline$1$6235febe81a466ec2127c50ba238fb0c515d3798be5ce3f658a4f9d1e01cc5e1$0.m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.ExclusiveAppComponent -> io.flutter.embedding.android.d:
    void detachFromFlutterEngine() -> e
    java.lang.Object getAppComponent() -> f
io.flutter.embedding.android.FlutterActivity -> io.flutter.embedding.android.i:
    boolean hasRegisteredBackCallback -> a
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate -> b
    androidx.lifecycle.LifecycleRegistry lifecycle -> c
    android.window.OnBackInvokedCallback onBackInvokedCallback -> d
    int FLUTTER_VIEW_ID -> e
    1:1:io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lio/flutter/embedding/engine/a;"}
    1:1:boolean shouldHandleDeeplinking():0:0 -> B
    1:1:io.flutter.embedding.android.TransparencyMode getTransparencyMode():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/o0;"}
    1:1:void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)V"}
    1:1:void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:void cancelBackGesture():0:0 -> F
    1:1:void commitBackGesture():0:0 -> G
    1:1:void configureStatusBarForFullscreenFlutterExperience():0:0 -> H
    1:1:void configureWindowForTransparency():0:0 -> I
    1:1:android.view.View createFlutterView():0:0 -> J
    1:1:android.window.OnBackInvokedCallback createOnBackInvokedCallback():0:0 -> K
    1:1:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/k;"}
    1:1:io.flutter.embedding.engine.FlutterEngine getFlutterEngine():0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/a;"}
    1:1:android.os.Bundle getMetaData():0:0 -> N
    1:1:boolean isDebuggable():0:0 -> O
    1:1:void registerOnBackInvokedCallback():0:0 -> P
    1:1:void release():0:0 -> Q
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> R
    1:1:boolean stillAttachedForEvent(java.lang.String):0:0 -> S
    1:1:void switchLaunchThemeForNormalTheme():0:0 -> T
    1:1:void unregisterOnBackInvokedCallback():0:0 -> U
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> V
    1:1:boolean popSystemNavigator():0:0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:android.content.Context getContext():0:0 -> c
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:void detachFromFlutterEngine():0:0 -> e
    1:1:void onFlutterUiDisplayed():0:0 -> f
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i;"}
    1:1:java.lang.String getCachedEngineGroupId():0:0 -> i
    1:1:java.lang.String getInitialRoute():0:0 -> j
    1:1:io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/g;"}
    1:1:java.util.List getDartEntrypointArgs():0:0 -> m
    1:1:boolean shouldAttachEngineToActivity():0:0 -> n
    1:1:io.flutter.embedding.android.RenderMode getRenderMode():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/n0;"}
    1:1:boolean shouldDestroyEngineWithHost():0:0 -> p
    1:1:boolean attachToEngineAutomatically():0:0 -> q
    1:1:boolean shouldDispatchAppLifecycleState():0:0 -> r
    1:1:java.lang.String getCachedEngineId():0:0 -> s
    1:1:boolean shouldRestoreAndSaveState():0:0 -> t
    1:1:java.lang.String getDartEntrypointFunctionName():0:0 -> u
    1:1:void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:java.lang.String getDartEntrypointLibraryUri():0:0 -> w
    1:1:io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/h;"}
    1:1:void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;)V"}
    1:1:java.lang.String getAppBundlePath():0:0 -> z
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.window.OnBackInvokedDispatcher io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$1$4a058921c8974a8c38611995d69c484b95f39d7f62bb539ba29e4b33e9e4bf7a$0.m(io.flutter.embedding.android.FlutterActivity):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/i;)Landroid/window/OnBackInvokedDispatcher;"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$1$4a058921c8974a8c38611995d69c484b95f39d7f62bb539ba29e4b33e9e4bf7a$1.m(android.window.OnBackInvokedDispatcher,android.window.OnBackInvokedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$2$f6c463170a20e77c9917833bf47b4562ef9256679b78d93960abaa6bddcdbcef$1.m(android.window.OnBackInvokedDispatcher,int,android.window.OnBackInvokedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticLambda3 -> io.flutter.embedding.android.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.FlutterActivity io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.f$0 -> a
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.<init>(io.flutter.embedding.android.FlutterActivity):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/i;)V"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.onBackInvoked():0:0 -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$1 -> io.flutter.embedding.android.i$a:
    io.flutter.embedding.android.FlutterActivity this$0 -> a
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate -> io.flutter.embedding.android.j:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.embedding.android.FlutterView flutterView -> c
    io.flutter.plugin.platform.PlatformPlugin platformPlugin -> d
    android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener -> e
    boolean isFlutterEngineFromHost -> f
    boolean isFlutterUiDisplayed -> g
    boolean isFirstFrameRendered -> h
    boolean isAttached -> i
    java.lang.Integer previousVisibility -> j
    io.flutter.embedding.engine.FlutterEngineGroup engineGroup -> k
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> l
    1:1:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j$c;)V"}
    2:2:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j$c;Lio/flutter/embedding/engine/d;)V"}
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> A
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> B
    1:1:void onResume():0:0 -> C
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> D
    1:1:void onStart():0:0 -> E
    1:1:void onStop():0:0 -> F
    1:1:void onTrimMemory(int):0:0 -> G
    1:1:void onUserLeaveHint():0:0 -> H
    1:1:void onWindowFocusChanged(boolean):0:0 -> I
    1:1:void release():0:0 -> J
    1:1:void setUpFlutterEngine():0:0 -> K
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> L
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> M
    1:1:void updateSystemUiOverlays():0:0 -> N
    1:1:io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;)Lio/flutter/embedding/android/j$c;"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;)Z"}
    1:1:boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;Z)Z"}
    1:1:boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;Z)Z"}
    1:1:void detachFromFlutterEngine():0:0 -> e
    1:1:java.lang.Object getAppComponent():0:0 -> f
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options addEntrypointOptions(io.flutter.embedding.engine.FlutterEngineGroup$Options):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/d$b;)Lio/flutter/embedding/engine/d$b;"}
    1:1:void cancelBackGesture():0:0 -> h
    1:1:void commitBackGesture():0:0 -> i
    1:1:void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)V"}
    1:1:void doInitialFlutterViewRun():0:0 -> k
    1:1:void ensureAlive():0:0 -> l
    1:1:android.app.Activity getAppComponent():0:0 -> m
    1:1:io.flutter.embedding.engine.FlutterEngine getFlutterEngine():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/a;"}
    1:1:boolean isAttached():0:0 -> o
    1:1:boolean isFlutterEngineFromHost():0:0 -> p
    1:1:java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent):0:0 -> q
    1:1:void onActivityResult(int,int,android.content.Intent):0:0 -> r
    1:1:void onAttach(android.content.Context):0:0 -> s
    1:1:void onBackPressed():0:0 -> t
    1:1:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean):0:0 -> u
    1:1:void onDestroyView():0:0 -> v
    1:1:void onDetach():0:0 -> w
    1:1:void onNewIntent(android.content.Intent):0:0 -> x
    1:1:void onPause():0:0 -> y
    1:1:void onPostResume():0:0 -> z
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1 -> io.flutter.embedding.android.j$a:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2 -> io.flutter.embedding.android.j$b:
    io.flutter.embedding.android.FlutterView val$flutterView -> a
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> b
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host -> io.flutter.embedding.android.j$c:
    io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lio/flutter/embedding/engine/a;"}
    boolean shouldHandleDeeplinking() -> B
    io.flutter.embedding.android.TransparencyMode getTransparencyMode() -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/o0;"}
    void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)V"}
    void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    void onFlutterUiNoLongerDisplayed() -> b
    android.content.Context getContext() -> c
    android.app.Activity getActivity() -> d
    void detachFromFlutterEngine() -> e
    void onFlutterUiDisplayed() -> f
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/i;"}
    java.lang.String getCachedEngineGroupId() -> i
    java.lang.String getInitialRoute() -> j
    io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs() -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/g;"}
    java.util.List getDartEntrypointArgs() -> m
    boolean shouldAttachEngineToActivity() -> n
    io.flutter.embedding.android.RenderMode getRenderMode() -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/n0;"}
    boolean shouldDestroyEngineWithHost() -> p
    boolean attachToEngineAutomatically() -> q
    boolean shouldDispatchAppLifecycleState() -> r
    java.lang.String getCachedEngineId() -> s
    boolean shouldRestoreAndSaveState() -> t
    java.lang.String getDartEntrypointFunctionName() -> u
    void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    java.lang.String getDartEntrypointLibraryUri() -> w
    io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/h;"}
    void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;)V"}
    java.lang.String getAppBundlePath() -> z
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode -> io.flutter.embedding.android.k:
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque -> e
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent -> f
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES -> g
    1:1:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/k;"}
io.flutter.embedding.android.FlutterImageView -> io.flutter.embedding.android.p:
    android.media.ImageReader imageReader -> a
    android.media.Image currentImage -> b
    android.graphics.Bitmap currentBitmap -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    io.flutter.embedding.android.FlutterImageView$SurfaceKind kind -> e
    boolean isAttachedToFlutterRenderer -> f
    1:1:void <init>(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;IILio/flutter/embedding/android/p$b;)V"}
    2:2:void <init>(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/media/ImageReader;Lio/flutter/embedding/android/p$b;)V"}
    1:1:boolean acquireLatestImage():0:0 -> a
    1:1:void pause():0:0 -> b
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> c
    1:1:void detachFromRenderer():0:0 -> d
    1:1:void resume():0:0 -> e
    1:1:void closeCurrentImage():0:0 -> f
    1:1:void closeImageReader():0:0 -> g
    1:1:android.media.ImageReader createImageReader(int,int):0:0 -> h
    1:1:void init():0:0 -> i
    1:1:void logW(java.lang.String,java.lang.Object[]):0:0 -> j
    1:1:void resizeIfNeeded(int,int):0:0 -> k
    1:1:void updateCurrentBitmap():0:0 -> l
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$bf67bebaa6e8ab187d9f1bff46ef87b185aa6936818b5d195eccda11d5391fa1$0.m(int,int,int,int,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.HardwareBuffer io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$3.m(android.hardware.HardwareBuffer,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.android.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$4.m(android.hardware.HardwareBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$1 -> io.flutter.embedding.android.p$a:
    int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind -> a
io.flutter.embedding.android.FlutterImageView$SurfaceKind -> io.flutter.embedding.android.p$b:
    io.flutter.embedding.android.FlutterImageView$SurfaceKind background -> e
    io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay -> f
    io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES -> g
    1:1:io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/p$b;"}
io.flutter.embedding.android.FlutterSurfaceView -> io.flutter.embedding.android.q:
    boolean renderTransparently -> a
    boolean isSurfaceAvailableForRendering -> b
    boolean isPaused -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    android.view.SurfaceHolder$Callback surfaceCallback -> e
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> f
    1:1:void <init>(android.content.Context,android.util.AttributeSet,boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,boolean):0:0 -> <init>
    1:1:boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;Z)Z"}
    1:1:void pause():0:0 -> b
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> c
    1:1:void detachFromRenderer():0:0 -> d
    1:1:void resume():0:0 -> e
    1:1:boolean access$100(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;)Z"}
    1:1:void access$200(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;)V"}
    1:1:void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;II)V"}
    1:1:void access$400(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;)V"}
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/q;)Lio/flutter/embedding/engine/renderer/FlutterRenderer;"}
    1:1:void changeSurfaceSize(int,int):0:0 -> k
    1:1:void connectSurfaceToRenderer():0:0 -> l
    1:1:void disconnectSurfaceFromRenderer():0:0 -> m
    1:1:void init():0:0 -> n
    1:1:boolean isSurfaceAvailableForRendering():0:0 -> o
    1:1:boolean shouldNotify():0:0 -> p
io.flutter.embedding.android.FlutterSurfaceView$1 -> io.flutter.embedding.android.q$a:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
io.flutter.embedding.android.FlutterSurfaceView$2 -> io.flutter.embedding.android.q$b:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterTextureView -> io.flutter.embedding.android.r:
    boolean isSurfaceAvailableForRendering -> a
    boolean isPaused -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> c
    android.view.Surface renderSurface -> d
    android.view.TextureView$SurfaceTextureListener surfaceTextureListener -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;Z)Z"}
    1:1:void pause():0:0 -> b
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> c
    1:1:void detachFromRenderer():0:0 -> d
    1:1:void resume():0:0 -> e
    1:1:boolean access$100(io.flutter.embedding.android.FlutterTextureView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)Z"}
    1:1:void access$200(io.flutter.embedding.android.FlutterTextureView):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)V"}
    1:1:void access$300(io.flutter.embedding.android.FlutterTextureView,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;II)V"}
    1:1:void access$400(io.flutter.embedding.android.FlutterTextureView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)V"}
    1:1:android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)Landroid/view/Surface;"}
    1:1:android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;Landroid/view/Surface;)Landroid/view/Surface;"}
    1:1:void changeSurfaceSize(int,int):0:0 -> l
    1:1:void connectSurfaceToRenderer():0:0 -> m
    1:1:void disconnectSurfaceFromRenderer():0:0 -> n
    1:1:void init():0:0 -> o
    1:1:boolean isSurfaceAvailableForRendering():0:0 -> p
    1:1:boolean shouldNotify():0:0 -> q
io.flutter.embedding.android.FlutterTextureView$1 -> io.flutter.embedding.android.r$a:
    io.flutter.embedding.android.FlutterTextureView this$0 -> a
io.flutter.embedding.android.FlutterView -> io.flutter.embedding.android.c0:
    io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView -> a
    io.flutter.embedding.android.FlutterTextureView flutterTextureView -> b
    io.flutter.embedding.android.FlutterImageView flutterImageView -> c
    io.flutter.embedding.engine.renderer.RenderSurface renderSurface -> d
    io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface -> e
    java.util.Set flutterUiDisplayListeners -> f
    boolean isFlutterUiDisplayed -> g
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> h
    java.util.Set flutterEngineAttachmentListeners -> i
    io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin -> j
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> k
    io.flutter.plugin.editing.SpellCheckPlugin spellCheckPlugin -> l
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> m
    io.flutter.embedding.android.KeyboardManager keyboardManager -> n
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> o
    io.flutter.view.AccessibilityBridge accessibilityBridge -> p
    android.view.textservice.TextServicesManager textServicesManager -> q
    io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo -> r
    io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics -> s
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> t
    android.database.ContentObserver systemSettingsObserver -> u
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> v
    androidx.core.util.Consumer windowInfoListener -> w
    1:1:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Lio/flutter/embedding/android/q;)V"}
    2:2:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Lio/flutter/embedding/android/r;)V"}
    3:3:void <init>(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/android/q;)V"}
    4:4:void <init>(android.content.Context,io.flutter.embedding.android.FlutterTextureView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/android/r;)V"}
    1:1:void revertImageView(java.lang.Runnable):0:0 -> A
    1:1:void sendUserSettingsToFlutter():0:0 -> B
    1:1:void sendViewportMetricsToFlutter():0:0 -> C
    1:1:void redispatch(android.view.KeyEvent):0:0 -> a
    1:1:boolean onTextInputKeyEvent(android.view.KeyEvent):0:0 -> b
    1:1:android.view.PointerIcon getSystemPointerIcon(int):0:0 -> c
    1:1:boolean $r8$lambda$d2mxEi96GCrk9QQKk7dEG7SoNrw(android.view.textservice.SpellCheckerInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;ZZ)V"}
    1:1:io.flutter.embedding.engine.FlutterEngine access$100(io.flutter.embedding.android.FlutterView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)Lio/flutter/embedding/engine/a;"}
    1:1:boolean access$202(io.flutter.embedding.android.FlutterView,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;Z)Z"}
    1:1:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger():0:0 -> getBinaryMessenger
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c;"}
    1:1:java.util.Set access$300(io.flutter.embedding.android.FlutterView):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)Ljava/util/Set;"}
    1:1:io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)Lio/flutter/embedding/android/p;"}
    1:1:void access$500(io.flutter.embedding.android.FlutterView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)V"}
    1:1:boolean acquireLatestImageViewFrame():0:0 -> k
    1:1:void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/p;)V"}
    1:1:void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/c0$f;"}
    1:1:void convertToImageView():0:0 -> p
    1:1:io.flutter.embedding.android.FlutterImageView createImageView():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/p;"}
    1:1:io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/p0;"}
    1:1:void detachFromFlutterEngine():0:0 -> s
    1:1:void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo):0:0 -> setWindowInfoListenerDisplayFeatures
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/j;)V"}
    1:1:int guessBottomKeyboardInset(android.view.WindowInsets):0:0 -> t
    1:1:void init():0:0 -> u
    1:1:boolean isAttachedToFlutterEngine():0:0 -> v
    1:1:boolean lambda$sendUserSettingsToFlutter$0(android.view.textservice.SpellCheckerInfo):0:0 -> w
    1:1:void releaseImageView():0:0 -> x
    1:1:void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void resetWillNotDraw(boolean,boolean):0:0 -> z
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$02bc130575321d6f7153919c9c0399495529118b10b6d4ed7fdcaac70f3e4629$0.m(io.flutter.embedding.android.FlutterView,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;I)V"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$098bad75e91e01c9cf58f2698a334adb9f54566cd7e946e95bf6296c3638371e$0.m(io.flutter.embedding.android.FlutterView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)Landroid/view/WindowInsets;"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$098bad75e91e01c9cf58f2698a334adb9f54566cd7e946e95bf6296c3638371e$2.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.android.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$1974b9bc396d10aaf33ea08c51ac9f006d75aeec6982d8513d441865065adf5a$25.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.android.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$0.m(android.view.textservice.TextServicesManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.android.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.stream.Stream io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$1.m(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline6 -> io.flutter.embedding.android.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$3.m(java.util.stream.Stream,java.util.function.Predicate):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline7 -> io.flutter.embedding.android.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$4.m(android.view.textservice.TextServicesManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline8 -> io.flutter.embedding.android.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.PointerIcon io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$3$495da519877a75317e821ed8b69ee11ce60911adcbb1583f10aca20cfddcf862$0.m(android.content.Context,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticLambda9 -> io.flutter.embedding.android.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void io.flutter.embedding.android.FlutterView$$InternalSyntheticLambda$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticLambda$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$2.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$1 -> io.flutter.embedding.android.c0$a:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void onAccessibilityChanged(boolean,boolean):0:0 -> a
io.flutter.embedding.android.FlutterView$2 -> io.flutter.embedding.android.c0$b:
    io.flutter.embedding.android.FlutterView this$0 -> a
io.flutter.embedding.android.FlutterView$3 -> io.flutter.embedding.android.c0$c:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterView$4 -> io.flutter.embedding.android.c0$d:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void accept(androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/j;)V"}
io.flutter.embedding.android.FlutterView$5 -> io.flutter.embedding.android.c0$e:
    io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer -> a
    java.lang.Runnable val$onDone -> b
    io.flutter.embedding.android.FlutterView this$0 -> c
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterView$ZeroSides -> io.flutter.embedding.android.c0$f:
    io.flutter.embedding.android.FlutterView$ZeroSides NONE -> e
    io.flutter.embedding.android.FlutterView$ZeroSides LEFT -> f
    io.flutter.embedding.android.FlutterView$ZeroSides RIGHT -> g
    io.flutter.embedding.android.FlutterView$ZeroSides BOTH -> h
    io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES -> i
    1:1:io.flutter.embedding.android.FlutterView$ZeroSides[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/c0$f;"}
io.flutter.embedding.android.KeyChannelResponder -> io.flutter.embedding.android.e0:
    io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel -> a
    io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.KeyEventChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i;)V"}
    1:1:void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/k0$d$a;)V"}
    1:1:void $r8$lambda$2j1oQDNrug8exq2tp8d8ktXWyJI(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$d$a;Z)V"}
    1:1:void lambda$handleEvent$0(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$d$a;Z)V"}
io.flutter.embedding.android.KeyChannelResponder$$ExternalSyntheticLambda0 -> io.flutter.embedding.android.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.f$0 -> a
    1:1:void io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.<init>(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$d$a;)V"}
    1:1:void io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.onFrameworkResponse(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyData -> io.flutter.embedding.android.f0:
    long timestamp -> a
    io.flutter.embedding.android.KeyData$Type type -> b
    long physicalKey -> c
    long logicalKey -> d
    boolean synthesized -> e
    io.flutter.embedding.android.KeyData$DeviceType deviceType -> f
    java.lang.String character -> g
    1:1:java.nio.ByteBuffer toBytes():0:0 -> a
io.flutter.embedding.android.KeyData$DeviceType -> io.flutter.embedding.android.f0$a:
    long value -> e
    io.flutter.embedding.android.KeyData$DeviceType kKeyboard -> f
    io.flutter.embedding.android.KeyData$DeviceType kDirectionalPad -> g
    io.flutter.embedding.android.KeyData$DeviceType kGamepad -> h
    io.flutter.embedding.android.KeyData$DeviceType kJoystick -> i
    io.flutter.embedding.android.KeyData$DeviceType kHdmi -> j
    io.flutter.embedding.android.KeyData$DeviceType[] $VALUES -> k
    1:1:io.flutter.embedding.android.KeyData$DeviceType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/f0$a;"}
    1:1:long getValue():0:0 -> b
io.flutter.embedding.android.KeyData$Type -> io.flutter.embedding.android.f0$b:
    long value -> e
    io.flutter.embedding.android.KeyData$Type kDown -> f
    io.flutter.embedding.android.KeyData$Type kUp -> g
    io.flutter.embedding.android.KeyData$Type kRepeat -> h
    io.flutter.embedding.android.KeyData$Type[] $VALUES -> i
    1:1:io.flutter.embedding.android.KeyData$Type[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/f0$b;"}
    1:1:long getValue():0:0 -> b
io.flutter.embedding.android.KeyEmbedderResponder -> io.flutter.embedding.android.j0:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.util.HashMap pressingRecords -> b
    java.util.HashMap togglingGoals -> c
    io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner -> d
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;)V"}
    1:1:void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/k0$d$a;)V"}
    1:1:void $r8$lambda$Usbaa64Go-Inz_pnHu4Hlllp4NQ(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j0;Lio/flutter/embedding/android/l0$c;Landroid/view/KeyEvent;)V"}
    1:1:void $r8$lambda$VKF-feFqVV2c2diHOYJl9TFRWNI(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$d$a;Ljava/nio/ByteBuffer;)V"}
    1:1:void $r8$lambda$u49qZcV7pBZIuZzpJy2XDxE4ka4(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j0;Lio/flutter/embedding/android/l0$c;JLandroid/view/KeyEvent;)V"}
    1:1:io.flutter.embedding.android.KeyData$Type getEventType(android.view.KeyEvent):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;)Lio/flutter/embedding/android/f0$b;"}
    1:1:java.lang.Long getLogicalKey(android.view.KeyEvent):0:0 -> f
    1:1:java.lang.Long getPhysicalKey(android.view.KeyEvent):0:0 -> g
    1:1:java.util.Map getPressedState():0:0 -> h
    1:1:boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/k0$d$a;)Z"}
    1:1:long keyOfPlane(long,long):0:0 -> j
    1:1:void lambda$sendKeyEvent$2(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$d$a;Ljava/nio/ByteBuffer;)V"}
    1:1:void lambda$synchronizePressingKey$0(io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0$c;JLandroid/view/KeyEvent;)V"}
    1:1:void lambda$synchronizePressingKey$1(io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0$c;Landroid/view/KeyEvent;)V"}
    1:1:void sendKeyEvent(io.flutter.embedding.android.KeyData,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/f0;Lio/flutter/embedding/android/k0$d$a;)V"}
    1:1:void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0$d;ZJJLandroid/view/KeyEvent;Ljava/util/ArrayList;)V"}
    1:1:void synchronizeTogglingKey(io.flutter.embedding.android.KeyboardMap$TogglingGoal,boolean,long,android.view.KeyEvent):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0$e;ZJLandroid/view/KeyEvent;)V"}
    1:1:void synthesizeEvent(boolean,java.lang.Long,java.lang.Long,long):0:0 -> q
    1:1:void updatePressingState(java.lang.Long,java.lang.Long):0:0 -> r
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda0 -> io.flutter.embedding.android.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.f$0 -> a
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.<init>(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$d$a;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.reply(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda1 -> io.flutter.embedding.android.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyEmbedderResponder io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$0 -> e
    io.flutter.embedding.android.KeyboardMap$KeyPair io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$1 -> f
    long io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$2 -> g
    android.view.KeyEvent io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$3 -> h
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.<init>(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j0;Lio/flutter/embedding/android/l0$c;JLandroid/view/KeyEvent;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda2 -> io.flutter.embedding.android.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyEmbedderResponder io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$0 -> e
    io.flutter.embedding.android.KeyboardMap$KeyPair io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$1 -> f
    android.view.KeyEvent io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$2 -> g
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.<init>(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j0;Lio/flutter/embedding/android/l0$c;Landroid/view/KeyEvent;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$1 -> io.flutter.embedding.android.j0$a:
    int[] $SwitchMap$io$flutter$embedding$android$KeyData$Type -> a
io.flutter.embedding.android.KeyboardManager -> io.flutter.embedding.android.k0:
    io.flutter.embedding.android.KeyboardManager$Responder[] responders -> a
    java.util.HashSet redispatchedEvents -> b
    io.flutter.embedding.android.KeyboardManager$ViewDelegate viewDelegate -> c
    1:1:java.util.Map getKeyboardState():0:0 -> a
    1:1:boolean handleEvent(android.view.KeyEvent):0:0 -> b
    1:1:void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0;Landroid/view/KeyEvent;)V"}
    1:1:void destroy():0:0 -> d
    1:1:void onUnhandled(android.view.KeyEvent):0:0 -> e
io.flutter.embedding.android.KeyboardManager$1 -> io.flutter.embedding.android.k0$a:
io.flutter.embedding.android.KeyboardManager$CharacterCombiner -> io.flutter.embedding.android.k0$b:
    int combiningCharacter -> a
    1:1:java.lang.Character applyCombiningCharacterToBaseCharacter(int):0:0 -> a
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder -> io.flutter.embedding.android.k0$c:
    android.view.KeyEvent keyEvent -> a
    int unrepliedCount -> b
    boolean isEventHandled -> c
    io.flutter.embedding.android.KeyboardManager this$0 -> d
    1:1:io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/k0$d$a;"}
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback -> io.flutter.embedding.android.k0$c$a:
    boolean isCalled -> a
    io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1 -> b
    1:1:void <init>(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$c;)V"}
    2:2:void <init>(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/k0$c;Lio/flutter/embedding/android/k0$a;)V"}
    1:1:void onKeyEventHandled(boolean):0:0 -> a
io.flutter.embedding.android.KeyboardManager$Responder -> io.flutter.embedding.android.k0$d:
    void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/k0$d$a;)V"}
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback -> io.flutter.embedding.android.k0$d$a:
    void onKeyEventHandled(boolean) -> a
io.flutter.embedding.android.KeyboardManager$ViewDelegate -> io.flutter.embedding.android.k0$e:
    void redispatch(android.view.KeyEvent) -> a
    boolean onTextInputKeyEvent(android.view.KeyEvent) -> b
    io.flutter.plugin.common.BinaryMessenger getBinaryMessenger() -> getBinaryMessenger
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c;"}
io.flutter.embedding.android.KeyboardMap -> io.flutter.embedding.android.l0:
    java.util.HashMap scanCodeToPhysical -> a
    java.util.HashMap keyCodeToLogical -> b
    io.flutter.embedding.android.KeyboardMap$PressingGoal[] pressingGoals -> c
    1:1:io.flutter.embedding.android.KeyboardMap$TogglingGoal[] getTogglingGoals():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/l0$e;"}
io.flutter.embedding.android.KeyboardMap$1 -> io.flutter.embedding.android.l0$a:
io.flutter.embedding.android.KeyboardMap$2 -> io.flutter.embedding.android.l0$b:
io.flutter.embedding.android.KeyboardMap$KeyPair -> io.flutter.embedding.android.l0$c:
    long physicalKey -> a
    long logicalKey -> b
io.flutter.embedding.android.KeyboardMap$PressingGoal -> io.flutter.embedding.android.l0$d:
    int mask -> a
    io.flutter.embedding.android.KeyboardMap$KeyPair[] keys -> b
io.flutter.embedding.android.KeyboardMap$TogglingGoal -> io.flutter.embedding.android.l0$e:
    int mask -> a
    long physicalKey -> b
    long logicalKey -> c
    boolean enabled -> d
io.flutter.embedding.android.MotionEventTracker -> io.flutter.embedding.android.m0:
    android.util.LongSparseArray eventById -> a
    java.util.PriorityQueue unusedEvents -> b
    io.flutter.embedding.android.MotionEventTracker INSTANCE -> c
    1:1:io.flutter.embedding.android.MotionEventTracker getInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/m0;"}
    1:1:android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$a;)Landroid/view/MotionEvent;"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MotionEvent;)Lio/flutter/embedding/android/m0$a;"}
io.flutter.embedding.android.MotionEventTracker$MotionEventId -> io.flutter.embedding.android.m0$a:
    long id -> a
    java.util.concurrent.atomic.AtomicLong ID_COUNTER -> b
    1:1:long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$a;)J"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/m0$a;"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lio/flutter/embedding/android/m0$a;"}
    1:1:long getId():0:0 -> d
io.flutter.embedding.android.RenderMode -> io.flutter.embedding.android.n0:
    io.flutter.embedding.android.RenderMode surface -> e
    io.flutter.embedding.android.RenderMode texture -> f
    io.flutter.embedding.android.RenderMode image -> g
    io.flutter.embedding.android.RenderMode[] $VALUES -> h
    1:1:io.flutter.embedding.android.RenderMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/n0;"}
io.flutter.embedding.android.TransparencyMode -> io.flutter.embedding.android.o0:
    io.flutter.embedding.android.TransparencyMode opaque -> e
    io.flutter.embedding.android.TransparencyMode transparent -> f
    io.flutter.embedding.android.TransparencyMode[] $VALUES -> g
    1:1:io.flutter.embedding.android.TransparencyMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/o0;"}
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper -> io.flutter.embedding.android.p0:
    androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter -> a
    1:1:void <init>(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/a;)V"}
    1:1:void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Lh/a;)V"}
    1:1:void removeWindowLayoutInfoListener(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh/a;)V"}
io.flutter.embedding.engine.FlutterEngine -> io.flutter.embedding.engine.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> b
    io.flutter.embedding.engine.dart.DartExecutor dartExecutor -> c
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry -> d
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> e
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> f
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel -> g
    io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel -> h
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> i
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> j
    io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel -> k
    io.flutter.embedding.engine.systemchannels.BackGestureChannel backGestureChannel -> l
    io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel -> m
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> n
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel -> o
    io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel -> p
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel spellCheckChannel -> q
    io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel -> r
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> s
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> t
    java.util.Set engineLifecycleListeners -> u
    io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener -> v
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu1/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;ZZ)V"}
    2:2:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu1/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;ZZLio/flutter/embedding/engine/d;)V"}
    1:1:io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String,java.util.List,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ls1/a$b;Ljava/lang/String;Ljava/util/List;Lio/flutter/plugin/platform/r;ZZ)Lio/flutter/embedding/engine/a;"}
    1:1:void updateDisplayMetrics(float,float,float):0:0 -> a
    1:1:java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Ljava/util/Set;"}
    1:1:io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/r;"}
    1:1:io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Lz1/s;"}
    1:1:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a$b;)V"}
    1:1:void attachToJni():0:0 -> f
    1:1:void destroy():0:0 -> g
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a;"}
    1:1:io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx1/b;"}
    1:1:io.flutter.embedding.engine.systemchannels.BackGestureChannel getBackGestureChannel():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/f;"}
    1:1:io.flutter.embedding.engine.dart.DartExecutor getDartExecutor():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls1/a;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/k;"}
    1:1:io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/g;"}
    1:1:io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/m;"}
    1:1:io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/n;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o;"}
    1:1:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/r;"}
    1:1:io.flutter.embedding.engine.plugins.PluginRegistry getPlugins():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/b;"}
    1:1:io.flutter.embedding.engine.systemchannels.ProcessTextChannel getProcessTextChannel():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/r;"}
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer():0:0 -> t
    1:1:io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/s;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/t;"}
    1:1:io.flutter.embedding.engine.systemchannels.SpellCheckChannel getSpellCheckChannel():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/u;"}
    1:1:io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/v;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/w;"}
    1:1:boolean isAttachedToJni():0:0 -> z
io.flutter.embedding.engine.FlutterEngine$1 -> io.flutter.embedding.engine.a$a:
    io.flutter.embedding.engine.FlutterEngine this$0 -> a
    1:1:void onPreEngineRestart():0:0 -> a
    1:1:void onEngineWillDestroy():0:0 -> b
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> io.flutter.embedding.engine.a$b:
    void onPreEngineRestart() -> a
    void onEngineWillDestroy() -> b
io.flutter.embedding.engine.FlutterEngineCache -> io.flutter.embedding.engine.b:
    java.util.Map cachedEngines -> a
    io.flutter.embedding.engine.FlutterEngineCache instance -> b
    1:1:io.flutter.embedding.engine.FlutterEngine get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/a;"}
    1:1:io.flutter.embedding.engine.FlutterEngineCache getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/b;"}
    1:1:void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lio/flutter/embedding/engine/a;)V"}
    1:1:void remove(java.lang.String):0:0 -> d
io.flutter.embedding.engine.FlutterEngineConnectionRegistry -> io.flutter.embedding.engine.c:
    java.util.Map plugins -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding -> c
    java.util.Map activityAwarePlugins -> d
    io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity -> e
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding -> f
    boolean isWaitingForActivityReattachment -> g
    java.util.Map serviceAwarePlugins -> h
    android.app.Service service -> i
    java.util.Map broadcastReceiverAwarePlugins -> j
    android.content.BroadcastReceiver broadcastReceiver -> k
    java.util.Map contentProviderAwarePlugins -> l
    android.content.ContentProvider contentProvider -> m
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/engine/a;Lu1/d;Lio/flutter/embedding/engine/d;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> b
    1:1:void onNewIntent(android.content.Intent):0:0 -> c
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> d
    1:1:void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/d;Landroidx/lifecycle/i;)V"}
    1:1:void add(io.flutter.embedding.engine.plugins.FlutterPlugin):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a;)V"}
    1:1:void detachFromActivity():0:0 -> g
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> h
    1:1:void onUserLeaveHint():0:0 -> i
    1:1:void detachFromActivityForConfigChanges():0:0 -> j
    1:1:void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/i;)V"}
    1:1:void destroy():0:0 -> l
    1:1:void detachFromActivityInternal():0:0 -> m
    1:1:void detachFromAppComponent():0:0 -> n
    1:1:void detachFromBroadcastReceiver():0:0 -> o
    1:1:void detachFromContentProvider():0:0 -> p
    1:1:void detachFromService():0:0 -> q
    1:1:boolean has(java.lang.Class):0:0 -> r
    1:1:boolean isAttachedToActivity():0:0 -> s
    1:1:boolean isAttachedToBroadcastReceiver():0:0 -> t
    1:1:boolean isAttachedToContentProvider():0:0 -> u
    1:1:boolean isAttachedToService():0:0 -> v
    1:1:void remove(java.lang.Class):0:0 -> w
    1:1:void remove(java.util.Set):0:0 -> x
    1:1:void removeAll():0:0 -> y
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1 -> io.flutter.embedding.engine.c$a:
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets -> io.flutter.embedding.engine.c$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;)V"}
    2:2:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;Lio/flutter/embedding/engine/c$a;)V"}
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding -> io.flutter.embedding.engine.c$c:
    android.app.Activity activity -> a
    io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference -> b
    java.util.Set onRequestPermissionsResultListeners -> c
    java.util.Set onActivityResultListeners -> d
    java.util.Set onNewIntentListeners -> e
    java.util.Set onUserLeaveHintListeners -> f
    java.util.Set onWindowFocusChangedListeners -> g
    java.util.Set onSaveInstanceStateListeners -> h
    1:1:void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/m;)V"}
    1:1:void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/l;)V"}
    1:1:void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/m;)V"}
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/l;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> f
    1:1:void onNewIntent(android.content.Intent):0:0 -> g
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> h
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> i
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> j
    1:1:void onUserLeaveHint():0:0 -> k
io.flutter.embedding.engine.FlutterEngineGroup -> io.flutter.embedding.engine.d:
    java.util.List activeEngines -> a
    1:1:io.flutter.embedding.engine.FlutterEngine createAndRunEngine(io.flutter.embedding.engine.FlutterEngineGroup$Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/d$b;)Lio/flutter/embedding/engine/a;"}
    1:1:io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/plugin/platform/r;ZZ)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.engine.FlutterEngineGroup$1 -> io.flutter.embedding.engine.d$a:
    io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy -> a
    io.flutter.embedding.engine.FlutterEngineGroup this$0 -> b
    1:1:void onPreEngineRestart():0:0 -> a
    1:1:void onEngineWillDestroy():0:0 -> b
io.flutter.embedding.engine.FlutterEngineGroup$Options -> io.flutter.embedding.engine.d$b:
    android.content.Context context -> a
    io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint dartEntrypoint -> b
    java.lang.String initialRoute -> c
    java.util.List dartEntrypointArgs -> d
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> e
    boolean automaticallyRegisterPlugins -> f
    boolean waitForRestorationData -> g
    1:1:boolean getAutomaticallyRegisterPlugins():0:0 -> a
    1:1:android.content.Context getContext():0:0 -> b
    1:1:io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint getDartEntrypoint():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls1/a$b;"}
    1:1:java.util.List getDartEntrypointArgs():0:0 -> d
    1:1:java.lang.String getInitialRoute():0:0 -> e
    1:1:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/r;"}
    1:1:boolean getWaitForRestorationData():0:0 -> g
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setAutomaticallyRegisterPlugins(boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a$b;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypointArgs(java.util.List):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setInitialRoute(java.lang.String):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setWaitForRestorationData(boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lio/flutter/embedding/engine/d$b;"}
io.flutter.embedding.engine.FlutterEngineGroupCache -> io.flutter.embedding.engine.e:
    java.util.Map cachedEngineGroups -> a
    io.flutter.embedding.engine.FlutterEngineGroupCache instance -> b
    1:1:io.flutter.embedding.engine.FlutterEngineGroup get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/d;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroupCache getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/e;"}
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
    1:1:void $r8$lambda$2fUF03zsar2dpLbGJv6IUmJU-0A(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int):0:0 -> dispatchSemanticsAction
    2:2:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;)V"}
    3:3:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;Ljava/lang/Object;)V"}
    1:1:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager):0:0 -> setDeferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/a;)V"}
    1:1:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> setLocalizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/g;)V"}
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler):0:0 -> setPlatformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/f;)V"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.f$0 -> a
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.<init>(long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> io.flutter.embedding.engine.FlutterJNI$a:
    void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]) -> a
    void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> b
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> io.flutter.embedding.engine.FlutterJNI$b:
    void asyncWaitForVsync(long) -> a
io.flutter.embedding.engine.FlutterJNI$Factory -> io.flutter.embedding.engine.FlutterJNI$c:
    1:1:io.flutter.embedding.engine.FlutterJNI provideFlutterJNI():0:0 -> a
io.flutter.embedding.engine.FlutterShellArgs -> io.flutter.embedding.engine.g:
    java.util.Set args -> a
    1:1:io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;)Lio/flutter/embedding/engine/g;"}
    1:1:java.lang.String[] toArray():0:0 -> b
io.flutter.embedding.engine.dart.DartExecutor -> s1.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    android.content.res.AssetManager assetManager -> b
    io.flutter.embedding.engine.dart.DartMessenger dartMessenger -> c
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> d
    boolean isApplicationRunning -> e
    java.lang.String isolateServiceId -> f
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler -> g
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager):0:0 -> <init>
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$d;)La2/c$c;"}
    1:1:java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c$c;"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;La2/c$c;)V"}
    1:1:io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)Ls1/a$d;"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;La2/c$b;)V"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;)V"}
    1:1:void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a$b;Ljava/util/List;)V"}
    1:1:boolean isExecutingDart():0:0 -> i
    1:1:void notifyLowMemoryWarning():0:0 -> j
    1:1:void onAttachedToJNI():0:0 -> k
    1:1:void onDetachedFromJNI():0:0 -> l
io.flutter.embedding.engine.dart.DartExecutor$1 -> s1.a$a:
    io.flutter.embedding.engine.dart.DartExecutor this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;La2/c$b;)V"}
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint -> s1.a$b:
    java.lang.String pathToBundle -> a
    java.lang.String dartEntrypointLibrary -> b
    java.lang.String dartEntrypointFunctionName -> c
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls1/a$b;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger -> s1.a$c:
    io.flutter.embedding.engine.dart.DartMessenger messenger -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c;)V"}
    2:2:void <init>(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c;Ls1/a$a;)V"}
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$d;)La2/c$c;"}
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c$c;"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;La2/c$c;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;La2/c$b;)V"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;)V"}
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener -> s1.a$d:
io.flutter.embedding.engine.dart.DartMessenger -> s1.c:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.Map messageHandlers -> b
    java.util.Map bufferedMessages -> c
    java.lang.Object handlersLock -> d
    java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages -> e
    java.util.Map pendingReplies -> f
    int nextReplyId -> g
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue -> h
    java.util.WeakHashMap createdTaskQueues -> i
    io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory -> j
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
    2:2:void <init>(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/FlutterJNI;Ls1/c$i;)V"}
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$d;)La2/c$c;"}
    1:1:void handlePlatformMessageResponse(int,java.nio.ByteBuffer):0:0 -> b
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c$c;"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;La2/c$c;)V"}
    1:1:void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long):0:0 -> e
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;La2/c$b;)V"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;)V"}
    1:1:void $r8$lambda$2j2MERcK825A5j1fv5sZ7xB2Iuo(io.flutter.embedding.engine.dart.DartMessenger,java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c;Ljava/lang/String;ILs1/c$f;Ljava/nio/ByteBuffer;J)V"}
    1:1:void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ls1/c$f;Ljava/nio/ByteBuffer;IJ)V"}
    1:1:void handleError(java.lang.Error):0:0 -> j
    1:1:void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c$f;Ljava/nio/ByteBuffer;I)V"}
    1:1:void lambda$dispatchMessageToQueue$0(java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILs1/c$f;Ljava/nio/ByteBuffer;J)V"}
io.flutter.embedding.engine.dart.DartMessenger$$ExternalSyntheticLambda0 -> s1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.dart.DartMessenger io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$0 -> e
    java.lang.String io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$1 -> f
    int io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$2 -> g
    io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$3 -> h
    java.nio.ByteBuffer io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$4 -> i
    long io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$5 -> j
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.<init>(io.flutter.embedding.engine.dart.DartMessenger,java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c;Ljava/lang/String;ILs1/c$f;Ljava/nio/ByteBuffer;J)V"}
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.dart.DartMessenger$1 -> s1.c$a:
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo -> s1.c$b:
    java.nio.ByteBuffer message -> a
    int replyId -> b
    long messageData -> c
    1:1:void <init>(java.nio.ByteBuffer,int,long):0:0 -> <init>
io.flutter.embedding.engine.dart.DartMessenger$ConcurrentTaskQueue -> s1.c$c:
    java.util.concurrent.ExecutorService executor -> a
    1:1:void <init>(java.util.concurrent.ExecutorService):0:0 -> <init>
    1:1:void dispatch(java.lang.Runnable):0:0 -> a
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue -> s1.c$d:
    void dispatch(java.lang.Runnable) -> a
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory -> s1.c$e:
    java.util.concurrent.ExecutorService executorService -> a
    1:1:void <init>():0:0 -> <init>
    1:1:io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$d;)Ls1/c$d;"}
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo -> s1.c$f:
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler -> a
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue -> b
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$a;Ls1/c$d;)V"}
io.flutter.embedding.engine.dart.DartMessenger$Reply -> s1.c$g:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    int replyId -> b
    java.util.concurrent.atomic.AtomicBoolean done -> c
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,int):0:0 -> <init>
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue -> s1.c$h:
    java.util.concurrent.ExecutorService executor -> a
    java.util.concurrent.ConcurrentLinkedQueue queue -> b
    java.util.concurrent.atomic.AtomicBoolean isRunning -> c
    1:1:void <init>(java.util.concurrent.ExecutorService):0:0 -> <init>
    1:1:void dispatch(java.lang.Runnable):0:0 -> a
    1:1:void $r8$lambda$F0iXMzLdPiwUET1ugdCo3vpOFvI(io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c$h;)V"}
    1:1:void $r8$lambda$Z_QpOFGAZlPwSj4jhPkDhTfI820(io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c$h;)V"}
    1:1:void flush():0:0 -> d
    1:1:void lambda$dispatch$0():0:0 -> e
    1:1:void lambda$flush$1():0:0 -> f
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$ExternalSyntheticLambda0 -> s1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$InternalSyntheticLambda$2$87f003a9f337bebdd0ba7a08cc7e573e8bd1ce25d26d2f3d3923593655f1df5b$0.f$0 -> e
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$InternalSyntheticLambda$2$87f003a9f337bebdd0ba7a08cc7e573e8bd1ce25d26d2f3d3923593655f1df5b$0.<init>(io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c$h;)V"}
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$InternalSyntheticLambda$2$87f003a9f337bebdd0ba7a08cc7e573e8bd1ce25d26d2f3d3923593655f1df5b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$ExternalSyntheticLambda1 -> s1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$InternalSyntheticLambda$3$3ee6262ba64b1eee4936869951254b05afe91be0eb2ccc94cd0abcb4f0e09adb$0.f$0 -> e
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$InternalSyntheticLambda$3$3ee6262ba64b1eee4936869951254b05afe91be0eb2ccc94cd0abcb4f0e09adb$0.<init>(io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c$h;)V"}
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$SerialTaskQueue$$InternalSyntheticLambda$3$3ee6262ba64b1eee4936869951254b05afe91be0eb2ccc94cd0abcb4f0e09adb$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory -> s1.c$i:
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$d;)Ls1/c$d;"}
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueToken -> s1.c$j:
    void <init>() -> <init>
    1:1:void <init>(io.flutter.embedding.engine.dart.DartMessenger$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/c$a;)V"}
io.flutter.embedding.engine.dart.PlatformMessageHandler -> s1.f:
    void handlePlatformMessageResponse(int,java.nio.ByteBuffer) -> b
    void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long) -> e
io.flutter.embedding.engine.dart.PlatformTaskQueue -> s1.g:
    android.os.Handler handler -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void dispatch(java.lang.Runnable):0:0 -> a
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> t1.a:
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
io.flutter.embedding.engine.loader.ApplicationInfoLoader -> u1.a:
    java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME -> a
    java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY -> b
    java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY -> c
    java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context):0:0 -> a
    1:1:boolean getBoolean(android.os.Bundle,java.lang.String,boolean):0:0 -> b
    1:1:java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context):0:0 -> c
    1:1:java.lang.String getString(android.os.Bundle,java.lang.String):0:0 -> d
    1:1:io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lu1/b;"}
    1:1:void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean):0:0 -> f
    1:1:void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean):0:0 -> g
    1:1:void skipTag(android.content.res.XmlResourceParser):0:0 -> h
io.flutter.embedding.engine.loader.FlutterApplicationInfo -> u1.b:
    java.lang.String aotSharedLibraryName -> a
    java.lang.String vmSnapshotData -> b
    java.lang.String isolateSnapshotData -> c
    java.lang.String flutterAssetsDir -> d
    java.lang.String domainNetworkPolicy -> e
    java.lang.String nativeLibraryDir -> f
    boolean automaticallyRegisterPlugins -> g
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> <init>
io.flutter.embedding.engine.loader.FlutterLoader -> u1.d:
    boolean initialized -> a
    io.flutter.embedding.engine.loader.FlutterLoader$Settings settings -> b
    long initStartTimestampMillis -> c
    io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo -> d
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> e
    java.util.concurrent.ExecutorService executorService -> f
    java.util.concurrent.Future initResultFuture -> g
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService):0:0 -> <init>
    1:1:io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;Landroid/content/Context;)Lu1/e;"}
    1:1:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;)Lio/flutter/embedding/engine/FlutterJNI;"}
    1:1:io.flutter.embedding.engine.loader.FlutterApplicationInfo access$200(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;)Lu1/b;"}
    1:1:java.util.concurrent.ExecutorService access$300(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;)Ljava/util/concurrent/ExecutorService;"}
    1:1:boolean automaticallyRegisterPlugins():0:0 -> e
    1:1:void ensureInitializationComplete(android.content.Context,java.lang.String[]):0:0 -> f
    1:1:java.lang.String findAppBundlePath():0:0 -> g
    1:1:io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lu1/e;"}
    1:1:boolean initialized():0:0 -> i
    1:1:boolean isLeakVM(android.os.Bundle):0:0 -> j
    1:1:void startInitialization(android.content.Context):0:0 -> k
    1:1:void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lu1/d$c;)V"}
io.flutter.embedding.engine.loader.FlutterLoader$1 -> u1.d$a:
    android.content.Context val$appContext -> a
    io.flutter.embedding.engine.loader.FlutterLoader this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d;Landroid/content/Context;)V"}
    1:1:void $r8$lambda$7aDWRJH5QhLJRySlof0NX61HOhE(io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d$a;)V"}
    1:1:io.flutter.embedding.engine.loader.FlutterLoader$InitResult call():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu1/d$b;"}
    1:1:void lambda$call$0():0:0 -> c
    1:1:java.lang.Object call():0:0 -> call
io.flutter.embedding.engine.loader.FlutterLoader$1$$ExternalSyntheticLambda0 -> u1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.loader.FlutterLoader$1 io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.f$0 -> e
    1:1:void io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.<init>(io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d$a;)V"}
    1:1:void io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.loader.FlutterLoader$InitResult -> u1.d$b:
    java.lang.String appStoragePath -> a
    java.lang.String engineCachesPath -> b
    java.lang.String dataDirPath -> c
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lu1/d$a;)V"}
io.flutter.embedding.engine.loader.FlutterLoader$Settings -> u1.d$c:
    java.lang.String logTag -> a
    void <init>() -> <init>
    1:1:java.lang.String getLogTag():0:0 -> a
io.flutter.embedding.engine.loader.ResourceExtractor -> u1.e:
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView -> v1.a:
    void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int) -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$a:
    android.graphics.Matrix matrix -> a
    android.graphics.Rect rect -> b
    float[] radiis -> c
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type -> d
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0 -> e
    1:1:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix):0:0 -> <init>
    2:2:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect):0:0 -> <init>
    3:3:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]):0:0 -> <init>
    1:1:android.graphics.Matrix getMatrix():0:0 -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$b:
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT -> e
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT -> f
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH -> g
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM -> h
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY -> i
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES -> j
    1:1:io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorsStack$b;"}
io.flutter.embedding.engine.plugins.FlutterPlugin -> w1.a:
    void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets -> w1.a$a:
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding -> w1.a$b:
    android.content.Context applicationContext -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> c
    io.flutter.view.TextureRegistry textureRegistry -> d
    io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry -> e
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets -> f
    io.flutter.embedding.engine.FlutterEngineGroup group -> g
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/engine/a;La2/c;Lio/flutter/view/TextureRegistry;Lio/flutter/plugin/platform/l;Lw1/a$a;Lio/flutter/embedding/engine/d;)V"}
    1:1:android.content.Context getApplicationContext():0:0 -> a
    1:1:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c;"}
io.flutter.embedding.engine.plugins.PluginRegistry -> w1.b:
    void add(io.flutter.embedding.engine.plugins.FlutterPlugin) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a;)V"}
io.flutter.embedding.engine.plugins.activity.ActivityAware -> x1.a:
    void onDetachedFromActivity() -> d
    void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    void onDetachedFromActivityForConfigChanges() -> i
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface -> x1.b:
    boolean onActivityResult(int,int,android.content.Intent) -> a
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> b
    void onNewIntent(android.content.Intent) -> c
    void onRestoreInstanceState(android.os.Bundle) -> d
    void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/d;Landroidx/lifecycle/i;)V"}
    void detachFromActivity() -> g
    void onSaveInstanceState(android.os.Bundle) -> h
    void onUserLeaveHint() -> i
    void detachFromActivityForConfigChanges() -> j
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding -> x1.c:
    void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/m;)V"}
    void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/l;)V"}
    void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/m;)V"}
    android.app.Activity getActivity() -> d
    void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/l;)V"}
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister -> y1.a:
    1:1:void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.FlutterRenderer:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.concurrent.atomic.AtomicLong nextTextureId -> b
    android.view.Surface surface -> c
    boolean isDisplayingFlutterUi -> d
    android.os.Handler handler -> e
    java.util.Set onTrimMemoryListeners -> f
    java.util.List imageReaderProducers -> g
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> h
    1:1:boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean):0:0 -> a
    1:1:java.util.List access$100(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> b
    1:1:void access$300(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> c
    1:1:io.flutter.embedding.engine.FlutterJNI access$400(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> d
    1:1:android.os.Handler access$500(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> e
    1:1:void access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> f
    1:1:void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void dispatchPointerDataPacket(java.nio.ByteBuffer,int):0:0 -> h
    1:1:boolean isDisplayingFlutterUi():0:0 -> i
    1:1:boolean isSoftwareRenderingEnabled():0:0 -> j
    1:1:void onTrimMemory(int):0:0 -> k
    1:1:void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void scheduleEngineFrame():0:0 -> m
    1:1:void setSemanticsEnabled(boolean):0:0 -> n
    1:1:void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$g;)V"}
    1:1:void startRenderingToSurface(android.view.Surface,boolean):0:0 -> p
    1:1:void stopRenderingToSurface():0:0 -> q
    1:1:void surfaceChanged(int,int):0:0 -> r
    1:1:void swapSurface(android.view.Surface):0:0 -> s
    1:1:void unregisterTexture(long):0:0 -> t
io.flutter.embedding.engine.renderer.FlutterRenderer$1 -> io.flutter.embedding.engine.renderer.FlutterRenderer$a:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.engine.renderer.FlutterRenderer$2 -> io.flutter.embedding.engine.renderer.FlutterRenderer$b:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    1:1:void onResume(androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:void onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:void onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:void onPause(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:void onStop(androidx.lifecycle.LifecycleOwner):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
    1:1:void onStart(androidx.lifecycle.LifecycleOwner):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/m;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature -> io.flutter.embedding.engine.renderer.FlutterRenderer$c:
    android.graphics.Rect bounds -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state -> c
    1:1:void <init>(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;)V"}
    2:2:void <init>(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;Lio/flutter/embedding/engine/renderer/FlutterRenderer$d;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState -> io.flutter.embedding.engine.renderer.FlutterRenderer$d:
    int encodedValue -> e
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN -> f
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT -> g
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED -> h
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES -> i
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/renderer/FlutterRenderer$d;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType -> io.flutter.embedding.engine.renderer.FlutterRenderer$e:
    int encodedValue -> e
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN -> f
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD -> g
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE -> h
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT -> i
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES -> j
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.renderer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(android.media.ImageReader$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.engine.renderer.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m(android.media.ImageReader$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.engine.renderer.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$2.m(android.media.ImageReader$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.engine.renderer.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$3.m(android.media.ImageReader$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.engine.renderer.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.SyncFence io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.engine.renderer.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$1.m(android.hardware.SyncFence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline6 -> io.flutter.embedding.engine.renderer.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$9$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline7 -> io.flutter.embedding.engine.renderer.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$9$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$a:
    android.media.Image image -> a
    long queuedTime -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> c
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$b:
    android.media.ImageReader reader -> a
    java.util.ArrayDeque imageQueue -> b
    boolean closed -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> d
    1:1:void $r8$lambda$bzaxe3VKCrf8UL5Q_l-VbmtBXzA(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader,android.media.ImageReader):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;Landroid/media/ImageReader;)V"}
    1:1:java.util.ArrayDeque access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;)Ljava/util/ArrayDeque;"}
    1:1:boolean canPrune():0:0 -> c
    1:1:void close():0:0 -> d
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$a;"}
    1:1:void lambda$new$0(android.media.ImageReader):0:0 -> f
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage queueImage(android.media.Image):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/Image;)Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$a;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;)V"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0:0 -> onImageAvailable
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable -> io.flutter.embedding.engine.renderer.FlutterRenderer$f:
    long id -> e
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> f
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics -> io.flutter.embedding.engine.renderer.FlutterRenderer$g:
    float devicePixelRatio -> a
    int width -> b
    int height -> c
    int viewPaddingTop -> d
    int viewPaddingRight -> e
    int viewPaddingBottom -> f
    int viewPaddingLeft -> g
    int viewInsetTop -> h
    int viewInsetRight -> i
    int viewInsetBottom -> j
    int viewInsetLeft -> k
    int systemGestureInsetTop -> l
    int systemGestureInsetRight -> m
    int systemGestureInsetBottom -> n
    int systemGestureInsetLeft -> o
    int physicalTouchSlop -> p
    java.util.List displayFeatures -> q
    1:1:boolean validate():0:0 -> a
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.j:
    void onFlutterUiNoLongerDisplayed() -> b
    void onFlutterUiDisplayed() -> f
io.flutter.embedding.engine.renderer.RenderSurface -> io.flutter.embedding.engine.renderer.k:
    void pause() -> b
    void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> c
    void detachFromRenderer() -> d
    void resume() -> e
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
    1:1:void <init>(android.graphics.SurfaceTexture):0:0 -> <init>
    2:2:void <init>(android.graphics.SurfaceTexture,java.lang.Runnable):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.AccessibilityChannel -> z1.a:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler -> c
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;Lio/flutter/embedding/engine/FlutterJNI;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;)Lz1/a$b;"}
    1:1:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;)V"}
    1:1:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;Ljava/lang/Object;)V"}
    1:1:void onAndroidAccessibilityDisabled():0:0 -> d
    1:1:void onAndroidAccessibilityEnabled():0:0 -> e
    1:1:void setAccessibilityFeatures(int):0:0 -> f
    1:1:void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a$b;)V"}
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1 -> z1.a$a:
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.AccessibilityChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;)V"}
    1:1:void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler -> z1.a$b:
    void onTooltip(java.lang.String) -> c
    void onFocus(int) -> d
    void onLongPress(int) -> e
    void announce(java.lang.String) -> f
    void onTap(int) -> g
io.flutter.embedding.engine.systemchannels.BackGestureChannel -> z1.f:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler -> b
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:java.util.Map backEventToJsonMap(android.window.BackEvent):0:0 -> a
    1:1:void cancelBackGesture():0:0 -> b
    1:1:void commitBackGesture():0:0 -> c
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> d
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> e
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline0 -> z1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$0.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline1 -> z1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$1.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline2 -> z1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$2.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline3 -> z1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$3.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1 -> z1.f$a:
    io.flutter.embedding.engine.systemchannels.BackGestureChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.BackGestureChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/f;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel -> z1.g:
    io.flutter.plugin.common.MethodChannel channel -> a
    java.util.Map componentNameToResults -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/g;)Lt1/a;"}
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1 -> z1.g$a:
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/g;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel -> z1.i:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;)V"}
    1:1:void $r8$lambda$RL0HJ5TnZGrDabOeA71yhjryCe4(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i$a;Ljava/lang/Object;)V"}
    1:1:io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i$a;)La2/a$e;"}
    1:1:java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i$b;Z)Ljava/util/Map;"}
    1:1:void lambda$createReplyHandler$0(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i$a;Ljava/lang/Object;)V"}
    1:1:void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i$b;ZLz1/i$a;)V"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel$$ExternalSyntheticLambda0 -> z1.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.<init>(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/i$a;)V"}
    1:1:void io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.reply(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler -> z1.i$a:
    void onFrameworkResponse(boolean) -> a
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent -> z1.i$b:
    android.view.KeyEvent event -> a
    java.lang.Character complexCharacter -> b
    1:1:void <init>(android.view.KeyEvent,java.lang.Character):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.KeyboardChannel -> z1.j:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler keyboardMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler access$000(io.flutter.embedding.engine.systemchannels.KeyboardChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;)Lz1/j$b;"}
    1:1:void setKeyboardMethodHandler(io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j$b;)V"}
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1 -> z1.j$a:
    java.util.Map pressedState -> a
    io.flutter.embedding.engine.systemchannels.KeyboardChannel this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.KeyboardChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler -> z1.j$b:
    java.util.Map getKeyboardState() -> a
io.flutter.embedding.engine.systemchannels.LifecycleChannel -> z1.k:
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastAndroidState -> a
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastFlutterState -> b
    boolean lastFocus -> c
    io.flutter.plugin.common.BasicMessageChannel channel -> d
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)V"}
    2:2:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:void aWindowIsFocused():0:0 -> a
    1:1:void appIsDetached():0:0 -> b
    1:1:void appIsInactive():0:0 -> c
    1:1:void appIsPaused():0:0 -> d
    1:1:void appIsResumed():0:0 -> e
    1:1:void noWindowsAreFocused():0:0 -> f
    1:1:void sendState(io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k$b;Z)V"}
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1 -> z1.k$a:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$LifecycleChannel$AppLifecycleState -> a
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState -> z1.k$b:
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState DETACHED -> e
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState RESUMED -> f
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState INACTIVE -> g
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState HIDDEN -> h
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState PAUSED -> i
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/k$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/k$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/k$b;"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel -> z1.l:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l;)Lz1/l$b;"}
    1:1:void sendLocales(java.util.List):0:0 -> b
    1:1:void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l$b;)V"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1 -> z1.l$a:
    io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler -> z1.l$b:
    java.lang.String getStringResource(java.lang.String,java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.MouseCursorChannel -> z1.m:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/m;)Lz1/m$b;"}
    1:1:void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/m$b;)V"}
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1 -> z1.m$a:
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/m;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler -> z1.m$b:
    void activateSystemCursor(java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.NavigationChannel -> z1.n:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler -> b
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:void popRoute():0:0 -> a
    1:1:void pushRouteInformation(java.lang.String):0:0 -> b
    1:1:void setInitialRoute(java.lang.String):0:0 -> c
io.flutter.embedding.engine.systemchannels.NavigationChannel$1 -> z1.n$a:
    io.flutter.embedding.engine.systemchannels.NavigationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.NavigationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/n;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel -> z1.o:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;)Lz1/o$h;"}
    1:1:int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;Lorg/json/JSONArray;)I"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;Lorg/json/JSONObject;)Lz1/o$c;"}
    1:1:java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;Lorg/json/JSONArray;)Ljava/util/List;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;Ljava/lang/String;)Lz1/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;Lorg/json/JSONObject;)Lz1/o$j;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Lz1/o$c;"}
    1:1:int decodeOrientations(org.json.JSONArray):0:0 -> h
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Lz1/o$j;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$k;"}
    1:1:java.util.List decodeSystemUiOverlays(org.json.JSONArray):0:0 -> k
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$h;)V"}
    1:1:void systemChromeChanged(boolean):0:0 -> m
io.flutter.embedding.engine.systemchannels.PlatformChannel$1 -> z1.o$a:
    io.flutter.embedding.engine.systemchannels.PlatformChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.PlatformChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$2 -> z1.o$b:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation -> a
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode -> c
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription -> z1.o$c:
    int color -> a
    java.lang.String label -> b
    1:1:void <init>(int,java.lang.String):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness -> z1.o$d:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$d;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat -> z1.o$e:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$e;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation -> z1.o$f:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$f;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType -> z1.o$g:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK -> j
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$g;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler -> z1.o$h:
    void popSystemNavigator() -> a
    void setSystemUiChangeListener() -> b
    void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$g;)V"}
    void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$i;)V"}
    void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$c;)V"}
    void restoreSystemUiOverlays() -> f
    void setFrameworkHandlesBack(boolean) -> g
    void setClipboardData(java.lang.String) -> h
    java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$e;)Ljava/lang/CharSequence;"}
    void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$j;)V"}
    void setPreferredOrientations(int) -> k
    void showSystemOverlays(java.util.List) -> l
    void share(java.lang.String) -> m
    void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$k;)V"}
    boolean clipboardHasStrings() -> o
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType -> z1.o$i:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$i;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle -> z1.o$j:
    java.lang.Integer statusBarColor -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness -> b
    java.lang.Boolean systemStatusBarContrastEnforced -> c
    java.lang.Integer systemNavigationBarColor -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness -> e
    java.lang.Integer systemNavigationBarDividerColor -> f
    java.lang.Boolean systemNavigationBarContrastEnforced -> g
    1:1:void <init>(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;Lz1/o$d;Ljava/lang/Boolean;Ljava/lang/Integer;Lz1/o$d;Ljava/lang/Integer;Ljava/lang/Boolean;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode -> z1.o$k:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$k;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay -> z1.o$l:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/o$l;"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel -> z1.q:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q;)Lz1/q$g;"}
    1:1:java.lang.String access$100(java.lang.Exception):0:0 -> b
    1:1:java.lang.String detailedExceptionString(java.lang.Exception):0:0 -> c
    1:1:void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$g;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 -> z1.q$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void $r8$lambda$pMHhgo3vaqdzoS3K-OFSVbonOaM(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Lz1/q$c;)V"}
    1:1:void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void lambda$resize$0(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;Lz1/q$c;)V"}
    1:1:void offset(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
    1:1:void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$ExternalSyntheticLambda0 -> z1.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$d;)V"}
    1:1:void io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$c;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized -> z1.q$b:
    void run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$c;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize -> z1.q$c:
    int width -> a
    int height -> b
    1:1:void <init>(int,int):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest -> z1.q$d:
    int viewId -> a
    java.lang.String viewType -> b
    double logicalWidth -> c
    double logicalHeight -> d
    double logicalTop -> e
    double logicalLeft -> f
    int direction -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode displayMode -> h
    java.nio.ByteBuffer params -> i
    1:1:void <init>(int,java.lang.String,double,double,double,double,int,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode,java.nio.ByteBuffer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;DDDDILz1/q$d$a;Ljava/nio/ByteBuffer;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode -> z1.q$d$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_VIRTUAL_FALLBACK -> e
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_HYBRID_FALLBACK -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode HYBRID_ONLY -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/q$d$a;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/q$d$a;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/q$d$a;"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest -> z1.q$e:
    int viewId -> a
    double newLogicalWidth -> b
    double newLogicalHeight -> c
    1:1:void <init>(int,double,double):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch -> z1.q$f:
    int viewId -> a
    java.lang.Number downTime -> b
    java.lang.Number eventTime -> c
    int action -> d
    int pointerCount -> e
    java.lang.Object rawPointerPropertiesList -> f
    java.lang.Object rawPointerCoords -> g
    int metaState -> h
    int buttonState -> i
    float xPrecision -> j
    float yPrecision -> k
    int deviceId -> l
    int edgeFlags -> m
    int source -> n
    int flags -> o
    long motionEventId -> p
    1:1:void <init>(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler -> z1.q$g:
    void clearFocus(int) -> a
    void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$f;)V"}
    void synchronizeToNativeViewHierarchy(boolean) -> c
    void offset(int,double,double) -> d
    void setDirection(int,int) -> e
    void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$d;)V"}
    long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$d;)J"}
    void dispose(int) -> h
    void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$e;Lz1/q$b;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel -> z1.r:
    io.flutter.plugin.common.MethodChannel channel -> a
    android.content.pm.PackageManager packageManager -> b
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler processTextMethodHandler -> c
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,android.content.pm.PackageManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;Landroid/content/pm/PackageManager;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r;)Lz1/r$b;"}
    1:1:void setMethodHandler(io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r$b;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1 -> z1.r$a:
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler -> z1.r$b:
    java.util.Map queryTextActions() -> c
    void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ZLa2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.RestorationChannel -> z1.s:
    boolean waitForRestorationData -> a
    byte[] restorationData -> b
    io.flutter.plugin.common.MethodChannel channel -> c
    io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest -> d
    boolean engineHasProvidedData -> e
    boolean frameworkHasRequestedData -> f
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> g
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j;Z)V"}
    2:2:void <init>(io.flutter.embedding.engine.dart.DartExecutor,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;Z)V"}
    1:1:byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;)[B"}
    1:1:byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;[B)[B"}
    1:1:boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;Z)Z"}
    1:1:boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;)Z"}
    1:1:java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;[B)Ljava/util/Map;"}
    1:1:io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;La2/j$d;)La2/j$d;"}
    1:1:void clearData():0:0 -> g
    1:1:byte[] getRestorationData():0:0 -> h
    1:1:java.util.Map packageData(byte[]):0:0 -> i
    1:1:void setRestorationData(byte[]):0:0 -> j
io.flutter.embedding.engine.systemchannels.RestorationChannel$1 -> z1.s$a:
    byte[] val$data -> a
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;[B)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    1:1:void notImplemented():0:0 -> c
io.flutter.embedding.engine.systemchannels.RestorationChannel$2 -> z1.s$b:
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SettingsChannel -> z1.t:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue access$100():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/t$a;"}
    1:1:android.util.DisplayMetrics getPastDisplayMetrics(int):0:0 -> b
    1:1:boolean hasNonlinearTextScalingSupport():0:0 -> c
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/t$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue -> z1.t$a:
    java.util.concurrent.ConcurrentLinkedQueue sentQueue -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration currentConfiguration -> b
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration previousEnqueuedConfiguration -> c
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.concurrent.ConcurrentLinkedQueue access$200(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/t$a;)Ljava/util/concurrent/ConcurrentLinkedQueue;"}
    1:1:io.flutter.plugin.common.BasicMessageChannel$Reply enqueueConfiguration(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/t$a$b;)La2/a$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration getConfiguration(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lz1/t$a$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1 -> z1.t$a$a:
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration val$configurationToRemove -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue,io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/t$a;Lz1/t$a$b;)V"}
    1:1:void reply(java.lang.Object):0:0 -> a
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration -> z1.t$a$b:
    int generationNumber -> a
    android.util.DisplayMetrics displayMetrics -> b
    int nextConfigGeneration -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.util.DisplayMetrics):0:0 -> <init>
    1:1:android.util.DisplayMetrics access$000(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/t$a$b;)Landroid/util/DisplayMetrics;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder -> z1.t$b:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    java.util.Map message -> b
    android.util.DisplayMetrics displayMetrics -> c
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)V"}
    1:1:void send():0:0 -> a
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setBrieflyShowPassword(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lz1/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setDisplayMetrics(android.util.DisplayMetrics):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/DisplayMetrics;)Lz1/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setNativeSpellCheckServiceDefined(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lz1/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/t$c;)Lz1/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lz1/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lz1/t$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness -> z1.t$c:
    java.lang.String name -> e
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light -> f
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark -> g
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/t$c;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/t$c;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/t$c;"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel -> z1.u:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler spellCheckMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler access$000(io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/u;)Lz1/u$b;"}
    1:1:void setSpellCheckMethodHandler(io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/u$b;)V"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1 -> z1.u$a:
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/u;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler -> z1.u$b:
    void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SystemChannel -> z1.v:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:void sendMemoryPressureWarning():0:0 -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel -> z1.w:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w;)Lz1/w$f;"}
    1:1:void commitContent(int,java.util.Map):0:0 -> b
    1:1:java.util.HashMap createEditingDeltaJSON(java.util.ArrayList):0:0 -> c
    1:1:java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int):0:0 -> d
    1:1:void done(int):0:0 -> e
    1:1:void go(int):0:0 -> f
    1:1:void newline(int):0:0 -> g
    1:1:void next(int):0:0 -> h
    1:1:void performPrivateCommand(int,java.lang.String,android.os.Bundle):0:0 -> i
    1:1:void previous(int):0:0 -> j
    1:1:void requestExistingInputState():0:0 -> k
    1:1:void search(int):0:0 -> l
    1:1:void send(int):0:0 -> m
    1:1:void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$f;)V"}
    1:1:void unspecifiedAction(int):0:0 -> o
    1:1:void updateEditingState(int,java.lang.String,int,int,int,int):0:0 -> p
    1:1:void updateEditingStateWithDeltas(int,java.util.ArrayList):0:0 -> q
    1:1:void updateEditingStateWithTag(int,java.util.HashMap):0:0 -> r
io.flutter.embedding.engine.systemchannels.TextInputChannel$1 -> z1.w$a:
    io.flutter.embedding.engine.systemchannels.TextInputChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration -> z1.w$b:
    boolean obscureText -> a
    boolean autocorrect -> b
    boolean enableSuggestions -> c
    boolean enableIMEPersonalizedLearning -> d
    boolean enableDeltaModel -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType -> g
    java.lang.Integer inputAction -> h
    java.lang.String actionLabel -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill -> j
    java.lang.String[] contentCommitMimeTypes -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields -> l
    1:1:void <init>(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZZZZLz1/w$d;Lz1/w$c;Ljava/lang/Integer;Ljava/lang/String;Lz1/w$b$a;[Ljava/lang/String;[Lz1/w$b;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Lz1/w$b;"}
    1:1:java.lang.Integer inputActionFromTextInputAction(java.lang.String):0:0 -> b
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill -> z1.w$b$a:
    java.lang.String uniqueIdentifier -> a
    java.lang.String[] hints -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState -> c
    java.lang.String hintText -> d
    1:1:void <init>(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lz1/w$e;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Lz1/w$b$a;"}
    1:1:java.lang.String translateAutofillHint(java.lang.String):0:0 -> b
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType -> z1.w$c:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type -> a
    boolean isSigned -> b
    boolean isDecimal -> c
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$g;ZZ)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Lz1/w$c;"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization -> z1.w$d:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES -> h
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/w$d;"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState -> z1.w$e:
    java.lang.String text -> a
    int selectionStart -> b
    int selectionEnd -> c
    int composingStart -> d
    int composingEnd -> e
    1:1:void <init>(java.lang.String,int,int,int,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Lz1/w$e;"}
    1:1:boolean hasComposing():0:0 -> b
    1:1:boolean hasSelection():0:0 -> c
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler -> z1.w$f:
    void sendAppPrivateCommand(java.lang.String,android.os.Bundle) -> a
    void clearClient() -> b
    void show() -> c
    void setPlatformViewClient(int,boolean) -> d
    void setEditableSizeAndTransform(double,double,double[]) -> e
    void requestAutofill() -> f
    void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz1/w$b;)V"}
    void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$e;)V"}
    void finishAutofillContext(boolean) -> i
    void hide() -> j
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType -> z1.w$g:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME -> h
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER -> j
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE -> l
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS -> m
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL -> n
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD -> o
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE -> p
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/w$g;"}
io.flutter.plugin.common.BasicMessageChannel -> a2.a:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MessageCodec codec -> c
    io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue -> d
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Ljava/lang/String;La2/h;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Ljava/lang/String;La2/h;La2/c$c;)V"}
    1:1:io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)La2/h;"}
    1:1:java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)Ljava/lang/String;"}
    1:1:void send(java.lang.Object):0:0 -> c
    1:1:void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
    1:1:void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a$d;)V"}
io.flutter.plugin.common.BasicMessageChannel$1 -> a2.a$a:
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler -> a2.a$b:
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;La2/a$d;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;La2/a$d;La2/a$a;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;La2/c$b;)V"}
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1 -> a2.a$b$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback -> a
    io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a$b;La2/c$b;)V"}
    1:1:void reply(java.lang.Object):0:0 -> a
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler -> a2.a$c:
    io.flutter.plugin.common.BasicMessageChannel$Reply callback -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;La2/a$e;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;La2/a$e;La2/a$a;)V"}
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.plugin.common.BasicMessageChannel$MessageHandler -> a2.a$d:
    void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugin.common.BasicMessageChannel$Reply -> a2.a$e:
    void reply(java.lang.Object) -> a
io.flutter.plugin.common.BinaryMessenger -> a2.c:
    io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c$d;)La2/c$c;"}
    io.flutter.plugin.common.BinaryMessenger$TaskQueue makeBackgroundTaskQueue() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c$c;"}
    void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;La2/c$c;)V"}
    void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;La2/c$b;)V"}
    void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;La2/c$a;)V"}
io.flutter.plugin.common.BinaryMessenger$-CC -> a2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue io.flutter.plugin.common.BinaryMessenger.makeBackgroundTaskQueue():0:0 -> a
    1:1:io.flutter.plugin.common.BinaryMessenger$TaskQueue $default$makeBackgroundTaskQueue(io.flutter.plugin.common.BinaryMessenger):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;)La2/c$c;"}
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler -> a2.c$a:
    void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;La2/c$b;)V"}
io.flutter.plugin.common.BinaryMessenger$BinaryReply -> a2.c$b:
    void reply(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.BinaryMessenger$TaskQueue -> a2.c$c:
io.flutter.plugin.common.BinaryMessenger$TaskQueueOptions -> a2.c$d:
    boolean isSerial -> a
    1:1:void <init>():0:0 -> <init>
    1:1:boolean getIsSerial():0:0 -> a
io.flutter.plugin.common.FlutterException -> a2.d:
    java.lang.String code -> e
    java.lang.Object details -> f
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.Object):0:0 -> <init>
io.flutter.plugin.common.JSONMessageCodec -> a2.e:
    io.flutter.plugin.common.JSONMessageCodec INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
io.flutter.plugin.common.JSONMethodCodec -> a2.f:
    io.flutter.plugin.common.JSONMethodCodec INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;)Ljava/nio/ByteBuffer;"}
    1:1:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object):0:0 -> b
    1:1:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)La2/i;"}
    1:1:java.lang.Object decodeEnvelope(java.nio.ByteBuffer):0:0 -> d
    1:1:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String):0:0 -> e
    1:1:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object):0:0 -> f
    1:1:java.lang.Object unwrapNull(java.lang.Object):0:0 -> g
io.flutter.plugin.common.JSONUtil -> a2.g:
    1:1:java.lang.Object wrap(java.lang.Object):0:0 -> a
io.flutter.plugin.common.MessageCodec -> a2.h:
    java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer encodeMessage(java.lang.Object) -> b
io.flutter.plugin.common.MethodCall -> a2.i:
    java.lang.String method -> a
    java.lang.Object arguments -> b
    1:1:void <init>(java.lang.String,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object argument(java.lang.String):0:0 -> a
    1:1:java.lang.Object arguments():0:0 -> b
    1:1:boolean hasArgument(java.lang.String):0:0 -> c
io.flutter.plugin.common.MethodChannel -> a2.j:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MethodCodec codec -> c
    io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue -> d
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Ljava/lang/String;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Ljava/lang/String;La2/k;)V"}
    3:3:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Ljava/lang/String;La2/k;La2/c$c;)V"}
    1:1:io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j;)La2/k;"}
    1:1:java.lang.String access$100(io.flutter.plugin.common.MethodChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j;)Ljava/lang/String;"}
    1:1:void invokeMethod(java.lang.String,java.lang.Object):0:0 -> c
    1:1:void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;La2/j$d;)V"}
    1:1:void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$c;)V"}
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler -> a2.j$a:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j;La2/j$c;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;La2/c$b;)V"}
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1 -> a2.j$a$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply -> a
    io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j$a;La2/c$b;)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    1:1:void notImplemented():0:0 -> c
io.flutter.plugin.common.MethodChannel$IncomingResultHandler -> a2.j$b:
    io.flutter.plugin.common.MethodChannel$Result callback -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/j;La2/j$d;)V"}
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.plugin.common.MethodChannel$MethodCallHandler -> a2.j$c:
    void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;La2/j$d;)V"}
io.flutter.plugin.common.MethodChannel$Result -> a2.j$d:
    void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    void success(java.lang.Object) -> b
    void notImplemented() -> c
io.flutter.plugin.common.MethodCodec -> a2.k:
    java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;)Ljava/nio/ByteBuffer;"}
    java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object) -> b
    io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)La2/i;"}
    java.lang.Object decodeEnvelope(java.nio.ByteBuffer) -> d
    java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String) -> e
    java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object) -> f
io.flutter.plugin.common.PluginRegistry$ActivityResultListener -> a2.l:
    boolean onActivityResult(int,int,android.content.Intent) -> a
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener -> a2.m:
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> b
io.flutter.plugin.common.StandardMessageCodec -> a2.n:
    io.flutter.plugin.common.StandardMessageCodec INSTANCE -> a
    boolean LITTLE_ENDIAN -> b
    java.nio.charset.Charset UTF8 -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
    1:1:void readAlignment(java.nio.ByteBuffer,int):0:0 -> c
    1:1:byte[] readBytes(java.nio.ByteBuffer):0:0 -> d
    1:1:int readSize(java.nio.ByteBuffer):0:0 -> e
    1:1:java.lang.Object readValue(java.nio.ByteBuffer):0:0 -> f
    1:1:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer):0:0 -> g
    1:1:void writeAlignment(java.io.ByteArrayOutputStream,int):0:0 -> h
    1:1:void writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> i
    1:1:void writeChar(java.io.ByteArrayOutputStream,int):0:0 -> j
    1:1:void writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> k
    1:1:void writeFloat(java.io.ByteArrayOutputStream,float):0:0 -> l
    1:1:void writeInt(java.io.ByteArrayOutputStream,int):0:0 -> m
    1:1:void writeLong(java.io.ByteArrayOutputStream,long):0:0 -> n
    1:1:void writeSize(java.io.ByteArrayOutputStream,int):0:0 -> o
    1:1:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> p
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> a2.n$a:
    void <init>() -> <init>
    1:1:byte[] buffer():0:0 -> a
io.flutter.plugin.common.StandardMethodCodec -> a2.o:
    io.flutter.plugin.common.StandardMessageCodec messageCodec -> a
    io.flutter.plugin.common.StandardMethodCodec INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.plugin.common.StandardMessageCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/n;)V"}
    1:1:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/i;)Ljava/nio/ByteBuffer;"}
    1:1:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object):0:0 -> b
    1:1:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)La2/i;"}
    1:1:java.lang.Object decodeEnvelope(java.nio.ByteBuffer):0:0 -> d
    1:1:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String):0:0 -> e
    1:1:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object):0:0 -> f
io.flutter.plugin.common.StringCodec -> a2.p:
    java.nio.charset.Charset UTF8 -> a
    io.flutter.plugin.common.StringCodec INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
    1:1:java.lang.String decodeMessage(java.nio.ByteBuffer):0:0 -> c
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.String):0:0 -> d
io.flutter.plugin.editing.FlutterTextUtils -> io.flutter.plugin.editing.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    1:1:int getOffsetAfter(java.lang.CharSequence,int):0:0 -> a
    1:1:int getOffsetBefore(java.lang.CharSequence,int):0:0 -> b
    1:1:boolean isEmoji(int):0:0 -> c
    1:1:boolean isEmojiModifier(int):0:0 -> d
    1:1:boolean isEmojiModifierBase(int):0:0 -> e
    1:1:boolean isKeycapBase(int):0:0 -> f
    1:1:boolean isRegionalIndicatorSymbol(int):0:0 -> g
    1:1:boolean isTagSpecChar(int):0:0 -> h
    1:1:boolean isVariationSelector(int):0:0 -> i
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$4c819f8c8ad227d9802b1a549dcea82babc035996fc947c4508511c1b3807738$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1 -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$a:
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$2cc005fa53a8049e244b5ffce5b2e308ea0dcdb0fed28f3a858d514c163d0b4f$0.m(android.view.WindowInsetsAnimation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsAnimation io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$7.m(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$8.m(android.view.WindowInsets$Builder,int,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.editing.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$9$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline5 -> io.flutter.plugin.editing.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$9$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$b:
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    1:1:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback):0:0 -> <init>
    2:2:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback;Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback$a;)V"}
io.flutter.plugin.editing.InputConnectionAdaptor -> io.flutter.plugin.editing.m:
    android.view.View mFlutterView -> a
    int mClient -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> c
    io.flutter.plugin.editing.ListenableEditingState mEditable -> d
    android.view.inputmethod.EditorInfo mEditorInfo -> e
    android.view.inputmethod.ExtractedTextRequest mExtractRequest -> f
    boolean mMonitorCursorUpdate -> g
    android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder -> h
    android.view.inputmethod.ExtractedText mExtractedText -> i
    android.view.inputmethod.InputMethodManager mImm -> j
    android.text.Layout mLayout -> k
    io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils -> l
    io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate keyboardDelegate -> m
    int batchEditNestDepth -> n
    1:1:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILz1/w;Lio/flutter/plugin/editing/m$a;Lio/flutter/plugin/editing/n;Landroid/view/inputmethod/EditorInfo;)V"}
    2:2:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILz1/w;Lio/flutter/plugin/editing/m$a;Lio/flutter/plugin/editing/n;Landroid/view/inputmethod/EditorInfo;Lio/flutter/embedding/engine/FlutterJNI;)V"}
    1:1:void didChangeEditingState(boolean,boolean,boolean):0:0 -> a
    1:1:boolean doPerformContextMenuAction(int):0:0 -> b
    1:1:android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo():0:0 -> c
    1:1:android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest):0:0 -> d
    1:1:boolean handleHorizontalMovement(boolean,boolean):0:0 -> e
    1:1:boolean handleKeyEvent(android.view.KeyEvent):0:0 -> f
    1:1:boolean handleVerticalMovement(boolean,boolean):0:0 -> g
    1:1:byte[] readStreamFully(java.io.InputStream,int):0:0 -> h
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$0.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.ClipDescription io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$1.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Uri io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$3.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$5.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate -> io.flutter.plugin.editing.m$a:
    boolean handleEvent(android.view.KeyEvent) -> b
io.flutter.plugin.editing.ListenableEditingState -> io.flutter.plugin.editing.n:
    int mBatchEditNestDepth -> e
    int mChangeNotificationDepth -> f
    java.util.ArrayList mListeners -> g
    java.util.ArrayList mPendingListeners -> h
    java.util.ArrayList mBatchTextEditingDeltas -> i
    java.lang.String mToStringCache -> j
    java.lang.String mTextWhenBeginBatchEdit -> k
    int mSelectionStartWhenBeginBatchEdit -> l
    int mSelectionEndWhenBeginBatchEdit -> m
    int mComposingStartWhenBeginBatchEdit -> n
    int mComposingEndWhenBeginBatchEdit -> o
    android.view.inputmethod.BaseInputConnection mDummyConnection -> p
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$e;Landroid/view/View;)V"}
    1:1:void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;)V"}
    1:1:void beginBatchEdit():0:0 -> b
    1:1:void clearBatchDeltas():0:0 -> c
    1:1:void endBatchEdit():0:0 -> d
    1:1:java.util.ArrayList extractBatchTextEditingDeltas():0:0 -> e
    1:1:int getComposingEnd():0:0 -> f
    1:1:int getComposingStart():0:0 -> g
    1:1:int getSelectionEnd():0:0 -> h
    1:1:int getSelectionStart():0:0 -> i
    1:1:void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;ZZZ)V"}
    1:1:void notifyListenersIfNeeded(boolean,boolean,boolean):0:0 -> k
    1:1:void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;)V"}
    1:1:void setComposingRange(int,int):0:0 -> m
    1:1:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$e;)V"}
    1:1:android.text.Editable replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
    2:2:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
io.flutter.plugin.editing.ListenableEditingState$1 -> io.flutter.plugin.editing.n$a:
    android.text.Editable val$self -> a
    io.flutter.plugin.editing.ListenableEditingState this$0 -> b
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher -> io.flutter.plugin.editing.n$b:
    void didChangeEditingState(boolean,boolean,boolean) -> a
io.flutter.plugin.editing.SpellCheckPlugin -> io.flutter.plugin.editing.o:
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel mSpellCheckChannel -> a
    android.view.textservice.TextServicesManager mTextServicesManager -> b
    android.view.textservice.SpellCheckerSession mSpellCheckerSession -> c
    io.flutter.plugin.common.MethodChannel$Result pendingResult -> d
    1:1:void <init>(android.view.textservice.TextServicesManager,io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/textservice/TextServicesManager;Lz1/u;)V"}
    1:1:void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;La2/j$d;)V"}
    1:1:void destroy():0:0 -> b
    1:1:void performSpellCheck(java.lang.String,java.lang.String):0:0 -> c
io.flutter.plugin.editing.TextEditingDelta -> io.flutter.plugin.editing.p:
    java.lang.CharSequence oldText -> a
    java.lang.CharSequence deltaText -> b
    int deltaStart -> c
    int deltaEnd -> d
    int newSelectionStart -> e
    int newSelectionEnd -> f
    int newComposingStart -> g
    int newComposingEnd -> h
    1:1:void <init>(java.lang.CharSequence,int,int,int,int):0:0 -> <init>
    2:2:void <init>(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int):0:0 -> <init>
    1:1:void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int):0:0 -> a
    1:1:org.json.JSONObject toJSON():0:0 -> b
io.flutter.plugin.editing.TextInputPlugin -> io.flutter.plugin.editing.k0:
    android.view.View mView -> a
    android.view.inputmethod.InputMethodManager mImm -> b
    android.view.autofill.AutofillManager afm -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> d
    io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration -> f
    android.util.SparseArray autofillConfiguration -> g
    io.flutter.plugin.editing.ListenableEditingState mEditable -> h
    boolean mRestartInputPending -> i
    android.view.inputmethod.InputConnection lastInputConnection -> j
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> k
    android.graphics.Rect lastClientRect -> l
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback -> m
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState -> n
    boolean isInputConnectionLocked -> o
    1:1:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lz1/w;Lio/flutter/plugin/platform/r;)V"}
    1:1:void setPlatformViewTextInputClient(int,boolean):0:0 -> A
    1:1:void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz1/w$b;)V"}
    1:1:void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lz1/w$e;)V"}
    1:1:void showTextInput(android.view.View):0:0 -> D
    1:1:void unlockPlatformViewInputConnection():0:0 -> E
    1:1:void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$b;)V"}
    1:1:void didChangeEditingState(boolean,boolean,boolean):0:0 -> a
    1:1:android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Landroid/view/View;"}
    1:1:io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Lio/flutter/plugin/editing/k0$c;"}
    1:1:void access$200(io.flutter.plugin.editing.TextInputPlugin):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;Landroid/view/View;)V"}
    1:1:void access$400(io.flutter.plugin.editing.TextInputPlugin):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Landroid/view/autofill/AutofillManager;"}
    1:1:void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;IZ)V"}
    1:1:void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;DD[D)V"}
    1:1:void autofill(android.util.SparseArray):0:0 -> j
    1:1:void clearTextInputClient():0:0 -> k
    1:1:boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$e;Lz1/w$e;)Z"}
    1:1:android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lio/flutter/embedding/android/k0;Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"}
    1:1:void destroy():0:0 -> n
    1:1:android.view.inputmethod.InputMethodManager getInputMethodManager():0:0 -> o
    1:1:boolean handleKeyEvent(android.view.KeyEvent):0:0 -> p
    1:1:void hideTextInput(android.view.View):0:0 -> q
    1:1:int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$c;ZZZZLz1/w$d;)I"}
    1:1:void lockPlatformViewInputConnection():0:0 -> s
    1:1:boolean needsAutofill():0:0 -> t
    1:1:void notifyValueChanged(java.lang.String):0:0 -> u
    1:1:void notifyViewEntered():0:0 -> v
    1:1:void notifyViewExited():0:0 -> w
    1:1:void onProvideAutofillVirtualStructure(android.view.ViewStructure,int):0:0 -> x
    1:1:void saveEditableSizeAndTransform(double,double,double[]):0:0 -> y
    1:1:void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> z
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillId io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$0.m(android.view.ViewStructure):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$10.m(android.view.ViewStructure,android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline10 -> io.flutter.plugin.editing.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$7.m(android.view.ViewStructure,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline11 -> io.flutter.plugin.editing.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$04208460e651786f72e333e91f0aa7676853e5f852a815d1a35bfb1aa660fbc3$0.m(android.view.autofill.AutofillManager,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline12 -> io.flutter.plugin.editing.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Class io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$5a2148ec32b344cd3d3fdaf17d3e08695b023a81eb15238f7dd60b7857b83fa0$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline13 -> io.flutter.plugin.editing.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillManager io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$5a2148ec32b344cd3d3fdaf17d3e08695b023a81eb15238f7dd60b7857b83fa0$2.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline14 -> io.flutter.plugin.editing.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillValue io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$8693f9705179b32774124c2325baf330fb0498fcc7507e40655d130c4bd5824f$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline15 -> io.flutter.plugin.editing.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$8693f9705179b32774124c2325baf330fb0498fcc7507e40655d130c4bd5824f$1.m(android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline16 -> io.flutter.plugin.editing.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$2$167979d7e754c907d06dfc44ef11126f153da013177993deb4c41ec718baa78e$1.m(android.view.autofill.AutofillManager,android.view.View,int,android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline17 -> io.flutter.plugin.editing.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$2$c4faf0440f3301184472391db70fbc212b094ce96da5013bccb54e79433792fa$0.m(android.view.autofill.AutofillManager,android.view.View,int,android.graphics.Rect):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$11.m(android.view.ViewStructure,int,int,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillValue io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$12.m(java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.editing.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$1.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline5 -> io.flutter.plugin.editing.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ViewStructure io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$2.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline6 -> io.flutter.plugin.editing.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$3.m(android.view.ViewStructure,android.view.autofill.AutofillId,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline7 -> io.flutter.plugin.editing.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$4.m(android.view.ViewStructure,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline8 -> io.flutter.plugin.editing.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$5.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline9 -> io.flutter.plugin.editing.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$6.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$1 -> io.flutter.plugin.editing.k0$a:
    io.flutter.plugin.editing.TextInputPlugin this$0 -> a
    1:1:void sendAppPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> a
    1:1:void clearClient():0:0 -> b
    1:1:void show():0:0 -> c
    1:1:void setPlatformViewClient(int,boolean):0:0 -> d
    1:1:void setEditableSizeAndTransform(double,double,double[]):0:0 -> e
    1:1:void requestAutofill():0:0 -> f
    1:1:void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz1/w$b;)V"}
    1:1:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/w$e;)V"}
    1:1:void finishAutofillContext(boolean):0:0 -> i
    1:1:void hide():0:0 -> j
io.flutter.plugin.editing.TextInputPlugin$1$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$1$$InternalSyntheticApiModelOutline$2$a706a7eaf3a6647c571296dd4b19a9aa478a2dbfcb873e58d346d4607ff319be$0.m(android.view.autofill.AutofillManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$1$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$1$$InternalSyntheticApiModelOutline$2$a706a7eaf3a6647c571296dd4b19a9aa478a2dbfcb873e58d346d4607ff319be$1.m(android.view.autofill.AutofillManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$2 -> io.flutter.plugin.editing.k0$b:
    boolean val$isAffine -> a
    double[] val$matrix -> b
    double[] val$minMax -> c
    io.flutter.plugin.editing.TextInputPlugin this$0 -> d
    1:1:void inspect(double,double):0:0 -> a
io.flutter.plugin.editing.TextInputPlugin$InputTarget -> io.flutter.plugin.editing.k0$c:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type -> a
    int id -> b
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type -> io.flutter.plugin.editing.k0$c$a:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET -> e
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT -> f
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VIRTUAL_DISPLAY_PLATFORM_VIEW -> g
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PHYSICAL_DISPLAY_PLATFORM_VIEW -> h
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES -> i
    1:1:io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/plugin/editing/k0$c$a;"}
io.flutter.plugin.editing.TextInputPlugin$MinMax -> io.flutter.plugin.editing.k0$d:
    void inspect(double,double) -> a
io.flutter.plugin.localization.LocalizationPlugin -> b2.g:
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> a
    android.content.Context context -> b
    io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler -> c
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz1/l;)V"}
    1:1:android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/g;)Landroid/content/Context;"}
    1:1:java.util.Locale localeFromString(java.lang.String):0:0 -> b
    1:1:java.util.Locale resolveNativeLocale(java.util.List):0:0 -> c
    1:1:void sendLocalesToFlutter(android.content.res.Configuration):0:0 -> d
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline0 -> b2.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline1 -> b2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$1.m(android.os.LocaleList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline2 -> b2.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$2.m(android.os.LocaleList,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline3 -> b2.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$3.m(java.util.List,java.util.Collection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline4 -> b2.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale$LanguageRange io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$9$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$0.m(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline5 -> b2.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$9$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$1 -> b2.g$a:
    io.flutter.plugin.localization.LocalizationPlugin this$0 -> a
    1:1:void <init>(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/g;)V"}
    1:1:java.lang.String getStringResource(java.lang.String,java.lang.String):0:0 -> a
io.flutter.plugin.mouse.MouseCursorPlugin -> c2.b:
    io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> b
    java.util.HashMap systemCursorConstants -> c
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/b$c;Lz1/m;)V"}
    1:1:android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/b;Ljava/lang/String;)Landroid/view/PointerIcon;"}
    1:1:io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/b;)Lc2/b$c;"}
    1:1:void destroy():0:0 -> c
    1:1:android.view.PointerIcon resolveSystemCursor(java.lang.String):0:0 -> d
io.flutter.plugin.mouse.MouseCursorPlugin$$ExternalSyntheticApiModelOutline0 -> c2.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object io.flutter.plugin.mouse.MouseCursorPlugin$$InternalSyntheticApiModelOutline$2$13fd82c24a20d9ccb523762e03e691b8db1270b5e7779d677df150a434fe20e1$0.m(java.util.HashMap,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.mouse.MouseCursorPlugin$1 -> c2.b$a:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> a
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/b;)V"}
    1:1:void activateSystemCursor(java.lang.String):0:0 -> a
io.flutter.plugin.mouse.MouseCursorPlugin$2 -> c2.b$b:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> e
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/b;)V"}
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate -> c2.b$c:
    android.view.PointerIcon getSystemPointerIcon(int) -> c
    void setPointerIcon(android.view.PointerIcon) -> setPointerIcon
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.a:
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean):0:0 -> a
    1:1:void setAccessibilityBridge(io.flutter.view.AccessibilityBridge):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
io.flutter.plugin.platform.PlatformOverlayView -> io.flutter.plugin.platform.b:
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityDelegate -> g
io.flutter.plugin.platform.PlatformPlugin -> io.flutter.plugin.platform.h:
    android.app.Activity activity -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> b
    io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate -> c
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme -> d
    int mEnabledOverlays -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler -> f
    1:1:void <init>(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lz1/o;Lio/flutter/plugin/platform/h$d;)V"}
    1:1:void setSystemChromeEnabledSystemUIOverlays(java.util.List):0:0 -> A
    1:1:void setSystemChromePreferredOrientations(int):0:0 -> B
    1:1:void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$j;)V"}
    1:1:void share(java.lang.String):0:0 -> D
    1:1:void updateSystemUiOverlays():0:0 -> E
    1:1:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$g;)V"}
    1:1:void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Lz1/o$i;)V"}
    1:1:void access$100(io.flutter.plugin.platform.PlatformPlugin,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;I)V"}
    1:1:java.lang.CharSequence access$1000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Lz1/o$e;)Ljava/lang/CharSequence;"}
    1:1:void access$1100(io.flutter.plugin.platform.PlatformPlugin,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/lang/String;)V"}
    1:1:boolean access$1200(io.flutter.plugin.platform.PlatformPlugin):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)Z"}
    1:1:void access$1300(io.flutter.plugin.platform.PlatformPlugin,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/lang/String;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel access$1400(io.flutter.plugin.platform.PlatformPlugin):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)Lz1/o;"}
    1:1:void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Lz1/o$c;)V"}
    1:1:void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/util/List;)V"}
    1:1:void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Lz1/o$k;)V"}
    1:1:void access$500(io.flutter.plugin.platform.PlatformPlugin):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:void access$600(io.flutter.plugin.platform.PlatformPlugin):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Lz1/o$j;)V"}
    1:1:void access$800(io.flutter.plugin.platform.PlatformPlugin,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Z)V"}
    1:1:void access$900(io.flutter.plugin.platform.PlatformPlugin):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:boolean clipboardHasStrings():0:0 -> p
    1:1:void destroy():0:0 -> q
    1:1:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$e;)Ljava/lang/CharSequence;"}
    1:1:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$i;)V"}
    1:1:void popSystemNavigator():0:0 -> t
    1:1:void restoreSystemChromeSystemUIOverlays():0:0 -> u
    1:1:void setClipboardData(java.lang.String):0:0 -> v
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> w
    1:1:void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$c;)V"}
    1:1:void setSystemChromeChangeListener():0:0 -> y
    1:1:void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$k;)V"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.platform.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$0.m(android.view.Window,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$1.m(android.view.Window,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.platform.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$2.m(android.view.Window,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.platform.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.ActivityManager$TaskDescription io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$9$b2a4e8a5d811cba4baa05d0d4d81eb75d968beda73bb8093557ff22eebe40135$0.m(java.lang.String,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.platform.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$9$b2a4e8a5d811cba4baa05d0d4d81eb75d968beda73bb8093557ff22eebe40135$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$1 -> io.flutter.plugin.platform.h$a:
    io.flutter.plugin.platform.PlatformPlugin this$0 -> a
    1:1:void popSystemNavigator():0:0 -> a
    1:1:void setSystemUiChangeListener():0:0 -> b
    1:1:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$g;)V"}
    1:1:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$i;)V"}
    1:1:void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$c;)V"}
    1:1:void restoreSystemUiOverlays():0:0 -> f
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> g
    1:1:void setClipboardData(java.lang.String):0:0 -> h
    1:1:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$e;)Ljava/lang/CharSequence;"}
    1:1:void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$j;)V"}
    1:1:void setPreferredOrientations(int):0:0 -> k
    1:1:void showSystemOverlays(java.util.List):0:0 -> l
    1:1:void share(java.lang.String):0:0 -> m
    1:1:void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o$k;)V"}
    1:1:boolean clipboardHasStrings():0:0 -> o
io.flutter.plugin.platform.PlatformPlugin$2 -> io.flutter.plugin.platform.h$b:
    android.view.View val$decorView -> a
    io.flutter.plugin.platform.PlatformPlugin this$0 -> b
    1:1:void $r8$lambda$9FqC1sSWYJ_hsKn0VYLiRoem8So(io.flutter.plugin.platform.PlatformPlugin$2,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h$b;I)V"}
    1:1:void lambda$onSystemUiVisibilityChange$0(int):0:0 -> b
io.flutter.plugin.platform.PlatformPlugin$2$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformPlugin$2 io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.f$0 -> e
    int io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.f$1 -> f
    1:1:void io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.<init>(io.flutter.plugin.platform.PlatformPlugin$2,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h$b;I)V"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$3 -> io.flutter.plugin.platform.h$c:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType -> a
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness -> c
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate -> io.flutter.plugin.platform.h$d:
    boolean popSystemNavigator() -> a
    void setFrameworkHandlesBack(boolean) -> g
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.j:
io.flutter.plugin.platform.PlatformViewFactory -> io.flutter.plugin.platform.k:
io.flutter.plugin.platform.PlatformViewRegistry -> io.flutter.plugin.platform.l:
io.flutter.plugin.platform.PlatformViewRegistryImpl -> io.flutter.plugin.platform.m:
    java.util.Map viewFactories -> a
    1:1:io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/plugin/platform/k;"}
io.flutter.plugin.platform.PlatformViewWrapper -> io.flutter.plugin.platform.n:
    void setLayoutParams(android.widget.FrameLayout$LayoutParams) -> a
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate -> io.flutter.plugin.platform.o:
    void detachAccessibilityBridge() -> a
    void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    boolean usesVirtualDisplay(int) -> c
    android.view.View getPlatformViewById(int) -> d
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.r:
    io.flutter.plugin.platform.PlatformViewRegistryImpl registry -> a
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> b
    android.content.Context context -> c
    io.flutter.embedding.android.FlutterView flutterView -> d
    io.flutter.view.TextureRegistry textureRegistry -> e
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel -> g
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> h
    java.util.HashMap vdControllers -> i
    java.util.HashMap contextToEmbeddedView -> j
    android.util.SparseArray platformViews -> k
    android.util.SparseArray platformViewParent -> l
    android.util.SparseArray overlayLayerViews -> m
    android.util.SparseArray viewWrappers -> n
    int nextOverlayLayerId -> o
    boolean flutterViewConvertedToImageView -> p
    boolean synchronizeToNativeViewHierarchy -> q
    java.util.HashSet currentFrameUsedOverlayLayerIds -> r
    java.util.HashSet currentFrameUsedPlatformViewIds -> s
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> t
    boolean usesSoftwareRendering -> u
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler -> v
    java.lang.Class[] VIEW_TYPES_REQUIRE_VIRTUAL_DISPLAY -> w
    1:1:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface():0:0 -> A
    1:1:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.plugin.platform.PlatformOverlayView):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/b;)Lio/flutter/embedding/engine/FlutterOverlaySurface;"}
    1:1:io.flutter.plugin.platform.PlatformView createPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$d;Z)Lio/flutter/plugin/platform/j;"}
    1:1:void destroyOverlaySurfaces():0:0 -> D
    1:1:void detach():0:0 -> E
    1:1:void detachFromView():0:0 -> F
    1:1:void detachTextInputPlugin():0:0 -> G
    1:1:void diposeAllViews():0:0 -> H
    1:1:void enforceMinimumAndroidApiVersion(int):0:0 -> I
    1:1:void ensureValidRequest(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$d;)V"}
    1:1:void finishFrame(boolean):0:0 -> K
    1:1:float getDisplayDensity():0:0 -> L
    1:1:io.flutter.plugin.platform.PlatformViewRegistry getRegistry():0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/l;"}
    1:1:void initializePlatformViewIfNeeded(int):0:0 -> N
    1:1:void initializeRootImageViewIfNeeded():0:0 -> O
    1:1:void lambda$onEndFrame$3():0:0 -> P
    1:1:void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;)V"}
    1:1:void onAttachedToJNI():0:0 -> R
    1:1:void onBeginFrame():0:0 -> S
    1:1:void onDetachedFromJNI():0:0 -> T
    1:1:void onDisplayOverlaySurface(int,int,int,int,int):0:0 -> U
    1:1:void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack):0:0 -> V
    1:1:void onEndFrame():0:0 -> W
    1:1:void onPreEngineRestart():0:0 -> X
    1:1:void onResume():0:0 -> Y
    1:1:void onTrimMemory(int):0:0 -> Z
    1:1:void detachAccessibilityBridge():0:0 -> a
    1:1:android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float):0:0 -> a0
    1:1:void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:java.util.List parsePointerCoordsList(java.lang.Object,float):0:0 -> b0
    1:1:boolean usesVirtualDisplay(int):0:0 -> c
    1:1:android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object):0:0 -> c0
    1:1:android.view.View getPlatformViewById(int):0:0 -> d
    1:1:java.util.List parsePointerPropertiesList(java.lang.Object):0:0 -> d0
    1:1:void $r8$lambda$JeMmwXVKKKBO6MRWj6kpn9gXeqM(io.flutter.plugin.platform.PlatformViewsController):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)V"}
    1:1:void removeOverlaySurfaces():0:0 -> e0
    1:1:void access$000(io.flutter.plugin.platform.PlatformViewsController,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;I)V"}
    1:1:void setSoftwareRendering(boolean):0:0 -> f0
    1:1:void access$100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lz1/q$d;)V"}
    1:1:int toLogicalPixels(double,float):0:0 -> g0
    1:1:int access$1100(io.flutter.plugin.platform.PlatformViewsController,double):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;D)I"}
    1:1:android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLz1/q$f;Z)Landroid/view/MotionEvent;"}
    1:1:float access$1200(io.flutter.plugin.platform.PlatformViewsController):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)F"}
    1:1:int toPhysicalPixels(double):0:0 -> i0
    1:1:void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/y;)V"}
    1:1:void translateMotionEvent(android.view.MotionEvent,android.view.MotionEvent$PointerCoords[]):0:0 -> j0
    1:1:android.content.Context access$1500(io.flutter.plugin.platform.PlatformViewsController):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/content/Context;"}
    1:1:void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;)V"}
    1:1:boolean access$1600(int):0:0 -> l
    1:1:boolean validateDirection(int):0:0 -> l0
    1:1:boolean access$1702(io.flutter.plugin.platform.PlatformViewsController,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Z)Z"}
    1:1:void access$1800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/y;)V"}
    1:1:int access$1900(io.flutter.plugin.platform.PlatformViewsController,double,float):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;DF)I"}
    1:1:void access$200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/j;Lz1/q$d;)V"}
    1:1:android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/util/SparseArray;"}
    1:1:io.flutter.view.TextureRegistry access$400(io.flutter.plugin.platform.PlatformViewsController):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Lio/flutter/view/TextureRegistry;"}
    1:1:io.flutter.embedding.android.FlutterView access$500(io.flutter.plugin.platform.PlatformViewsController):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Lio/flutter/embedding/android/c0;"}
    1:1:android.util.SparseArray access$900(io.flutter.plugin.platform.PlatformViewsController):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/util/SparseArray;"}
    1:1:void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/view/TextureRegistry;Ls1/a;)V"}
    1:1:void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> w
    1:1:void attachToView(io.flutter.embedding.android.FlutterView):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/c0;)V"}
    1:1:boolean checkInputConnectionProxy(android.view.View):0:0 -> y
    1:1:void configureForHybridComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/j;Lz1/q$d;)V"}
io.flutter.plugin.platform.PlatformViewsController$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformViewsController io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.f$0 -> e
    1:1:void io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.<init>(io.flutter.plugin.platform.PlatformViewsController):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)V"}
    1:1:void io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformViewsController$1 -> io.flutter.plugin.platform.r$a:
    io.flutter.plugin.platform.PlatformViewsController this$0 -> a
    1:1:void clearFocus(int):0:0 -> a
    1:1:void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$f;)V"}
    1:1:void synchronizeToNativeViewHierarchy(boolean):0:0 -> c
    1:1:void offset(int,double,double):0:0 -> d
    1:1:void setDirection(int,int):0:0 -> e
    1:1:void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$d;)V"}
    1:1:long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$d;)J"}
    1:1:void dispose(int):0:0 -> h
    1:1:void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q$e;Lz1/q$b;)V"}
    1:1:void $r8$lambda$s1Tgy9tT2SoAjsa1sAiyORJW1wI(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r$a;Lio/flutter/plugin/platform/y;FLz1/q$b;)V"}
    1:1:void lambda$resize$0(io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;FLz1/q$b;)V"}
io.flutter.plugin.platform.PlatformViewsController$1$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformViewsController$1 io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$0 -> e
    io.flutter.plugin.platform.VirtualDisplayController io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$1 -> f
    float io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$2 -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$3 -> h
    1:1:void io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.<init>(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r$a;Lio/flutter/plugin/platform/y;FLz1/q$b;)V"}
    1:1:void io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup -> io.flutter.plugin.platform.s:
    android.graphics.Rect viewBounds -> a
    android.graphics.Rect childRect -> b
    1:1:int atMost(int):0:0 -> a
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
    1:1:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/a;Lio/flutter/plugin/platform/SingleViewPresentation$d;Landroid/view/View$OnFocusChangeListener;Z)V"}
    2:2:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/j;Lio/flutter/plugin/platform/a;ILandroid/view/View$OnFocusChangeListener;)V"}
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.SingleViewPresentation$a:
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.SingleViewPresentation$b:
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.view.inputmethod.InputMethodManager):0:0 -> <init>
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.SingleViewPresentation$c:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    android.view.WindowManager windowManager -> b
    android.content.Context flutterAppWindowContext -> c
    1:1:android.view.WindowManager getWindowManager():0:0 -> a
    1:1:boolean isCalledFromAlertDialog():0:0 -> b
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.SingleViewPresentation$d:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup -> b
    1:1:io.flutter.plugin.platform.PlatformView access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/j;"}
    1:1:io.flutter.plugin.platform.PlatformView access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/j;)Lio/flutter/plugin/platform/j;"}
    1:1:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/s;"}
    1:1:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/s;)Lio/flutter/plugin/platform/s;"}
    1:1:io.flutter.plugin.platform.WindowManagerHandler access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/z;"}
    1:1:io.flutter.plugin.platform.WindowManagerHandler access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/z;)Lio/flutter/plugin/platform/z;"}
io.flutter.plugin.platform.SingleViewWindowManager -> io.flutter.plugin.platform.x:
    android.view.WindowManager delegate -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowRootView -> b
    1:1:void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
    2:2:void addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.platform.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$573fc38649fc257e28a079cf4377be00db9d882e093f28e1ee82d89fe072ef33$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$953a50dd753cf993668a5b905947d63b7720120083cc0cc67dc3ddce466ca3e4$0.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.platform.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9b7d142d148c8d8a447edf4d1839198704c3a116777d705c82e3b6107b939476$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.platform.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9f3564965ce31d288bde81f28853716eb3fae64fc3aab63ca1d7fbaecc73ea7a$0.m(android.view.WindowManager,java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.VirtualDisplayController -> io.flutter.plugin.platform.y:
    void clearSurface() -> a
    void dispatchTouchEvent(android.view.MotionEvent) -> b
    int getRenderTargetHeight() -> c
    int getRenderTargetWidth() -> d
    android.view.View getView() -> e
    void onInputConnectionLocked() -> f
    void onInputConnectionUnlocked() -> g
    void resetSurface() -> h
    void resize(int,int,java.lang.Runnable) -> i
io.flutter.plugin.platform.WindowManagerHandler -> io.flutter.plugin.platform.z:
io.flutter.plugin.text.ProcessTextPlugin -> d2.c:
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel -> a
    android.content.pm.PackageManager packageManager -> b
    io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding -> c
    java.util.Map resolveInfosById -> d
    java.util.Map requestsByCode -> e
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:java.util.Map queryTextActions():0:0 -> c
    1:1:void onDetachedFromActivity():0:0 -> d
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/c;)V"}
    1:1:void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ZLa2/j$d;)V"}
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> i
    1:1:void cacheResolveInfos():0:0 -> j
io.flutter.plugin.text.ProcessTextPlugin$$ExternalSyntheticApiModelOutline0 -> d2.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageManager$ResolveInfoFlags io.flutter.plugin.text.ProcessTextPlugin$$InternalSyntheticApiModelOutline$2$dc93043cc68045efc8ccd0a0e7c3269815a87650a2619b2ad812579627478cc8$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.text.ProcessTextPlugin$$ExternalSyntheticApiModelOutline1 -> d2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.plugin.text.ProcessTextPlugin$$InternalSyntheticApiModelOutline$2$dc93043cc68045efc8ccd0a0e7c3269815a87650a2619b2ad812579627478cc8$1.m(android.content.pm.PackageManager,android.content.Intent,android.content.pm.PackageManager$ResolveInfoFlags):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.pathprovider.Messages -> e2.i:
    1:1:java.util.ArrayList wrapError(java.lang.Throwable):0:0 -> a
io.flutter.plugins.pathprovider.Messages$PathProviderApi -> e2.i$a:
    java.lang.String getTemporaryPath() -> a
    java.lang.String getApplicationCachePath() -> c
    java.lang.String getApplicationDocumentsPath() -> d
    java.util.List getExternalCachePaths() -> f
    java.lang.String getExternalStoragePath() -> g
    java.lang.String getApplicationSupportPath() -> h
    java.util.List getExternalStoragePaths(io.flutter.plugins.pathprovider.Messages$StorageDirectory) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$c;)Ljava/util/List;"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda0 -> e2.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$0.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$0.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$0.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda1 -> e2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$1.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$1.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$1.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda2 -> e2.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$2.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$2.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$2.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda3 -> e2.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$3.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$3.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$3.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda4 -> e2.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$4.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$4.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$4.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda5 -> e2.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$5.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$5.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$5.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$$ExternalSyntheticLambda6 -> e2.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.pathprovider.Messages$PathProviderApi io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$6.f$0 -> a
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$6.<init>(io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi$$InternalSyntheticLambda$3$42d3db6c0da2e6a03c0f2c4157d801fd268e129bea0637c3c7ce1639ea758416$6.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;La2/a$e;)V"}
io.flutter.plugins.pathprovider.Messages$PathProviderApi$-CC -> e2.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:io.flutter.plugin.common.MessageCodec io.flutter.plugins.pathprovider.Messages$PathProviderApi.getCodec():0:0 -> a
    1:3:io.flutter.plugin.common.MessageCodec getCodec():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/h;"}
    1:23:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$0(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> b
    1:23:void lambda$setUp$0(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    1:23:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$1(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> c
    1:23:void lambda$setUp$1(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    1:23:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$2(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> d
    1:23:void lambda$setUp$2(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    1:23:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$3(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> e
    1:23:void lambda$setUp$3(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    1:23:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$4(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> f
    1:23:void lambda$setUp$4(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    1:23:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$5(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> g
    1:23:void lambda$setUp$5(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    1:31:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.lambda$setUp$6(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> h
    1:31:void lambda$setUp$6(io.flutter.plugins.pathprovider.Messages$PathProviderApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$a;Ljava/lang/Object;La2/a$e;)V"}
    3:6:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> i
    3:6:void setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.pathprovider.Messages$PathProviderApi):0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Le2/i$a;)V"}
    1:1:void io.flutter.plugins.pathprovider.Messages$PathProviderApi.setUp(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugins.pathprovider.Messages$PathProviderApi):0:0 -> j
    1:1:void setUp(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugins.pathprovider.Messages$PathProviderApi):0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Ljava/lang/String;Le2/i$a;)V"}
io.flutter.plugins.pathprovider.Messages$PigeonCodec -> e2.i$b:
    io.flutter.plugins.pathprovider.Messages$PigeonCodec INSTANCE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer):0:0 -> g
    1:1:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> p
io.flutter.plugins.pathprovider.Messages$StorageDirectory -> e2.i$c:
    int index -> e
    io.flutter.plugins.pathprovider.Messages$StorageDirectory ROOT -> f
    io.flutter.plugins.pathprovider.Messages$StorageDirectory MUSIC -> g
    io.flutter.plugins.pathprovider.Messages$StorageDirectory PODCASTS -> h
    io.flutter.plugins.pathprovider.Messages$StorageDirectory RINGTONES -> i
    io.flutter.plugins.pathprovider.Messages$StorageDirectory ALARMS -> j
    io.flutter.plugins.pathprovider.Messages$StorageDirectory NOTIFICATIONS -> k
    io.flutter.plugins.pathprovider.Messages$StorageDirectory PICTURES -> l
    io.flutter.plugins.pathprovider.Messages$StorageDirectory MOVIES -> m
    io.flutter.plugins.pathprovider.Messages$StorageDirectory DOWNLOADS -> n
    io.flutter.plugins.pathprovider.Messages$StorageDirectory DCIM -> o
    io.flutter.plugins.pathprovider.Messages$StorageDirectory DOCUMENTS -> p
    io.flutter.plugins.pathprovider.Messages$StorageDirectory[] $VALUES -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    1:1:io.flutter.plugins.pathprovider.Messages$StorageDirectory[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le2/i$c;"}
    1:1:io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le2/i$c;"}
    1:1:io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le2/i$c;"}
io.flutter.plugins.pathprovider.PathProviderPlugin -> e2.j:
    android.content.Context context -> a
    void <init>() -> <init>
    1:1:java.lang.String getTemporaryPath():0:0 -> a
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:java.lang.String getApplicationCachePath():0:0 -> c
    1:1:java.lang.String getApplicationDocumentsPath():0:0 -> d
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/a$b;)V"}
    1:1:java.util.List getExternalCachePaths():0:0 -> f
    1:1:java.lang.String getExternalStoragePath():0:0 -> g
    1:1:java.lang.String getApplicationSupportPath():0:0 -> h
    1:1:java.util.List getExternalStoragePaths(io.flutter.plugins.pathprovider.Messages$StorageDirectory):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$c;)Ljava/util/List;"}
    1:1:java.lang.String getApplicationSupportDirectory():0:0 -> j
    1:1:java.lang.String getPathProviderApplicationDocumentsDirectory():0:0 -> k
    1:1:java.util.List getPathProviderExternalCacheDirectories():0:0 -> l
    1:1:java.util.List getPathProviderExternalStorageDirectories(io.flutter.plugins.pathprovider.Messages$StorageDirectory):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$c;)Ljava/util/List;"}
    1:1:java.lang.String getPathProviderStorageDirectory():0:0 -> n
    1:1:java.lang.String getPathProviderTemporaryDirectory():0:0 -> o
    1:1:java.lang.String getStorageDirectoryString(io.flutter.plugins.pathprovider.Messages$StorageDirectory):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i$c;)Ljava/lang/String;"}
    1:1:void setUp(io.flutter.plugin.common.BinaryMessenger,android.content.Context):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/c;Landroid/content/Context;)V"}
io.flutter.plugins.pathprovider.PathProviderPlugin$1 -> e2.j$a:
    int[] $SwitchMap$io$flutter$plugins$pathprovider$Messages$StorageDirectory -> a
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.util.HandlerCompat -> f2.a:
    1:1:android.os.Handler createAsyncHandler(android.os.Looper):0:0 -> a
io.flutter.util.PathUtils -> f2.c:
    1:1:java.lang.String getCacheDirectory(android.content.Context):0:0 -> a
    1:1:java.lang.String getDataDirPath(android.content.Context):0:0 -> b
    1:1:java.lang.String getDataDirectory(android.content.Context):0:0 -> c
    1:1:java.lang.String getFilesDir(android.content.Context):0:0 -> d
io.flutter.util.PathUtils$$ExternalSyntheticApiModelOutline0 -> f2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.io.File io.flutter.util.PathUtils$$InternalSyntheticApiModelOutline$2$c91e5e777cb21248c695a4194b0ebdf6921bd06a45d71c0191b2ba57388c3c5c$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.util.Preconditions -> f2.d:
    1:1:void checkState(boolean,java.lang.Object):0:0 -> a
io.flutter.util.Predicate -> f2.e:
    boolean test(java.lang.Object) -> test
io.flutter.util.TraceSection -> f2.f:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:void begin(java.lang.String):0:0 -> a
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> b
    1:1:java.lang.String cropSectionName(java.lang.String):0:0 -> c
    1:1:void close():0:0 -> close
    1:1:void end():0:0 -> d
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> e
    1:1:io.flutter.util.TraceSection scoped(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lf2/f;"}
io.flutter.util.ViewUtils -> f2.g:
    1:1:void calculateMaximumDisplayMetrics(android.content.Context,io.flutter.util.ViewUtils$DisplayUpdater):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lf2/g$a;)V"}
    1:1:android.app.Activity getActivity(android.content.Context):0:0 -> b
io.flutter.util.ViewUtils$DisplayUpdater -> f2.g$a:
    void updateDisplayMetrics(float,float,float) -> a
io.flutter.view.AccessibilityBridge -> io.flutter.view.l:
    int FOCUSABLE_FLAGS -> A
    int FIRST_RESOURCE_ID -> B
    int systemAction -> C
    android.view.View rootAccessibilityView -> a
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> b
    android.view.accessibility.AccessibilityManager accessibilityManager -> c
    io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder -> d
    io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate -> e
    android.content.ContentResolver contentResolver -> f
    java.util.Map flutterSemanticsTree -> g
    java.util.Map customAccessibilityActions -> h
    io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode -> i
    java.lang.Integer embeddedAccessibilityFocusedNodeId -> j
    java.lang.Integer embeddedInputFocusedNodeId -> k
    int accessibilityFeatureFlags -> l
    io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode -> m
    io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode -> n
    io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject -> o
    java.util.List flutterNavigationStack -> p
    int previousRouteId -> q
    java.lang.Integer lastLeftFrameInset -> r
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> s
    boolean accessibleNavigation -> t
    boolean isReleased -> u
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler -> v
    android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener -> w
    android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener -> x
    android.database.ContentObserver animationScaleObserver -> y
    int SCROLLABLE_ACTIONS -> z
    1:1:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lz1/a;Landroid/view/accessibility/AccessibilityManager;Landroid/content/ContentResolver;Lio/flutter/plugin/platform/o;)V"}
    2:2:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lz1/a;Landroid/view/accessibility/AccessibilityManager;Landroid/content/ContentResolver;Lio/flutter/view/AccessibilityViewEmbedder;Lio/flutter/plugin/platform/o;)V"}
    1:1:void handleTouchExploration(float,float,boolean):0:0 -> A
    1:1:boolean isAccessibilityEnabled():0:0 -> B
    1:1:boolean isImportant(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean isTouchExplorationEnabled():0:0 -> D
    1:1:boolean lambda$shouldSetCollectionInfo$0(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Z"}
    1:1:boolean lambda$shouldSetCollectionInfo$1(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int):0:0 -> G
    1:1:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int):0:0 -> H
    1:1:android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View):0:0 -> I
    1:1:android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int):0:0 -> J
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent):0:0 -> K
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean):0:0 -> L
    1:1:void onTouchExplorationExit():0:0 -> M
    1:1:void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;ILandroid/os/Bundle;Z)Z"}
    1:1:boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;ILandroid/os/Bundle;)Z"}
    1:1:void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;IZZ)V"}
    1:1:void release():0:0 -> R
    1:1:void sendAccessibilityEvent(int,int):0:0 -> S
    1:1:void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> T
    1:1:void sendLatestAccessibilityFlagsToFlutter():0:0 -> U
    1:1:void sendWindowContentChangeEvent(int):0:0 -> V
    1:1:void setAccessibilityPaneTitle(java.lang.String):0:0 -> W
    1:1:void setAccessibleNavigation(boolean):0:0 -> X
    1:1:void setBoldTextFlag():0:0 -> Y
    1:1:void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$k;)V"}
    1:1:boolean $r8$lambda$YZB7OHASiHhGuAwlsDaF5NL1-OU(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean $r8$lambda$rCW4KhEHJoU73TZTzdmyAQLb0vw(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Z"}
    1:1:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]):0:0 -> b0
    1:1:android.view.View access$100(io.flutter.view.AccessibilityBridge):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/view/View;"}
    1:1:void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> c0
    1:1:android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/content/ContentResolver;"}
    1:1:void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:int access$1172(io.flutter.view.AccessibilityBridge,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)I"}
    1:1:int access$1176(io.flutter.view.AccessibilityBridge,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)I"}
    1:1:void access$1200(io.flutter.view.AccessibilityBridge):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:void access$1300(io.flutter.view.AccessibilityBridge):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:android.view.accessibility.AccessibilityEvent access$200(io.flutter.view.AccessibilityBridge,int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;II)Landroid/view/accessibility/AccessibilityEvent;"}
    1:1:void access$300(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;Landroid/view/accessibility/AccessibilityEvent;)V"}
    1:1:boolean access$400(io.flutter.view.AccessibilityBridge):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Z"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$500(io.flutter.view.AccessibilityBridge):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Lz1/a$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$600(io.flutter.view.AccessibilityBridge):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Lz1/a;"}
    1:1:void access$700(io.flutter.view.AccessibilityBridge,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;Z)V"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$7000(io.flutter.view.AccessibilityBridge,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)Lio/flutter/view/l$l;"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$7100(io.flutter.view.AccessibilityBridge,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)Lio/flutter/view/l$h;"}
    1:1:int access$7400():0:0 -> q
    1:1:int access$7500():0:0 -> r
    1:1:io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Lio/flutter/view/l$k;"}
    1:1:android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/view/accessibility/AccessibilityManager;"}
    1:1:android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String):0:0 -> u
    1:1:boolean doesLayoutInDisplayCutoutModeRequireLeftInset():0:0 -> v
    1:1:android.graphics.Rect getBoundsInScreen(android.graphics.Rect):0:0 -> w
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$h;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$l;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/view/l$l;"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$57f3d27dd81c9c0c9cb3f040a2bc2f4ed710e0754977b37dad43901665f0d5da$0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline1 -> io.flutter.view.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$969d1d15ebd1ecc79248d7e183a1573114e6c0da06897b17061c4ac59ef7fb41$0.m(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline2 -> io.flutter.view.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline3 -> io.flutter.view.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$2.m(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline4 -> io.flutter.view.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$3.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline5 -> io.flutter.view.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$4.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline6 -> io.flutter.view.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$5.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline7 -> io.flutter.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$2$55564eb321b33ff5930e54c9297f28898a6bb281bf60848001096cf5a3b01a74$0.m(android.view.View,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline8 -> io.flutter.view.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$2$c67eedf3b68f03bc228175118b5b0c43d36ae01689b1e7247ea04402d47da507$0.m(android.view.WindowManager$LayoutParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticLambda10 -> io.flutter.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$1.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticLambda9 -> io.flutter.view.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.view.AccessibilityBridge$SemanticsNode io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.f$0 -> a
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.<init>(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:boolean io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$1 -> io.flutter.view.l$a:
    io.flutter.view.AccessibilityBridge this$0 -> a
    1:1:void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> a
    1:1:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]):0:0 -> b
    1:1:void onTooltip(java.lang.String):0:0 -> c
    1:1:void onFocus(int):0:0 -> d
    1:1:void onLongPress(int):0:0 -> e
    1:1:void announce(java.lang.String):0:0 -> f
    1:1:void onTap(int):0:0 -> g
io.flutter.view.AccessibilityBridge$2 -> io.flutter.view.l$b:
    io.flutter.view.AccessibilityBridge this$0 -> a
io.flutter.view.AccessibilityBridge$3 -> io.flutter.view.l$c:
    io.flutter.view.AccessibilityBridge this$0 -> a
    1:1:void onChange(boolean):0:0 -> onChange
    2:2:void onChange(boolean,android.net.Uri):0:0 -> onChange
io.flutter.view.AccessibilityBridge$4 -> io.flutter.view.l$d:
    android.view.accessibility.AccessibilityManager val$accessibilityManager -> a
    io.flutter.view.AccessibilityBridge this$0 -> b
io.flutter.view.AccessibilityBridge$5 -> io.flutter.view.l$e:
    int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType -> a
io.flutter.view.AccessibilityBridge$AccessibilityFeature -> io.flutter.view.l$f:
    int value -> e
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION -> f
    io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS -> g
    io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS -> h
    io.flutter.view.AccessibilityBridge$AccessibilityFeature BOLD_TEXT -> i
    io.flutter.view.AccessibilityBridge$AccessibilityFeature REDUCE_MOTION -> j
    io.flutter.view.AccessibilityBridge$AccessibilityFeature HIGH_CONTRAST -> k
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ON_OFF_SWITCH_LABELS -> l
    io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES -> m
    1:1:io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$f;"}
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.l$g:
    io.flutter.view.AccessibilityBridge$Action SET_TEXT -> A
    io.flutter.view.AccessibilityBridge$Action FOCUS -> B
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> C
    int value -> e
    io.flutter.view.AccessibilityBridge$Action TAP -> f
    io.flutter.view.AccessibilityBridge$Action LONG_PRESS -> g
    io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT -> h
    io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT -> i
    io.flutter.view.AccessibilityBridge$Action SCROLL_UP -> j
    io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN -> k
    io.flutter.view.AccessibilityBridge$Action INCREASE -> l
    io.flutter.view.AccessibilityBridge$Action DECREASE -> m
    io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN -> n
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER -> o
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER -> p
    io.flutter.view.AccessibilityBridge$Action SET_SELECTION -> q
    io.flutter.view.AccessibilityBridge$Action COPY -> r
    io.flutter.view.AccessibilityBridge$Action CUT -> s
    io.flutter.view.AccessibilityBridge$Action PASTE -> t
    io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS -> u
    io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS -> v
    io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION -> w
    io.flutter.view.AccessibilityBridge$Action DISMISS -> x
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD -> y
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD -> z
    1:1:io.flutter.view.AccessibilityBridge$Action[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$g;"}
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction -> io.flutter.view.l$h:
    int resourceId -> a
    int id -> b
    int overrideId -> c
    java.lang.String label -> d
    java.lang.String hint -> e
    1:1:java.lang.String access$3000(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)Ljava/lang/String;"}
    1:1:java.lang.String access$3002(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
    1:1:java.lang.String access$3800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)Ljava/lang/String;"}
    1:1:java.lang.String access$3802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int access$4600(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$4602(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
    1:1:int access$4800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$4802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
io.flutter.view.AccessibilityBridge$Flag -> io.flutter.view.l$i:
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE -> A
    io.flutter.view.AccessibilityBridge$Flag IS_LINK -> B
    io.flutter.view.AccessibilityBridge$Flag IS_SLIDER -> C
    io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY -> D
    io.flutter.view.AccessibilityBridge$Flag IS_CHECK_STATE_MIXED -> E
    io.flutter.view.AccessibilityBridge$Flag HAS_EXPANDED_STATE -> F
    io.flutter.view.AccessibilityBridge$Flag IS_EXPANDED -> G
    io.flutter.view.AccessibilityBridge$Flag[] $VALUES -> H
    int value -> e
    io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE -> f
    io.flutter.view.AccessibilityBridge$Flag IS_CHECKED -> g
    io.flutter.view.AccessibilityBridge$Flag IS_SELECTED -> h
    io.flutter.view.AccessibilityBridge$Flag IS_BUTTON -> i
    io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD -> j
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED -> k
    io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE -> l
    io.flutter.view.AccessibilityBridge$Flag IS_ENABLED -> m
    io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP -> n
    io.flutter.view.AccessibilityBridge$Flag IS_HEADER -> o
    io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED -> p
    io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE -> q
    io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE -> r
    io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN -> s
    io.flutter.view.AccessibilityBridge$Flag IS_IMAGE -> t
    io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION -> u
    io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE -> v
    io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED -> w
    io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING -> x
    io.flutter.view.AccessibilityBridge$Flag IS_MULTILINE -> y
    io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY -> z
    1:1:io.flutter.view.AccessibilityBridge$Flag[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$i;"}
io.flutter.view.AccessibilityBridge$LocaleStringAttribute -> io.flutter.view.l$j:
    java.lang.String locale -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener -> io.flutter.view.l$k:
    void onAccessibilityChanged(boolean,boolean) -> a
io.flutter.view.AccessibilityBridge$SemanticsNode -> io.flutter.view.l$l:
    int previousNodeId -> A
    io.flutter.view.AccessibilityBridge$TextDirection textDirection -> B
    boolean hadPreviousConfig -> C
    int previousFlags -> D
    int previousActions -> E
    int previousTextSelectionBase -> F
    int previousTextSelectionExtent -> G
    float previousScrollPosition -> H
    float previousScrollExtentMax -> I
    float previousScrollExtentMin -> J
    java.lang.String previousValue -> K
    java.lang.String previousLabel -> L
    float left -> M
    float top -> N
    float right -> O
    float bottom -> P
    float[] transform -> Q
    io.flutter.view.AccessibilityBridge$SemanticsNode parent -> R
    java.util.List childrenInTraversalOrder -> S
    java.util.List childrenInHitTestOrder -> T
    java.util.List customAccessibilityActions -> U
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride -> V
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride -> W
    boolean inverseTransformDirty -> X
    float[] inverseTransform -> Y
    boolean globalGeometryDirty -> Z
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    float[] globalTransform -> a0
    int id -> b
    android.graphics.Rect globalRect -> b0
    int flags -> c
    int actions -> d
    int maxValueLength -> e
    int currentValueLength -> f
    int textSelectionBase -> g
    int textSelectionExtent -> h
    int platformViewId -> i
    int scrollChildren -> j
    int scrollIndex -> k
    float scrollPosition -> l
    float scrollExtentMax -> m
    float scrollExtentMin -> n
    java.lang.String identifier -> o
    java.lang.String label -> p
    java.util.List labelAttributes -> q
    java.lang.String value -> r
    java.util.List valueAttributes -> s
    java.lang.String increasedValue -> t
    java.util.List increasedValueAttributes -> u
    java.lang.String decreasedValue -> v
    java.util.List decreasedValueAttributes -> w
    java.lang.String hint -> x
    java.util.List hintAttributes -> y
    java.lang.String tooltip -> z
    1:1:java.lang.CharSequence access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:float max(float,float,float,float):0:0 -> A0
    1:1:java.lang.CharSequence access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:float min(float,float,float,float):0:0 -> B0
    1:1:java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lf2/e;)Z"}
    1:1:java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:void transformPoint(float[],float[],float[]):0:0 -> D0
    1:1:java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:void updateRecursively(float[],java.util.Set,boolean):0:0 -> E0
    1:1:int access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> F0
    1:1:java.lang.String access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.util.List access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/util/List;)Ljava/util/List;"}
    1:1:java.util.List access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:java.lang.String access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.util.List access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],boolean):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;[FZ)Lio/flutter/view/l$l;"}
    1:1:void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/nio/ByteBuffer;[Ljava/lang/String;[Ljava/nio/ByteBuffer;)V"}
    1:1:boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean access$5102(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Z)Z"}
    1:1:boolean access$5202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Z)Z"}
    1:1:void access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;[FLjava/util/Set;Z)V"}
    1:1:void access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/util/List;)V"}
    1:1:boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:float access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:float access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:float access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$g;)Z"}
    1:1:int access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.util.List access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:boolean access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$i;)Z"}
    1:1:int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.lang.String access$6500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lf2/e;)Z"}
    1:1:int access$6600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:int access$6700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Landroid/graphics/Rect;"}
    1:1:java.lang.String access$6800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.lang.String access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:void collectRoutes(java.util.List):0:0 -> g0
    1:1:boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:android.text.SpannableString createSpannableString(java.lang.String,java.util.List):0:0 -> h0
    1:1:boolean access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$i;)Z"}
    1:1:boolean didChangeLabel():0:0 -> i0
    1:1:int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean didScroll():0:0 -> j0
    1:1:int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:void ensureInverseTransform():0:0 -> k0
    1:1:int access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf2/e;)Lio/flutter/view/l$l;"}
    1:1:int access$2202(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:android.graphics.Rect getGlobalRect():0:0 -> m0
    1:1:int access$2212(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.CharSequence getHint():0:0 -> n0
    1:1:int access$2220(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.CharSequence getLabel():0:0 -> o0
    1:1:boolean access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$g;)Z"}
    1:1:java.lang.String getRouteName():0:0 -> p0
    1:1:int access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[]):0:0 -> q0
    1:1:java.lang.String access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.lang.CharSequence getTextFieldHint():0:0 -> r0
    1:1:java.lang.String access$2502(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.CharSequence getValue():0:0 -> s0
    1:1:int access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.lang.CharSequence getValueLabelHint():0:0 -> t0
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$l;"}
    1:1:boolean hadAction(io.flutter.view.AccessibilityBridge$Action):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$g;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$2702(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Lio/flutter/view/l$l;"}
    1:1:boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$i;)Z"}
    1:1:int access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean hasAction(io.flutter.view.AccessibilityBridge$Action):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$g;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$h;"}
    1:1:boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$i;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$h;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[],boolean):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([FZ)Lio/flutter/view/l$l;"}
    1:1:java.lang.CharSequence access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:boolean isFocusable():0:0 -> z0
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute -> io.flutter.view.l$m:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$StringAttribute -> io.flutter.view.l$n:
    int start -> a
    int end -> b
    io.flutter.view.AccessibilityBridge$StringAttributeType type -> c
    void <init>() -> <init>
    1:1:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$StringAttributeType -> io.flutter.view.l$o:
    io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT -> e
    io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE -> f
    io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES -> g
    1:1:io.flutter.view.AccessibilityBridge$StringAttributeType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$o;"}
io.flutter.view.AccessibilityBridge$TextDirection -> io.flutter.view.l$p:
    io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN -> e
    io.flutter.view.AccessibilityBridge$TextDirection LTR -> f
    io.flutter.view.AccessibilityBridge$TextDirection RTL -> g
    io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES -> h
    1:1:io.flutter.view.AccessibilityBridge$TextDirection[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$p;"}
    1:1:io.flutter.view.AccessibilityBridge$TextDirection fromInt(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$p;"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline1 -> io.flutter.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$10.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline2 -> io.flutter.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$11.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline3 -> io.flutter.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$1.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline4 -> io.flutter.view.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$2.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline5 -> io.flutter.view.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$3.m(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline6 -> io.flutter.view.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$4.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline7 -> io.flutter.view.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$6.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline8 -> io.flutter.view.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$7.m(android.view.accessibility.AccessibilityNodeInfo,java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline9 -> io.flutter.view.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$8.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$1 -> io.flutter.view.AccessibilityViewEmbedder$a:
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.AccessibilityViewEmbedder$b:
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$a;)V"}
    1:1:java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;)Ljava/lang/Long;"}
    1:1:int access$200(long):0:0 -> b
    1:1:java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;)Ljava/lang/Long;"}
    1:1:java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;I)Ljava/lang/Long;"}
    1:1:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityRecord;)Ljava/lang/Long;"}
    1:1:java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> f
    1:1:java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> g
    1:1:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> h
    1:1:java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> i
    1:1:int getVirtualNodeId(long):0:0 -> j
    1:1:boolean isBitSet(long,int):0:0 -> k
    1:1:java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> l
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.AccessibilityViewEmbedder$c:
    android.view.View view -> a
    int id -> b
    1:1:void <init>(android.view.View,int):0:0 -> <init>
    2:2:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILio/flutter/view/AccessibilityViewEmbedder$a;)V"}
io.flutter.view.TextureRegistry$ImageTextureEntry -> io.flutter.view.TextureRegistry$ImageTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$OnFrameConsumedListener -> io.flutter.view.TextureRegistry$a:
io.flutter.view.TextureRegistry$OnTrimMemoryListener -> io.flutter.view.TextureRegistry$b:
io.flutter.view.TextureRegistry$SurfaceProducer -> io.flutter.view.TextureRegistry$SurfaceProducer:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceProducer$Callback -> io.flutter.view.TextureRegistry$SurfaceProducer$a:
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.TextureRegistry$SurfaceTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC -> io.flutter.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/TextureRegistry$a;)V"}
    1:1:void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/TextureRegistry$b;)V"}
io.flutter.view.VsyncWaiter -> io.flutter.view.x:
    long refreshPeriodNanos -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.view.VsyncWaiter$FrameCallback frameCallback -> c
    io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate -> d
    io.flutter.view.VsyncWaiter instance -> e
    io.flutter.view.VsyncWaiter$DisplayListener listener -> f
    1:1:long access$000(io.flutter.view.VsyncWaiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)J"}
    1:1:long access$002(io.flutter.view.VsyncWaiter,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;J)J"}
    1:1:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)Lio/flutter/embedding/engine/FlutterJNI;"}
    1:1:io.flutter.view.VsyncWaiter$FrameCallback access$200(io.flutter.view.VsyncWaiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)Lio/flutter/view/x$c;"}
    1:1:io.flutter.view.VsyncWaiter$FrameCallback access$202(io.flutter.view.VsyncWaiter,io.flutter.view.VsyncWaiter$FrameCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;Lio/flutter/view/x$c;)Lio/flutter/view/x$c;"}
    1:1:io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/hardware/display/DisplayManager;Lio/flutter/embedding/engine/FlutterJNI;)Lio/flutter/view/x;"}
    1:1:void init():0:0 -> g
io.flutter.view.VsyncWaiter$1 -> io.flutter.view.x$a:
    io.flutter.view.VsyncWaiter this$0 -> a
    1:1:void asyncWaitForVsync(long):0:0 -> a
    1:1:android.view.Choreographer$FrameCallback obtainFrameCallback(long):0:0 -> b
io.flutter.view.VsyncWaiter$DisplayListener -> io.flutter.view.x$b:
    android.hardware.display.DisplayManager displayManager -> a
    io.flutter.view.VsyncWaiter this$0 -> b
    1:1:void register():0:0 -> a
io.flutter.view.VsyncWaiter$FrameCallback -> io.flutter.view.x$c:
    long cookie -> a
    io.flutter.view.VsyncWaiter this$0 -> b
    1:1:long access$302(io.flutter.view.VsyncWaiter$FrameCallback,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x$c;J)J"}
kotlin.ExceptionsKt -> g2.a:
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String stackTraceToString(java.lang.Throwable):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> g2.b:
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:java.lang.String stackTraceToString(java.lang.Throwable):0:0 -> b
kotlin.Function -> g2.c:
kotlin.KotlinNothingValueException -> g2.d:
    void <init>() -> <init>
kotlin.Lazy -> g2.e:
    java.lang.Object getValue() -> getValue
kotlin.LazyKt -> g2.f:
    1:1:kotlin.Lazy lazy(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)Lg2/e;"}
kotlin.LazyKt__LazyJVMKt -> g2.g:
    1:1:kotlin.Lazy lazy(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)Lg2/e;"}
kotlin.LazyKt__LazyKt -> g2.h:
kotlin.NoWhenBranchMatchedException -> g2.i:
    void <init>() -> <init>
kotlin.Pair -> g2.j:
    java.lang.Object first -> e
    java.lang.Object second -> f
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object component1():0:0 -> a
    1:1:java.lang.Object component2():0:0 -> b
    1:1:java.lang.Object getFirst():0:0 -> c
    1:1:java.lang.Object getSecond():0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.Result -> g2.k:
    kotlin.Result$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:java.lang.Throwable exceptionOrNull-impl(java.lang.Object):0:0 -> b
    1:1:boolean isFailure-impl(java.lang.Object):0:0 -> c
    1:1:boolean isSuccess-impl(java.lang.Object):0:0 -> d
kotlin.Result$Companion -> g2.k$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlin.Result$Failure -> g2.k$b:
    java.lang.Throwable exception -> e
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ResultKt -> g2.l:
    1:1:java.lang.Object createFailure(java.lang.Throwable):0:0 -> a
    1:1:void throwOnFailure(java.lang.Object):0:0 -> b
kotlin.SynchronizedLazyImpl -> g2.m:
    kotlin.jvm.functions.Function0 initializer -> e
    java.lang.Object _value -> f
    java.lang.Object lock -> g
    1:1:void <init>(kotlin.jvm.functions.Function0,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;Ljava/lang/Object;)V"}
    2:2:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;Ljava/lang/Object;ILs2/g;)V"}
    1:1:boolean isInitialized():0:0 -> a
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:java.lang.String toString():0:0 -> toString
kotlin.TuplesKt -> g2.n:
    1:1:kotlin.Pair to(java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Lg2/j;"}
kotlin.UNINITIALIZED_VALUE -> g2.o:
    kotlin.UNINITIALIZED_VALUE INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> g2.p:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlin.Unit -> g2.q:
    kotlin.Unit INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.AbstractCollection -> h2.a:
    void <init>() -> <init>
    int getSize() -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.AbstractCollection$toString$1 -> h2.a$a:
    kotlin.collections.AbstractCollection this$0 -> f
    1:1:void <init>(kotlin.collections.AbstractCollection):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh2/a;)V"}
    1:1:java.lang.CharSequence invoke(java.lang.Object):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
kotlin.collections.AbstractList -> h2.b:
    kotlin.collections.AbstractList$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void add(int,java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    java.lang.Object get(int) -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.util.List subList(int,int):0:0 -> subList
kotlin.collections.AbstractList$Companion -> h2.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:void checkElementIndex$kotlin_stdlib(int,int):0:0 -> a
    1:1:void checkPositionIndex$kotlin_stdlib(int,int):0:0 -> b
    1:1:void checkRangeIndexes$kotlin_stdlib(int,int,int):0:0 -> c
    1:1:int newCapacity$kotlin_stdlib(int,int):0:0 -> d
    1:1:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection):0:0 -> e
    1:1:int orderedHashCode$kotlin_stdlib(java.util.Collection):0:0 -> f
kotlin.collections.AbstractList$IteratorImpl -> h2.b$b:
    int index -> a
    kotlin.collections.AbstractList this$0 -> b
    1:1:void <init>(kotlin.collections.AbstractList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh2/b;)V"}
    1:1:int getIndex():0:0 -> a
    1:1:void setIndex(int):0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.collections.AbstractList$ListIteratorImpl -> h2.b$c:
    kotlin.collections.AbstractList this$0 -> c
    1:1:void <init>(kotlin.collections.AbstractList,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh2/b;I)V"}
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.AbstractList$SubList -> h2.b$d:
    kotlin.collections.AbstractList list -> f
    int fromIndex -> g
    int _size -> h
    1:1:void <init>(kotlin.collections.AbstractList,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh2/b;II)V"}
    1:1:int getSize():0:0 -> a
    1:1:java.lang.Object get(int):0:0 -> get
kotlin.collections.AbstractMutableList -> h2.c:
    void <init>() -> <init>
    int getSize() -> a
    java.lang.Object removeAt(int) -> b
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:int size():0:0 -> size
kotlin.collections.ArrayAsCollection -> h2.d:
    java.lang.Object[] values -> e
    boolean isVarargs -> f
    1:1:void <init>(java.lang.Object[],boolean):0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
kotlin.collections.ArrayDeque -> h2.e:
    int head -> e
    java.lang.Object[] elementData -> f
    int size -> g
    kotlin.collections.ArrayDeque$Companion Companion -> h
    java.lang.Object[] emptyElementData -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Object removeAt(int):0:0 -> b
    1:1:void addFirst(java.lang.Object):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:void addLast(java.lang.Object):0:0 -> d
    1:1:void copyCollectionElements(int,java.util.Collection):0:0 -> e
    1:1:void copyElements(int):0:0 -> f
    1:1:int decremented(int):0:0 -> g
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:void ensureCapacity(int):0:0 -> h
    1:1:int incremented(int):0:0 -> i
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:int negativeMod(int):0:0 -> j
    1:1:int positiveMod(int):0:0 -> k
    1:1:java.lang.Object removeFirst():0:0 -> l
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.lang.Object removeFirstOrNull():0:0 -> m
    1:1:java.lang.Object removeLast():0:0 -> n
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
kotlin.collections.ArrayDeque$Companion -> h2.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlin.collections.ArraysKt -> h2.f:
    1:1:byte[] copyInto(byte[],byte[],int,int,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object[] plus(java.lang.Object[],java.lang.Object[]):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean contains(java.lang.Object[],java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List drop(java.lang.Object[],int):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List filterNotNull(java.lang.Object[]):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:double first(double[]):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object getOrNull(java.lang.Object[],int):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int indexOf(java.lang.Object[],java.lang.Object):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:double last(double[]):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:char single(char[]):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object singleOrNull(java.lang.Object[]):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List toList(java.lang.Object[]):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> h2.g:
    1:1:java.lang.Object[] arrayOfNulls(java.lang.Object[],int):0:0 -> a
kotlin.collections.ArraysKt__ArraysKt -> h2.h:
kotlin.collections.ArraysKt___ArraysJvmKt -> h2.i:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> b
    1:1:byte[] copyInto(byte[],byte[],int,int,int):0:0 -> c
    1:1:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int):0:0 -> d
    1:1:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object):0:0 -> e
    1:1:void fill(java.lang.Object[],java.lang.Object,int,int):0:0 -> f
    1:1:java.lang.Object[] plus(java.lang.Object[],java.lang.Object[]):0:0 -> g
kotlin.collections.ArraysKt___ArraysKt -> h2.j:
    1:1:boolean contains(java.lang.Object[],java.lang.Object):0:0 -> h
    1:1:java.util.List drop(java.lang.Object[],int):0:0 -> i
    1:1:java.util.List filterNotNull(java.lang.Object[]):0:0 -> j
    1:1:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection):0:0 -> k
    1:1:double first(double[]):0:0 -> l
    1:1:int getLastIndex(double[]):0:0 -> m
    1:1:int getLastIndex(java.lang.Object[]):0:0 -> n
    1:1:java.lang.Object getOrNull(java.lang.Object[],int):0:0 -> o
    1:1:int indexOf(java.lang.Object[],java.lang.Object):0:0 -> p
    1:1:java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;)Ljava/lang/Appendable;"}
    1:1:java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;)Ljava/lang/String;"}
    1:1:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:double last(double[]):0:0 -> t
    1:1:char single(char[]):0:0 -> u
    1:1:java.lang.Object singleOrNull(java.lang.Object[]):0:0 -> v
    1:1:java.util.List takeLast(java.lang.Object[],int):0:0 -> w
    1:1:java.util.List toList(java.lang.Object[]):0:0 -> x
    1:1:java.util.List toMutableList(java.lang.Object[]):0:0 -> y
kotlin.collections.ArraysUtilJVM -> h2.k:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> a
kotlin.collections.CollectionsKt -> h2.l:
    1:1:java.util.List toList(java.lang.Iterable):0:0 -> A
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List toMutableList(java.util.Collection):0:0 -> C
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set toSet(java.lang.Iterable):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List listOf(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.ArrayList arrayListOf(java.lang.Object[]):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List emptyList():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List listOf(java.lang.Object[]):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List mutableListOf(java.lang.Object[]):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void throwIndexOverflow():0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int collectionSizeOrDefault(java.lang.Iterable,int):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean addAll(java.util.Collection,java.lang.Iterable):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean addAll(java.util.Collection,java.lang.Object[]):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Lr2/l;)Z"}
    1:1:boolean contains(java.lang.Iterable,java.lang.Object):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List distinct(java.lang.Iterable):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:java.lang.Object last(java.util.List):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List plus(java.util.Collection,java.lang.Iterable):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List plus(java.util.Collection,java.lang.Object[]):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> h2.m:
    1:1:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean):0:0 -> a
    1:1:java.util.List listOf(java.lang.Object):0:0 -> b
    1:1:java.lang.Object[] terminateCollectionToArray(int,java.lang.Object[]):0:0 -> c
kotlin.collections.CollectionsKt__CollectionsKt -> h2.n:
    1:1:java.util.ArrayList arrayListOf(java.lang.Object[]):0:0 -> d
    1:1:java.util.Collection asCollection(java.lang.Object[]):0:0 -> e
    1:1:java.util.List emptyList():0:0 -> f
    1:1:int getLastIndex(java.util.List):0:0 -> g
    1:1:java.util.List listOf(java.lang.Object[]):0:0 -> h
    1:1:java.util.List mutableListOf(java.lang.Object[]):0:0 -> i
    1:1:java.util.List optimizeReadOnlyList(java.util.List):0:0 -> j
    1:1:void throwIndexOverflow():0:0 -> k
kotlin.collections.CollectionsKt__IterablesKt -> h2.o:
    1:1:int collectionSizeOrDefault(java.lang.Iterable,int):0:0 -> l
kotlin.collections.CollectionsKt__IteratorsJVMKt -> h2.p:
kotlin.collections.CollectionsKt__IteratorsKt -> h2.q:
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> h2.r:
kotlin.collections.CollectionsKt__MutableCollectionsKt -> h2.s:
    1:1:boolean addAll(java.util.Collection,java.lang.Iterable):0:0 -> m
    1:1:boolean addAll(java.util.Collection,java.lang.Object[]):0:0 -> n
    1:1:boolean filterInPlace$CollectionsKt__MutableCollectionsKt(java.lang.Iterable,kotlin.jvm.functions.Function1,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Lr2/l;Z)Z"}
    1:1:boolean retainAll(java.lang.Iterable,kotlin.jvm.functions.Function1):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Lr2/l;)Z"}
kotlin.collections.CollectionsKt__ReversedViewsKt -> h2.t:
kotlin.collections.CollectionsKt___CollectionsJvmKt -> h2.u:
kotlin.collections.CollectionsKt___CollectionsKt -> h2.v:
    1:1:java.util.List toList(java.lang.Iterable):0:0 -> A
    1:1:java.util.List toMutableList(java.lang.Iterable):0:0 -> B
    1:1:java.util.List toMutableList(java.util.Collection):0:0 -> C
    1:1:java.util.Set toMutableSet(java.lang.Iterable):0:0 -> D
    1:1:java.util.Set toSet(java.lang.Iterable):0:0 -> E
    1:1:boolean contains(java.lang.Iterable,java.lang.Object):0:0 -> q
    1:1:java.util.List distinct(java.lang.Iterable):0:0 -> r
    1:1:int indexOf(java.lang.Iterable,java.lang.Object):0:0 -> s
    1:1:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;)Ljava/lang/Appendable;"}
    1:1:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;)Ljava/lang/String;"}
    1:1:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr2/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:java.lang.Object last(java.util.List):0:0 -> w
    1:1:java.util.List plus(java.util.Collection,java.lang.Iterable):0:0 -> x
    1:1:java.util.List plus(java.util.Collection,java.lang.Object[]):0:0 -> y
    1:1:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection):0:0 -> z
kotlin.collections.EmptyIterator -> h2.w:
    kotlin.collections.EmptyIterator INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Void next():0:0 -> a
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:java.lang.Void previous():0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:java.lang.Object next():0:0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.EmptyList -> h2.x:
    kotlin.collections.EmptyList INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean contains(java.lang.Void):0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Void get(int):0:0 -> b
    1:1:int getSize():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:int indexOf(java.lang.Void):0:0 -> d
    1:1:int lastIndexOf(java.lang.Void):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    2:2:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.EmptyMap -> h2.y:
    kotlin.collections.EmptyMap INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean containsValue(java.lang.Void):0:0 -> a
    1:1:java.lang.Void get(java.lang.Object):0:0 -> b
    1:1:java.util.Set getEntries():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:java.util.Set getKeys():0:0 -> d
    1:1:int getSize():0:0 -> e
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Collection getValues():0:0 -> f
    1:1:java.lang.Void remove(java.lang.Object):0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.util.Collection values():0:0 -> values
kotlin.collections.EmptySet -> h2.z:
    kotlin.collections.EmptySet INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean contains(java.lang.Void):0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:int getSize():0:0 -> b
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.IntIterator -> h2.a0:
    void <init>() -> <init>
    int nextInt() -> a
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.collections.MapsKt -> h2.b0:
    1:1:int mapCapacity(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Map mapOf(kotlin.Pair):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/j;)Ljava/util/Map;"}
    1:1:java.util.Map emptyMap():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.HashMap hashMapOf(kotlin.Pair[]):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;)Ljava/util/HashMap;"}
    1:1:java.util.Map mapOf(kotlin.Pair[]):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;)Ljava/util/Map;"}
    1:1:java.util.Map mutableMapOf(kotlin.Pair[]):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;)Ljava/util/Map;"}
    1:1:java.util.Map toMap(java.lang.Iterable):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> h2.c0:
kotlin.collections.MapsKt__MapsJVMKt -> h2.d0:
    1:1:int mapCapacity(int):0:0 -> a
    1:1:java.util.Map mapOf(kotlin.Pair):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/j;)Ljava/util/Map;"}
    1:1:java.util.Map toSingletonMap(java.util.Map):0:0 -> c
kotlin.collections.MapsKt__MapsKt -> h2.e0:
    1:1:java.util.Map emptyMap():0:0 -> d
    1:1:java.util.HashMap hashMapOf(kotlin.Pair[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;)Ljava/util/HashMap;"}
    1:1:java.util.Map mapOf(kotlin.Pair[]):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;)Ljava/util/Map;"}
    1:1:java.util.Map mutableMapOf(kotlin.Pair[]):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;)Ljava/util/Map;"}
    1:1:java.util.Map optimizeReadOnlyMap(java.util.Map):0:0 -> h
    1:1:void putAll(java.util.Map,java.lang.Iterable):0:0 -> i
    1:1:void putAll(java.util.Map,kotlin.Pair[]):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;[Lg2/j;)V"}
    1:1:java.util.Map toMap(java.lang.Iterable):0:0 -> k
    1:1:java.util.Map toMap(java.lang.Iterable,java.util.Map):0:0 -> l
    1:1:java.util.Map toMap(kotlin.Pair[],java.util.Map):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg2/j;Ljava/util/Map;)Ljava/util/Map;"}
kotlin.collections.MapsKt___MapsJvmKt -> h2.f0:
kotlin.collections.MapsKt___MapsKt -> h2.g0:
kotlin.collections.SetsKt -> h2.h0:
    1:1:java.util.Set emptySet():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.SetsKt__SetsJVMKt -> h2.i0:
    1:1:java.util.Set setOf(java.lang.Object):0:0 -> a
kotlin.collections.SetsKt__SetsKt -> h2.j0:
    1:1:java.util.Set emptySet():0:0 -> b
    1:1:java.util.Set optimizeReadOnlySet(java.util.Set):0:0 -> c
kotlin.collections.SetsKt___SetsKt -> h2.k0:
kotlin.coroutines.AbstractCoroutineContextElement -> i2.a:
    kotlin.coroutines.CoroutineContext$Key key -> e
    1:1:void <init>(kotlin.coroutines.CoroutineContext$Key):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)V"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Li2/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g$c;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
kotlin.coroutines.AbstractCoroutineContextKey -> i2.b:
    kotlin.jvm.functions.Function1 safeCast -> e
    kotlin.coroutines.CoroutineContext$Key topmostKey -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;Lr2/l;)V"}
    1:1:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Z"}
    1:1:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;)Li2/g$b;"}
kotlin.coroutines.CombinedContext -> i2.c:
    kotlin.coroutines.CoroutineContext left -> e
    kotlin.coroutines.CoroutineContext$Element element -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/g$b;)V"}
    1:1:boolean contains(kotlin.coroutines.CoroutineContext$Element):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;)Z"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Li2/g;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean containsAll(kotlin.coroutines.CombinedContext):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/c;)Z"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    1:1:int size():0:0 -> m
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.CombinedContext$toString$1 -> i2.c$a:
    kotlin.coroutines.CombinedContext$toString$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Li2/g$b;)Ljava/lang/String;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlin.coroutines.Continuation -> i2.d:
    kotlin.coroutines.CoroutineContext getContext() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    void resumeWith(java.lang.Object) -> s
kotlin.coroutines.ContinuationInterceptor -> i2.e:
    kotlin.coroutines.ContinuationInterceptor$Key Key -> b
    1:1:void <clinit>():0:0 -> <clinit>
    kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Li2/d;"}
    void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> i2.e$a:
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/e;Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/e;Li2/g$c;)Li2/g;"}
kotlin.coroutines.ContinuationInterceptor$Key -> i2.e$b:
    kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> i2.f:
    1:1:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;)V"}
kotlin.coroutines.CoroutineContext -> i2.g:
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Li2/g;"}
    kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> i2.g$a:
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/g;)Li2/g;"}
kotlin.coroutines.CoroutineContext$Element -> i2.g$b:
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g$c;"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> i2.g$b$a:
    1:1:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;Li2/g$c;)Li2/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;Li2/g;)Li2/g;"}
kotlin.coroutines.CoroutineContext$Key -> i2.g$c:
kotlin.coroutines.CoroutineContext$plus$1 -> i2.g$a$a:
    kotlin.coroutines.CoroutineContext$plus$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/g$b;)Li2/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlin.coroutines.EmptyCoroutineContext -> i2.h:
    kotlin.coroutines.EmptyCoroutineContext INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Li2/g;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.intrinsics.CoroutineSingletons -> j2.a:
    kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED -> e
    kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED -> f
    kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED -> g
    kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES -> h
    kotlin.enums.EnumEntries $ENTRIES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj2/a;"}
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj2/a;"}
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj2/a;"}
kotlin.coroutines.intrinsics.IntrinsicsKt -> j2.b:
    1:1:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Li2/d;"}
    1:1:java.lang.Object getCOROUTINE_SUSPENDED():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> j2.c:
    1:1:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Li2/d;"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> j2.c$a:
    int label -> f
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> g
    java.lang.Object $receiver$inlined -> h
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Lr2/p;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> j2.c$b:
    int label -> h
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> i
    java.lang.Object $receiver$inlined -> j
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Li2/g;Lr2/p;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> j2.d:
    1:1:java.lang.Object getCOROUTINE_SUSPENDED():0:0 -> c
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> k2.a:
    kotlin.coroutines.Continuation completion -> e
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:kotlin.coroutines.Continuation getCompletion():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/d;"}
    1:1:java.lang.StackTraceElement getStackTraceElement():0:0 -> f
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/e;"}
    java.lang.Object invokeSuspend(java.lang.Object) -> j
    1:1:void releaseIntercepted():0:0 -> k
    1:1:void resumeWith(java.lang.Object):0:0 -> s
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.jvm.internal.Boxing -> k2.b:
    1:1:java.lang.Boolean boxBoolean(boolean):0:0 -> a
kotlin.coroutines.jvm.internal.CompletedContinuation -> k2.c:
    kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> s
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> k2.d:
    kotlin.coroutines.CoroutineContext _context -> f
    kotlin.coroutines.Continuation intercepted -> g
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    2:2:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Li2/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:void releaseIntercepted():0:0 -> k
    1:1:kotlin.coroutines.Continuation intercepted():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/d;"}
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> k2.e:
    kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/e;"}
kotlin.coroutines.jvm.internal.DebugMetadata -> k2.f:
    java.lang.String c() -> c
    java.lang.String f() -> f
    int[] l() -> l
    java.lang.String m() -> m
    int v() -> v
kotlin.coroutines.jvm.internal.DebugMetadataKt -> k2.g:
    1:1:void checkDebugMetadataVersion(int,int):0:0 -> a
    1:1:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/a;)Lk2/f;"}
    1:1:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/a;)I"}
    1:1:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/a;)Ljava/lang/StackTraceElement;"}
kotlin.coroutines.jvm.internal.DebugProbesKt -> k2.h:
    1:1:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Li2/d;"}
    1:1:void probeCoroutineResumed(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    1:1:void probeCoroutineSuspended(kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> k2.i:
    kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE -> a
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9 -> b
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/a;)Lk2/i$a;"}
    1:1:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/a;)Ljava/lang/String;"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> k2.i$a:
    java.lang.reflect.Method getModuleMethod -> a
    java.lang.reflect.Method getDescriptorMethod -> b
    java.lang.reflect.Method nameMethod -> c
    1:1:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method):0:0 -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> k2.j:
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
kotlin.coroutines.jvm.internal.SuspendLambda -> k2.k:
    int arity -> h
    1:1:void <init>(int,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILi2/d;)V"}
    1:1:int getArity():0:0 -> e
    1:1:java.lang.String toString():0:0 -> toString
kotlin.enums.EnumEntries -> l2.a:
kotlin.enums.EnumEntriesKt -> l2.b:
    1:1:kotlin.enums.EnumEntries enumEntries(java.lang.Enum[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Enum;)Ll2/a;"}
kotlin.enums.EnumEntriesList -> l2.c:
    java.lang.Enum[] entries -> f
    1:1:void <init>(java.lang.Enum[]):0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:boolean contains(java.lang.Enum):0:0 -> b
    1:1:java.lang.Enum get(int):0:0 -> c
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:int indexOf(java.lang.Enum):0:0 -> d
    1:1:int lastIndexOf(java.lang.Enum):0:0 -> e
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
kotlin.internal.PlatformImplementations -> m2.a:
    void <init>() -> <init>
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:kotlin.random.Random defaultPlatformRandom():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt2/c;"}
kotlin.internal.PlatformImplementations$ReflectThrowable -> m2.a$a:
    kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE -> a
    java.lang.reflect.Method addSuppressed -> b
    java.lang.reflect.Method getSuppressed -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> m2.b:
    kotlin.internal.PlatformImplementations IMPLEMENTATIONS -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlin.internal.ProgressionUtilKt -> m2.c:
    1:1:int differenceModulo(int,int,int):0:0 -> a
    1:1:int getProgressionLastElement(int,int,int):0:0 -> b
    1:1:int mod(int,int):0:0 -> c
kotlin.internal.jdk7.JDK7PlatformImplementations -> n2.a:
    void <init>() -> <init>
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:boolean sdkIsNullOrAtLeast(int):0:0 -> c
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> n2.a$a:
    kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion INSTANCE -> a
    java.lang.Integer sdkVersion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> o2.a:
    void <init>() -> <init>
    1:1:kotlin.random.Random defaultPlatformRandom():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt2/c;"}
    1:1:boolean sdkIsNullOrAtLeast(int):0:0 -> c
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> o2.a$a:
    kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion INSTANCE -> a
    java.lang.Integer sdkVersion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.io.ByteStreamsKt -> p2.a:
    1:1:long copyTo(java.io.InputStream,java.io.OutputStream,int):0:0 -> a
    1:1:long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object):0:0 -> b
    1:1:byte[] readBytes(java.io.InputStream):0:0 -> c
kotlin.io.CloseableKt -> p2.b:
    1:1:void closeFinally(java.io.Closeable,java.lang.Throwable):0:0 -> a
kotlin.io.ExposingBufferByteArrayOutputStream -> p2.c:
    1:1:void <init>(int):0:0 -> <init>
    1:1:byte[] getBuffer():0:0 -> a
kotlin.io.FilesKt -> p2.d:
    1:1:byte[] readBytes(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String getExtension(java.io.File):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.FilesKt__FilePathComponentsKt -> p2.e:
kotlin.io.FilesKt__FileReadWriteKt -> p2.f:
    1:1:byte[] readBytes(java.io.File):0:0 -> a
kotlin.io.FilesKt__FileTreeWalkKt -> p2.g:
kotlin.io.FilesKt__UtilsKt -> p2.h:
    1:1:java.lang.String getExtension(java.io.File):0:0 -> b
kotlin.jvm.JvmClassMappingKt -> q2.a:
    1:1:java.lang.Class getJavaClass(kotlin.reflect.KClass):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/b;)Ljava/lang/Class;"}
    1:1:java.lang.Class getJavaObjectType(kotlin.reflect.KClass):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/b;)Ljava/lang/Class;"}
    1:1:kotlin.reflect.KClass getKotlinClass(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw2/b;"}
kotlin.jvm.functions.Function0 -> r2.a:
    java.lang.Object invoke() -> d
kotlin.jvm.functions.Function1 -> r2.l:
    java.lang.Object invoke(java.lang.Object) -> h
kotlin.jvm.functions.Function10 -> r2.b:
kotlin.jvm.functions.Function11 -> r2.c:
kotlin.jvm.functions.Function12 -> r2.d:
kotlin.jvm.functions.Function13 -> r2.e:
kotlin.jvm.functions.Function14 -> r2.f:
kotlin.jvm.functions.Function15 -> r2.g:
kotlin.jvm.functions.Function16 -> r2.h:
kotlin.jvm.functions.Function17 -> r2.i:
kotlin.jvm.functions.Function18 -> r2.j:
kotlin.jvm.functions.Function19 -> r2.k:
kotlin.jvm.functions.Function2 -> r2.p:
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> g
kotlin.jvm.functions.Function20 -> r2.m:
kotlin.jvm.functions.Function21 -> r2.n:
kotlin.jvm.functions.Function22 -> r2.o:
kotlin.jvm.functions.Function3 -> r2.q:
kotlin.jvm.functions.Function4 -> r2.r:
kotlin.jvm.functions.Function5 -> r2.s:
kotlin.jvm.functions.Function6 -> r2.t:
kotlin.jvm.functions.Function7 -> r2.u:
kotlin.jvm.functions.Function8 -> r2.v:
kotlin.jvm.functions.Function9 -> r2.w:
kotlin.jvm.internal.ArrayIterator -> s2.a:
    java.lang.Object[] array -> a
    int index -> b
    1:1:void <init>(java.lang.Object[]):0:0 -> <init>
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.jvm.internal.ArrayIteratorKt -> s2.b:
    1:1:java.util.Iterator iterator(java.lang.Object[]):0:0 -> a
kotlin.jvm.internal.CallableReference -> s2.c:
    kotlin.reflect.KCallable reflected -> e
    java.lang.Object receiver -> f
    java.lang.Class owner -> g
    java.lang.String name -> h
    java.lang.String signature -> i
    boolean isTopLevel -> j
    java.lang.Object NO_RECEIVER -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean):0:0 -> <init>
    1:1:kotlin.reflect.KCallable compute():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/a;"}
    kotlin.reflect.KCallable computeReflected() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/a;"}
    1:1:java.lang.Object getBoundReceiver():0:0 -> c
    1:1:java.lang.String getName():0:0 -> f
    1:1:kotlin.reflect.KDeclarationContainer getOwner():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/d;"}
    1:1:java.lang.String getSignature():0:0 -> j
kotlin.jvm.internal.CallableReference$NoReceiver -> s2.c$a:
    kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.jvm.internal.CallableReference$NoReceiver access$000():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls2/c$a;"}
kotlin.jvm.internal.ClassBasedDeclarationContainer -> s2.d:
    java.lang.Class getJClass() -> c
kotlin.jvm.internal.ClassReference -> s2.e:
    java.lang.Class jClass -> a
    kotlin.jvm.internal.ClassReference$Companion Companion -> b
    java.util.Map FUNCTION_CLASSES -> c
    java.util.HashMap primitiveFqNames -> d
    java.util.HashMap primitiveWrapperFqNames -> e
    java.util.HashMap classFqNames -> f
    java.util.Map simpleNames -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Class):0:0 -> <init>
    1:1:java.lang.String getQualifiedName():0:0 -> a
    1:1:java.lang.String getSimpleName():0:0 -> b
    1:1:java.lang.Class getJClass():0:0 -> c
    1:1:boolean isInstance(java.lang.Object):0:0 -> d
    1:1:java.util.HashMap access$getClassFqNames$cp():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Map access$getFUNCTION_CLASSES$cp():0:0 -> f
    1:1:java.util.Map access$getSimpleNames$cp():0:0 -> g
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.ClassReference$Companion -> s2.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:java.lang.String getClassQualifiedName(java.lang.Class):0:0 -> a
    1:1:java.lang.String getClassSimpleName(java.lang.Class):0:0 -> b
    1:1:boolean isInstance(java.lang.Object,java.lang.Class):0:0 -> c
kotlin.jvm.internal.CollectionToArray -> s2.f:
    java.lang.Object[] EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object[] toArray(java.util.Collection):0:0 -> a
    1:1:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):0:0 -> b
kotlin.jvm.internal.DefaultConstructorMarker -> s2.g:
kotlin.jvm.internal.FunctionBase -> s2.h:
    int getArity() -> e
kotlin.jvm.internal.FunctionReference -> s2.i:
    int arity -> l
    int flags -> m
    1:1:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable computeReflected():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/a;"}
    1:1:int getArity():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> s2.j:
    1:1:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    2:2:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
kotlin.jvm.internal.Intrinsics -> s2.k:
    1:1:boolean areEqual(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:void checkNotNull(java.lang.Object):0:0 -> b
    1:1:void checkNotNull(java.lang.Object,java.lang.String):0:0 -> c
    1:1:void checkNotNullExpressionValue(java.lang.Object,java.lang.String):0:0 -> d
    1:1:void checkNotNullParameter(java.lang.Object,java.lang.String):0:0 -> e
    1:1:int compare(int,int):0:0 -> f
    1:1:java.lang.String createParameterIsNullExceptionMessage(java.lang.String):0:0 -> g
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable):0:0 -> h
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> i
    1:1:void throwJavaNpe():0:0 -> j
    1:1:void throwJavaNpe(java.lang.String):0:0 -> k
    1:1:void throwParameterIsNullNPE(java.lang.String):0:0 -> l
    1:1:void throwUninitializedProperty(java.lang.String):0:0 -> m
    1:1:void throwUninitializedPropertyAccessException(java.lang.String):0:0 -> n
kotlin.jvm.internal.Lambda -> s2.l:
    int arity -> e
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getArity():0:0 -> e
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PackageReference -> s2.m:
    java.lang.Class jClass -> a
    java.lang.String moduleName -> b
    1:1:void <init>(java.lang.Class,java.lang.String):0:0 -> <init>
    1:1:java.lang.Class getJClass():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PropertyReference -> s2.p:
    boolean syntheticJavaProperty -> l
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable compute():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PropertyReference0 -> s2.n:
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable computeReflected():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/a;"}
    1:1:java.lang.Object invoke():0:0 -> d
kotlin.jvm.internal.PropertyReference0Impl -> s2.o:
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
kotlin.jvm.internal.Ref$BooleanRef -> s2.q:
    boolean element -> e
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.Ref$ObjectRef -> s2.r:
    java.lang.Object element -> e
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.Reflection -> s2.s:
    kotlin.jvm.internal.ReflectionFactory factory -> a
    kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/i;)Lw2/e;"}
    1:1:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw2/b;"}
    1:1:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw2/d;"}
    1:1:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/n;)Lw2/f;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/h;)Ljava/lang/String;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/l;)Ljava/lang/String;"}
kotlin.jvm.internal.ReflectionFactory -> s2.t:
    void <init>() -> <init>
    1:1:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/i;)Lw2/e;"}
    1:1:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw2/b;"}
    1:1:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/String;)Lw2/d;"}
    1:1:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/n;)Lw2/f;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/h;)Ljava/lang/String;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/l;)Ljava/lang/String;"}
kotlin.jvm.internal.TypeIntrinsics -> s2.u:
    1:1:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int):0:0 -> a
    1:1:int getFunctionArity(java.lang.Object):0:0 -> b
    1:1:boolean isFunctionOfArity(java.lang.Object,int):0:0 -> c
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable):0:0 -> d
    1:1:java.lang.ClassCastException throwCce(java.lang.ClassCastException):0:0 -> e
    1:1:void throwCce(java.lang.Object,java.lang.String):0:0 -> f
    1:1:void throwCce(java.lang.String):0:0 -> g
kotlin.random.AbstractPlatformRandom -> t2.a:
    void <init>() -> <init>
    1:1:int nextInt():0:0 -> b
    java.util.Random getImpl() -> c
kotlin.random.FallbackThreadLocalRandom -> t2.b:
    kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage -> g
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Random getImpl():0:0 -> c
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> t2.b$a:
    void <init>() -> <init>
    1:1:java.util.Random initialValue():0:0 -> a
    1:1:java.lang.Object initialValue():0:0 -> initialValue
kotlin.random.Random -> t2.c:
    kotlin.random.Random$Default Default -> e
    kotlin.random.Random defaultRandom -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.random.Random access$getDefaultRandom$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt2/c;"}
    int nextInt() -> b
kotlin.random.Random$Default -> t2.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:int nextInt():0:0 -> b
kotlin.random.jdk8.PlatformThreadLocalRandom -> u2.a:
    void <init>() -> <init>
    1:1:java.util.Random getImpl():0:0 -> c
kotlin.ranges.IntProgression -> v2.a:
    int first -> e
    int last -> f
    int step -> g
    kotlin.ranges.IntProgression$Companion Companion -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:int getFirst():0:0 -> a
    1:1:int getLast():0:0 -> b
    1:1:int getStep():0:0 -> c
    1:1:kotlin.collections.IntIterator iterator():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh2/a0;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ranges.IntProgression$Companion -> v2.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:kotlin.ranges.IntProgression fromClosedRange(int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III)Lv2/a;"}
kotlin.ranges.IntProgressionIterator -> v2.b:
    int step -> a
    int finalElement -> b
    boolean hasNext -> c
    int next -> d
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:int nextInt():0:0 -> a
    1:1:boolean hasNext():0:0 -> hasNext
kotlin.ranges.IntRange -> v2.c:
    kotlin.ranges.IntRange$Companion Companion -> i
    kotlin.ranges.IntRange EMPTY -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:boolean contains(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ranges.IntRange$Companion -> v2.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlin.ranges.RangesKt -> v2.d:
    1:1:int coerceAtLeast(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int coerceAtMost(int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long coerceAtMost(long,long):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:kotlin.ranges.IntProgression downTo(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lv2/a;"}
kotlin.ranges.RangesKt__RangesKt -> v2.e:
kotlin.ranges.RangesKt___RangesKt -> v2.f:
    1:1:int coerceAtLeast(int,int):0:0 -> a
    1:1:int coerceAtMost(int,int):0:0 -> b
    1:1:long coerceAtMost(long,long):0:0 -> c
    1:1:kotlin.ranges.IntProgression downTo(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lv2/a;"}
kotlin.reflect.KCallable -> w2.a:
kotlin.reflect.KClass -> w2.b:
    java.lang.String getQualifiedName() -> a
    java.lang.String getSimpleName() -> b
    boolean isInstance(java.lang.Object) -> d
kotlin.reflect.KClasses -> w2.c:
    1:1:java.lang.Object cast(kotlin.reflect.KClass,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/b;Ljava/lang/Object;)Ljava/lang/Object;"}
kotlin.reflect.KDeclarationContainer -> w2.d:
kotlin.reflect.KFunction -> w2.e:
kotlin.reflect.KProperty -> w2.g:
kotlin.reflect.KProperty0 -> w2.f:
    java.lang.Object get() -> get
kotlin.sequences.ConstrainedOnceSequence -> x2.a:
    java.util.concurrent.atomic.AtomicReference sequenceRef -> a
    1:1:void <init>(kotlin.sequences.Sequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx2/b;)V"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.Sequence -> x2.b:
    java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt -> x2.c:
    1:1:kotlin.sequences.Sequence asSequence(java.util.Iterator):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;)Lx2/b;"}
    1:1:java.util.List toList(kotlin.sequences.Sequence):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx2/b;)Ljava/util/List;"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> x2.d:
kotlin.sequences.SequencesKt__SequencesJVMKt -> x2.e:
kotlin.sequences.SequencesKt__SequencesKt -> x2.f:
    1:1:kotlin.sequences.Sequence asSequence(java.util.Iterator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;)Lx2/b;"}
    1:1:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx2/b;)Lx2/b;"}
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> x2.f$a:
    java.util.Iterator $this_asSequence$inlined -> a
    1:1:void <init>(java.util.Iterator):0:0 -> <init>
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> x2.g:
kotlin.sequences.SequencesKt___SequencesKt -> x2.h:
    1:1:java.util.List toList(kotlin.sequences.Sequence):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx2/b;)Ljava/util/List;"}
kotlin.text.CharsKt__CharJVMKt -> y2.a:
    1:1:int checkRadix(int):0:0 -> a
    1:1:int digitOf(char,int):0:0 -> b
    1:1:boolean isWhitespace(char):0:0 -> c
kotlin.text.CharsKt__CharKt -> y2.b:
    1:1:boolean equals(char,char,boolean):0:0 -> d
kotlin.text.StringsKt -> y2.c:
    1:1:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> D
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> J
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> K
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence trim(java.lang.CharSequence):0:0 -> L
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:char last(java.lang.CharSequence):0:0 -> M
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Appendable;Ljava/lang/Object;Lr2/l;)V"}
    1:1:java.lang.Long toLongOrNull(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean equals(java.lang.String,java.lang.String,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean isBlank(java.lang.CharSequence):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String padStart(java.lang.String,int,char):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> y2.d:
    1:1:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Appendable;Ljava/lang/Object;Lr2/l;)V"}
kotlin.text.StringsKt__IndentKt -> y2.e:
kotlin.text.StringsKt__RegexExtensionsJVMKt -> y2.f:
kotlin.text.StringsKt__RegexExtensionsKt -> y2.g:
kotlin.text.StringsKt__StringBuilderJVMKt -> y2.h:
kotlin.text.StringsKt__StringBuilderKt -> y2.i:
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> y2.j:
kotlin.text.StringsKt__StringNumberConversionsKt -> y2.k:
    1:1:java.lang.Long toLongOrNull(java.lang.String):0:0 -> b
    1:1:java.lang.Long toLongOrNull(java.lang.String,int):0:0 -> c
kotlin.text.StringsKt__StringsJVMKt -> y2.l:
    1:1:boolean equals(java.lang.String,java.lang.String,boolean):0:0 -> d
    1:1:boolean isBlank(java.lang.CharSequence):0:0 -> e
    1:1:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean):0:0 -> f
    1:1:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> g
    1:1:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> h
    1:1:boolean startsWith(java.lang.String,java.lang.String,boolean):0:0 -> i
    1:1:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> j
kotlin.text.StringsKt__StringsKt -> y2.m:
    1:1:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean):0:0 -> A
    1:1:java.lang.String substringAfter(java.lang.String,char,java.lang.String):0:0 -> B
    1:1:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String):0:0 -> C
    1:1:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> D
    1:1:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> E
    1:1:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String):0:0 -> F
    1:1:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> G
    1:1:java.lang.String substringBefore(java.lang.String,char,java.lang.String):0:0 -> H
    1:1:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String):0:0 -> I
    1:1:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> J
    1:1:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> K
    1:1:java.lang.CharSequence trim(java.lang.CharSequence):0:0 -> L
    1:1:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean):0:0 -> k
    1:1:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object):0:0 -> l
    1:1:kotlin.ranges.IntRange getIndices(java.lang.CharSequence):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lv2/c;"}
    1:1:int getLastIndex(java.lang.CharSequence):0:0 -> n
    1:1:int indexOf(java.lang.CharSequence,char,int,boolean):0:0 -> o
    1:1:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean):0:0 -> p
    1:1:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean):0:0 -> q
    1:1:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object):0:0 -> r
    1:1:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0:0 -> s
    1:1:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object):0:0 -> t
    1:1:int indexOfAny(java.lang.CharSequence,char[],int,boolean):0:0 -> u
    1:1:int lastIndexOf(java.lang.CharSequence,char,int,boolean):0:0 -> v
    1:1:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0:0 -> w
    1:1:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):0:0 -> x
    1:1:java.lang.CharSequence padStart(java.lang.CharSequence,int,char):0:0 -> y
    1:1:java.lang.String padStart(java.lang.String,int,char):0:0 -> z
kotlin.text.StringsKt___StringsJvmKt -> y2.n:
kotlin.text.StringsKt___StringsKt -> y2.o:
    1:1:char last(java.lang.CharSequence):0:0 -> M
kotlinx.coroutines.AbstractCoroutine -> z2.a:
    kotlin.coroutines.CoroutineContext context -> g
    1:1:void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ZZ)V"}
    1:1:void afterResume(java.lang.Object):0:0 -> E0
    1:1:void onCancelled(java.lang.Throwable,boolean):0:0 -> F0
    1:1:void onCompleted(java.lang.Object):0:0 -> G0
    1:1:void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> H0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/f0;Ljava/lang/Object;Lr2/p;)V"}
    1:1:java.lang.String cancellationExceptionMessage():0:0 -> L
    1:1:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> a0
    1:1:boolean isActive():0:0 -> b
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:java.lang.String nameString$kotlinx_coroutines_core():0:0 -> j0
    1:1:kotlin.coroutines.CoroutineContext getCoroutineContext():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:void onCompletionInternal(java.lang.Object):0:0 -> o0
    1:1:void resumeWith(java.lang.Object):0:0 -> s
kotlinx.coroutines.AbstractTimeSource -> z2.b:
kotlinx.coroutines.AbstractTimeSourceKt -> z2.c:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.AbstractTimeSource getTimeSource():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/b;"}
kotlinx.coroutines.Active -> z2.d:
    kotlinx.coroutines.Active INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.BlockingEventLoop -> z2.e:
    java.lang.Thread thread -> m
    1:1:void <init>(java.lang.Thread):0:0 -> <init>
    1:1:java.lang.Thread getThread():0:0 -> C
kotlinx.coroutines.BuildersKt -> z2.f:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;Lz2/f0;Lr2/p;)Lz2/e1;"}
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;Lz2/f0;Lr2/p;ILjava/lang/Object;)Lz2/e1;"}
kotlinx.coroutines.BuildersKt__Builders_commonKt -> z2.g:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;Lz2/f0;Lr2/p;)Lz2/e1;"}
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;Lz2/f0;Lr2/p;ILjava/lang/Object;)Lz2/e1;"}
kotlinx.coroutines.CancelHandler -> z2.h:
kotlinx.coroutines.CancelHandlerBase -> z2.i:
kotlinx.coroutines.CancellableContinuation -> z2.j:
    java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lr2/l;)Ljava/lang/Object;"}
    void completeResume(java.lang.Object) -> y
kotlinx.coroutines.CancellableContinuationImpl -> z2.k:
    kotlin.coroutines.Continuation delegate -> h
    kotlin.coroutines.CoroutineContext context -> i
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decisionAndIndex$FU -> j
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.coroutines.Continuation,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;I)V"}
    1:1:java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lr2/l;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.DisposableHandle installParentHandle():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o0;"}
    1:1:void invokeOnCancellationImpl(java.lang.Object):0:0 -> C
    1:1:boolean isCompleted():0:0 -> D
    1:1:boolean isReusable():0:0 -> E
    1:1:void multipleHandlersError(java.lang.Object,java.lang.Object):0:0 -> F
    1:1:java.lang.String nameString():0:0 -> G
    1:1:void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> H
    1:1:void releaseClaimedReusableContinuation$kotlinx_coroutines_core():0:0 -> I
    1:1:boolean resetStateReusable():0:0 -> J
    1:1:void resume(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/l;)V"}
    1:1:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILr2/l;)V"}
    1:1:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/k;Ljava/lang/Object;ILr2/l;ILjava/lang/Object;)V"}
    1:1:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/r1;Ljava/lang/Object;ILr2/l;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean tryResume():0:0 -> O
    1:1:kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lr2/l;)Le3/h0;"}
    1:1:boolean trySuspend():0:0 -> Q
    1:1:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable):0:0 -> a
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e0;I)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/d;"}
    1:1:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> e
    1:1:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> f
    1:1:java.lang.Object takeState$kotlinx_coroutines_core():0:0 -> h
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/e;"}
    1:1:java.lang.Void alreadyResumedError(java.lang.Object):0:0 -> j
    1:1:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/h;Ljava/lang/Throwable;)V"}
    1:1:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Ljava/lang/Throwable;)V"}
    1:1:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e0;Ljava/lang/Throwable;)V"}
    1:1:boolean cancel(java.lang.Throwable):0:0 -> n
    1:1:boolean cancelLater(java.lang.Throwable):0:0 -> o
    1:1:void detachChild$kotlinx_coroutines_core():0:0 -> p
    1:1:void detachChildIfNonResuable():0:0 -> q
    1:1:void dispatchResume(int):0:0 -> r
    1:1:void resumeWith(java.lang.Object):0:0 -> s
    1:1:java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)Ljava/lang/Throwable;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.DisposableHandle getParentHandle():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o0;"}
    1:1:java.lang.Object getResult():0:0 -> v
    1:1:java.lang.Object getState$kotlinx_coroutines_core():0:0 -> w
    1:1:java.lang.String getStateDebugRepresentation():0:0 -> x
    1:1:void completeResume(java.lang.Object):0:0 -> y
    1:1:void initCancellability():0:0 -> z
kotlinx.coroutines.CancellableContinuationImplKt -> z2.l:
    kotlinx.coroutines.internal.Symbol RESUME_TOKEN -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.CancellableContinuationKt -> z2.m:
    1:1:kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Lz2/k;"}
kotlinx.coroutines.CancelledContinuation -> z2.n:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Ljava/lang/Throwable;Z)V"}
    1:1:boolean makeResumed():0:0 -> c
kotlinx.coroutines.ChildContinuation -> z2.o:
    kotlinx.coroutines.CancellableContinuationImpl child -> i
    1:1:void <init>(kotlinx.coroutines.CancellableContinuationImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/k;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.ChildHandle -> z2.p:
    boolean childCancelled(java.lang.Throwable) -> c
kotlinx.coroutines.ChildHandleNode -> z2.q:
    kotlinx.coroutines.ChildJob childJob -> i
    1:1:void <init>(kotlinx.coroutines.ChildJob):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/r;)V"}
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> c
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.ChildJob -> z2.r:
    void parentCancelled(kotlinx.coroutines.ParentJob) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/s1;)V"}
kotlinx.coroutines.CompletableJob -> z2.s:
kotlinx.coroutines.CompletedContinuation -> z2.t:
    java.lang.Object result -> a
    kotlin.jvm.functions.Function1 onCancellation -> b
    java.lang.Object idempotentResume -> c
    java.lang.Throwable cancelCause -> d
    1:1:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/h;Lr2/l;Ljava/lang/Object;Ljava/lang/Throwable;)V"}
    2:2:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/h;Lr2/l;Ljava/lang/Object;Ljava/lang/Throwable;ILs2/g;)V"}
    1:1:kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/h;Lr2/l;Ljava/lang/Object;Ljava/lang/Throwable;)Lz2/t;"}
    1:1:kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/t;Ljava/lang/Object;Lz2/h;Lr2/l;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lz2/t;"}
    1:1:boolean getCancelled():0:0 -> c
    1:1:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/k;Ljava/lang/Throwable;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletedExceptionally -> z2.u:
    java.lang.Throwable cause -> a
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Throwable,boolean):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;ZILs2/g;)V"}
    1:1:boolean getHandled():0:0 -> a
    1:1:boolean makeHandled():0:0 -> b
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletedWithCancellation -> z2.v:
    java.lang.Object result -> a
    kotlin.jvm.functions.Function1 onCancellation -> b
    1:1:void <init>(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/l;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletionHandlerBase -> z2.w:
    void <init>() -> <init>
    void invoke(java.lang.Throwable) -> w
kotlinx.coroutines.CompletionHandlerException -> z2.x:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.CompletionStateKt -> z2.y:
    1:1:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/l;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/j;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/l;ILjava/lang/Object;)Ljava/lang/Object;"}
kotlinx.coroutines.CoroutineContextKt -> z2.z:
    1:1:kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/g;Z)Li2/g;"}
    1:1:java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Ljava/lang/String;"}
    1:1:boolean hasCopyableElements(kotlin.coroutines.CoroutineContext):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Z"}
    1:1:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;)Li2/g;"}
    1:1:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/e;)Lz2/x1;"}
    1:1:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Li2/g;Ljava/lang/Object;)Lz2/x1;"}
kotlinx.coroutines.CoroutineContextKt$foldCopies$1 -> z2.z$a:
    kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/g$b;)Li2/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 -> z2.z$b:
    kotlin.jvm.internal.Ref$ObjectRef $leftoverContext -> f
    boolean $isNewCoroutine -> g
    1:1:void <init>(kotlin.jvm.internal.Ref$ObjectRef,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/r;Z)V"}
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/g$b;)Li2/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 -> z2.z$c:
    kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLi2/g$b;)Ljava/lang/Boolean;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlinx.coroutines.CoroutineDispatcher -> z2.a0:
    kotlinx.coroutines.CoroutineDispatcher$Key Key -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Li2/d;"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Z"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lz2/a0;"}
    1:1:void releaseInterceptedContinuation(kotlin.coroutines.Continuation):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> z2.a0$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> z2.a0$a$a:
    kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;)Lz2/a0;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
kotlinx.coroutines.CoroutineExceptionHandler -> z2.b0:
    kotlinx.coroutines.CoroutineExceptionHandler$Key Key -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.CoroutineExceptionHandler$Key -> z2.b0$a:
    kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.CoroutineExceptionHandlerKt -> z2.c0:
    1:1:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Throwable;)V"}
    1:1:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):0:0 -> b
kotlinx.coroutines.CoroutineScope -> z2.d0:
    kotlin.coroutines.CoroutineContext getCoroutineContext() -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
kotlinx.coroutines.CoroutineScopeKt -> z2.e0:
    1:1:kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Lz2/d0;"}
    1:1:java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.CoroutineStart -> z2.f0:
    kotlinx.coroutines.CoroutineStart DEFAULT -> e
    kotlinx.coroutines.CoroutineStart LAZY -> f
    kotlinx.coroutines.CoroutineStart ATOMIC -> g
    kotlinx.coroutines.CoroutineStart UNDISPATCHED -> h
    kotlinx.coroutines.CoroutineStart[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.CoroutineStart[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz2/f0;"}
    1:1:void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;)V"}
    1:1:boolean isLazy():0:0 -> c
    1:1:kotlinx.coroutines.CoroutineStart valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz2/f0;"}
    1:1:kotlinx.coroutines.CoroutineStart[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz2/f0;"}
kotlinx.coroutines.CoroutineStart$WhenMappings -> z2.f0$a:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.CoroutinesInternalError -> z2.g0:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.DebugStringsKt -> z2.h0:
    1:1:java.lang.String getClassSimpleName(java.lang.Object):0:0 -> a
    1:1:java.lang.String getHexAddress(java.lang.Object):0:0 -> b
    1:1:java.lang.String toDebugString(kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Ljava/lang/String;"}
kotlinx.coroutines.DefaultExecutor -> z2.i0:
    kotlinx.coroutines.DefaultExecutor INSTANCE -> m
    long KEEP_ALIVE_NANOS -> n
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Thread getThread():0:0 -> C
    1:1:void enqueue(java.lang.Runnable):0:0 -> G
    1:1:void acknowledgeShutdownIfNeeded():0:0 -> O
    1:1:java.lang.Thread createThreadSync():0:0 -> P
    1:1:boolean isShutDown():0:0 -> Q
    1:1:boolean isShutdownRequested():0:0 -> R
    1:1:boolean notifyStartup():0:0 -> S
    1:1:void shutdownError():0:0 -> T
    1:1:void run():0:0 -> run
    1:1:void shutdown():0:0 -> shutdown
kotlinx.coroutines.DefaultExecutorKt -> z2.j0:
    boolean defaultMainDelayOptIn -> a
    kotlinx.coroutines.Delay DefaultDelay -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.Delay getDefaultDelay():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/k0;"}
    1:1:kotlinx.coroutines.Delay initializeDefaultDelay():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/k0;"}
kotlinx.coroutines.Delay -> z2.k0:
kotlinx.coroutines.DispatchedTask -> z2.l0:
    int resumeMode -> g
    1:1:void <init>(int):0:0 -> <init>
    void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> a
    kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/d;"}
    1:1:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> e
    1:1:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> f
    1:1:void handleFatalException(java.lang.Throwable,java.lang.Throwable):0:0 -> g
    java.lang.Object takeState$kotlinx_coroutines_core() -> h
    1:1:void run():0:0 -> run
kotlinx.coroutines.DispatchedTaskKt -> z2.m0:
    1:1:void dispatch(kotlinx.coroutines.DispatchedTask,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l0;I)V"}
    1:1:boolean isCancellableMode(int):0:0 -> b
    1:1:boolean isReusableMode(int):0:0 -> c
    1:1:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l0;Li2/d;Z)V"}
    1:1:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l0;)V"}
kotlinx.coroutines.Dispatchers -> z2.n0:
    kotlinx.coroutines.Dispatchers INSTANCE -> a
    kotlinx.coroutines.CoroutineDispatcher Default -> b
    kotlinx.coroutines.CoroutineDispatcher Unconfined -> c
    kotlinx.coroutines.CoroutineDispatcher IO -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.CoroutineDispatcher getDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/a0;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher getIO():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/a0;"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getMain():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o1;"}
kotlinx.coroutines.DisposableHandle -> z2.o0:
    void dispose() -> a
kotlinx.coroutines.Empty -> z2.p0:
    boolean isActive -> e
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean isActive():0:0 -> b
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.EventLoop -> z2.q0:
    long useCount -> g
    boolean shared -> h
    kotlin.collections.ArrayDeque unconfinedQueue -> i
    void <init>() -> <init>
    1:1:boolean isUnconfinedQueueEmpty():0:0 -> A
    1:1:boolean processUnconfinedEvent():0:0 -> B
    1:1:void decrementUseCount(boolean):0:0 -> n
    1:1:long delta(boolean):0:0 -> o
    1:1:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l0;)V"}
    void shutdown() -> shutdown
    1:1:long getNextTime():0:0 -> v
    1:1:void incrementUseCount(boolean):0:0 -> w
    1:1:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/q0;ZILjava/lang/Object;)V"}
    1:1:boolean isUnconfinedLoopActive():0:0 -> z
kotlinx.coroutines.EventLoopImplBase -> z2.r0:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU -> j
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU -> k
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleted$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void closeQueue():0:0 -> E
    1:1:java.lang.Runnable dequeue():0:0 -> F
    1:1:void enqueue(java.lang.Runnable):0:0 -> G
    1:1:boolean enqueueImpl(java.lang.Runnable):0:0 -> H
    1:1:boolean isCompleted():0:0 -> I
    1:1:boolean isEmpty():0:0 -> J
    1:1:long processNextEvent():0:0 -> K
    1:1:void rescheduleAllDelayed():0:0 -> L
    1:1:void resetAll():0:0 -> M
    1:1:void setCompleted(boolean):0:0 -> N
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:void shutdown():0:0 -> shutdown
    1:1:long getNextTime():0:0 -> v
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> z2.r0$a:
kotlinx.coroutines.EventLoopImplPlatform -> z2.s0:
    void <init>() -> <init>
    java.lang.Thread getThread() -> C
    1:1:void unpark():0:0 -> D
kotlinx.coroutines.EventLoopKt -> z2.t0:
    1:1:kotlinx.coroutines.EventLoop createEventLoop():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/q0;"}
kotlinx.coroutines.EventLoop_commonKt -> z2.u0:
    kotlinx.coroutines.internal.Symbol DISPOSED_TASK -> a
    kotlinx.coroutines.internal.Symbol CLOSED_EMPTY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
kotlinx.coroutines.ExceptionsKt -> z2.v0:
    1:1:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable):0:0 -> a
kotlinx.coroutines.ExecutorCoroutineDispatcher -> z2.w0:
    kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> z2.w0$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> z2.w0$a$a:
    kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$b;)Lz2/w0;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl -> z2.x0:
    java.util.concurrent.Executor executor -> h
    1:1:void <init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:void close():0:0 -> close
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/util/concurrent/RejectedExecutionException;)V"}
    1:1:java.util.concurrent.Executor getExecutor():0:0 -> o
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.ExecutorsKt -> z2.y0:
    1:1:kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;)Lz2/a0;"}
kotlinx.coroutines.InactiveNodeList -> z2.z0:
    kotlinx.coroutines.NodeList list -> e
    1:1:void <init>(kotlinx.coroutines.NodeList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/p1;)V"}
    1:1:boolean isActive():0:0 -> b
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.Incomplete -> z2.a1:
    boolean isActive() -> b
    kotlinx.coroutines.NodeList getList() -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p1;"}
kotlinx.coroutines.IncompleteStateBox -> z2.b1:
    kotlinx.coroutines.Incomplete state -> a
    1:1:void <init>(kotlinx.coroutines.Incomplete):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;)V"}
kotlinx.coroutines.InvokeOnCancelling -> z2.c1:
    kotlin.jvm.functions.Function1 handler -> i
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.InvokeOnCompletion -> z2.d1:
    kotlin.jvm.functions.Function1 handler -> i
    1:1:void <init>(kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.Job -> z2.e1:
    kotlinx.coroutines.Job$Key Key -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void cancel(java.util.concurrent.CancellationException) -> a
    boolean isActive() -> b
    java.util.concurrent.CancellationException getCancellationException() -> g
    kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLr2/l;)Lz2/o0;"}
    boolean start() -> start
    kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/r;)Lz2/p;"}
kotlinx.coroutines.Job$DefaultImpls -> z2.e1$a:
    1:1:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V"}
    1:1:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;Li2/g$c;)Li2/g$b;"}
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;ZZLr2/l;ILjava/lang/Object;)Lz2/o0;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;Li2/g$c;)Li2/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;Li2/g;)Li2/g;"}
kotlinx.coroutines.Job$Key -> z2.e1$b:
    kotlinx.coroutines.Job$Key $$INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.JobCancellationException -> z2.f1:
    kotlinx.coroutines.Job job -> e
    1:1:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;Lz2/e1;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobCancellingNode -> z2.g1:
    void <init>() -> <init>
kotlinx.coroutines.JobImpl -> z2.h1:
    boolean handlesException -> g
    1:1:void <init>(kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)V"}
    1:1:boolean handlesException():0:0 -> E0
    1:1:boolean getHandlesException$kotlinx_coroutines_core():0:0 -> U
    1:1:boolean getOnCancelComplete$kotlinx_coroutines_core():0:0 -> V
kotlinx.coroutines.JobKt -> z2.i1:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)Lz2/s;"}
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;ILjava/lang/Object;)Lz2/s;"}
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/util/concurrent/CancellationException;)V"}
    1:1:void ensureActive(kotlinx.coroutines.Job):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)V"}
kotlinx.coroutines.JobKt__JobKt -> z2.j1:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)Lz2/s;"}
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;ILjava/lang/Object;)Lz2/s;"}
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/util/concurrent/CancellationException;)V"}
    1:1:void ensureActive(kotlinx.coroutines.Job):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)V"}
kotlinx.coroutines.JobNode -> z2.k1:
    kotlinx.coroutines.JobSupport job -> h
    void <init>() -> <init>
    1:1:void dispose():0:0 -> a
    1:1:boolean isActive():0:0 -> b
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.JobSupport getJob():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/l1;"}
    1:1:void setJob(kotlinx.coroutines.JobSupport):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1;)V"}
kotlinx.coroutines.JobSupport -> z2.l1:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;Ljava/lang/Throwable;)Z"}
    1:1:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1;)Ljava/lang/String;"}
    1:1:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object):0:0 -> B0
    1:1:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1;Lz2/l1$b;Lz2/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/p1;Lz2/k1;)Z"}
    1:1:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> D0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1$b;Lz2/q;Ljava/lang/Object;)Z"}
    1:1:void addSuppressedExceptions(java.lang.Throwable,java.util.List):0:0 -> E
    1:1:void afterCompletion(java.lang.Object):0:0 -> F
    1:1:boolean cancelCoroutine(java.lang.Throwable):0:0 -> G
    1:1:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object):0:0 -> H
    1:1:void cancelInternal(java.lang.Throwable):0:0 -> I
    1:1:java.lang.Object cancelMakeCompleting(java.lang.Object):0:0 -> J
    1:1:boolean cancelParent(java.lang.Throwable):0:0 -> K
    1:1:java.lang.String cancellationExceptionMessage():0:0 -> L
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> M
    1:1:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;Ljava/lang/Object;)V"}
    1:1:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1$b;Lz2/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Throwable createCauseException(java.lang.Object):0:0 -> P
    1:1:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1$b;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;)Lz2/q;"}
    1:1:java.lang.Throwable getExceptionOrNull(java.lang.Object):0:0 -> S
    1:1:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1$b;Ljava/util/List;)Ljava/lang/Throwable;"}
    1:1:boolean getHandlesException$kotlinx_coroutines_core():0:0 -> U
    1:1:boolean getOnCancelComplete$kotlinx_coroutines_core():0:0 -> V
    1:1:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;)Lz2/p1;"}
    1:1:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core():0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p;"}
    1:1:java.lang.Object getState$kotlinx_coroutines_core():0:0 -> Y
    1:1:boolean handleJobException(java.lang.Throwable):0:0 -> Z
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> a
    1:1:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> a0
    1:1:boolean isActive():0:0 -> b
    1:1:void initParentJob(kotlinx.coroutines.Job):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/e1;)V"}
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;)Lz2/o0;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    1:1:boolean isCancelled():0:0 -> d0
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Li2/g;"}
    1:1:boolean isCompleted():0:0 -> e0
    1:1:java.util.concurrent.CancellationException getChildJobCancellationCause():0:0 -> f
    1:1:boolean isScopedCoroutine():0:0 -> f0
    1:1:java.util.concurrent.CancellationException getCancellationException():0:0 -> g
    1:1:java.lang.Object makeCancelling(java.lang.Object):0:0 -> g0
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g$c;"}
    1:1:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):0:0 -> h0
    1:1:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Z)Lz2/k1;"}
    1:1:java.lang.String nameString$kotlinx_coroutines_core():0:0 -> j0
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    1:1:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)Lz2/q;"}
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLr2/l;)Lz2/o0;"}
    1:1:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/p1;Ljava/lang/Throwable;)V"}
    1:1:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/p1;Ljava/lang/Throwable;)V"}
    1:1:void onCancelling(java.lang.Throwable):0:0 -> n0
    1:1:void onCompletionInternal(java.lang.Object):0:0 -> o0
    1:1:void onStart():0:0 -> p0
    1:1:void parentCancelled(kotlinx.coroutines.ParentJob):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/s1;)V"}
    1:1:void promoteEmptyToNodeList(kotlinx.coroutines.Empty):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/p0;)V"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
    1:1:void promoteSingleToNodeList(kotlinx.coroutines.JobNode):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/k1;)V"}
    1:1:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/k1;)V"}
    1:1:boolean start():0:0 -> start
    1:1:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/p;)V"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:int startInternal(java.lang.Object):0:0 -> u0
    1:1:java.lang.String stateString(java.lang.Object):0:0 -> v0
    1:1:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):0:0 -> w0
    1:1:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/r;)Lz2/p;"}
    1:1:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;"}
    1:1:java.lang.String toDebugString():0:0 -> y0
    1:1:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a1;Ljava/lang/Object;)Z"}
kotlinx.coroutines.JobSupport$ChildCompletion -> z2.l1$a:
    kotlinx.coroutines.JobSupport parent -> i
    kotlinx.coroutines.JobSupport$Finishing state -> j
    kotlinx.coroutines.ChildHandleNode child -> k
    java.lang.Object proposedUpdate -> l
    1:1:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l1;Lz2/l1$b;Lz2/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.JobSupport$Finishing -> z2.l1$b:
    kotlinx.coroutines.NodeList list -> e
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleting$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _rootCause$FU -> g
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _exceptionsHolder$FU -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/p1;ZLjava/lang/Throwable;)V"}
    1:1:void addExceptionLocked(java.lang.Throwable):0:0 -> a
    1:1:boolean isActive():0:0 -> b
    1:1:java.util.ArrayList allocateList():0:0 -> c
    1:1:java.lang.Object getExceptionsHolder():0:0 -> d
    1:1:java.lang.Throwable getRootCause():0:0 -> e
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p1;"}
    1:1:boolean isCancelling():0:0 -> g
    1:1:boolean isCompleting():0:0 -> h
    1:1:boolean isSealed():0:0 -> i
    1:1:java.util.List sealLocked(java.lang.Throwable):0:0 -> j
    1:1:void setCompleting(boolean):0:0 -> k
    1:1:void setExceptionsHolder(java.lang.Object):0:0 -> l
    1:1:void setRootCause(java.lang.Throwable):0:0 -> m
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> z2.l1$c:
    kotlinx.coroutines.JobSupport this$0 -> d
    java.lang.Object $expect$inlined -> e
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;Lz2/l1;Ljava/lang/Object;)V"}
    1:1:java.lang.Object prepare(java.lang.Object):0:0 -> d
    1:1:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)Ljava/lang/Object;"}
kotlinx.coroutines.JobSupportKt -> z2.m1:
    kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY -> a
    kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN -> b
    kotlinx.coroutines.internal.Symbol COMPLETING_RETRY -> c
    kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL -> d
    kotlinx.coroutines.internal.Symbol SEALED -> e
    kotlinx.coroutines.Empty EMPTY_NEW -> f
    kotlinx.coroutines.Empty EMPTY_ACTIVE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p0;"}
    1:1:kotlinx.coroutines.Empty access$getEMPTY_NEW$p():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:java.lang.Object boxIncomplete(java.lang.Object):0:0 -> g
    1:1:java.lang.Object unboxState(java.lang.Object):0:0 -> h
kotlinx.coroutines.LazyStandaloneCoroutine -> z2.n1:
    kotlin.coroutines.Continuation continuation -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Lr2/p;)V"}
    1:1:void onStart():0:0 -> p0
kotlinx.coroutines.MainCoroutineDispatcher -> z2.o1:
    void <init>() -> <init>
    kotlinx.coroutines.MainCoroutineDispatcher getImmediate() -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o1;"}
    1:1:java.lang.String toStringInternalImpl():0:0 -> o
kotlinx.coroutines.NodeList -> z2.p1:
    void <init>() -> <init>
    1:1:boolean isActive():0:0 -> b
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.NonDisposableHandle -> z2.q1:
    kotlinx.coroutines.NonDisposableHandle INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispose():0:0 -> a
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> c
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.NotCompleted -> z2.r1:
kotlinx.coroutines.ParentJob -> z2.s1:
    java.util.concurrent.CancellationException getChildJobCancellationCause() -> f
kotlinx.coroutines.StandaloneCoroutine -> z2.t1:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Z)V"}
    1:1:boolean handleJobException(java.lang.Throwable):0:0 -> Z
kotlinx.coroutines.ThreadContextElement -> z2.u1:
    void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Object;)V"}
    java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Ljava/lang/Object;"}
kotlinx.coroutines.ThreadLocalEventLoop -> z2.v1:
    kotlinx.coroutines.ThreadLocalEventLoop INSTANCE -> a
    java.lang.ThreadLocal ref -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/q0;"}
    1:1:void resetEventLoop$kotlinx_coroutines_core():0:0 -> b
    1:1:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/q0;)V"}
kotlinx.coroutines.Unconfined -> z2.w1:
    kotlinx.coroutines.Unconfined INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Z"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.UndispatchedCoroutine -> z2.x1:
kotlinx.coroutines.UndispatchedMarker -> z2.y1:
    kotlinx.coroutines.UndispatchedMarker INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Li2/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g$c;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g$c;)Li2/g;"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
kotlinx.coroutines.Waiter -> z2.z1:
    void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e0;I)V"}
kotlinx.coroutines.YieldContext -> z2.a2:
    kotlinx.coroutines.YieldContext$Key Key -> f
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.YieldContext$Key -> z2.a2$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlinx.coroutines.android.AndroidDispatcherFactory -> a3.a:
    void <init>() -> <init>
    1:1:int getLoadPriority():0:0 -> a
    1:1:java.lang.String hintOnError():0:0 -> b
    1:1:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lz2/o1;"}
kotlinx.coroutines.android.AndroidExceptionPreHandler -> a3.b:
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.reflect.Method preHandler():0:0 -> c
    1:1:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.android.HandlerContext -> a3.c:
    android.os.Handler handler -> g
    java.lang.String name -> h
    boolean invokeImmediately -> i
    kotlinx.coroutines.android.HandlerContext immediate -> j
    1:1:void <init>(android.os.Handler,java.lang.String):0:0 -> <init>
    2:2:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Ljava/lang/String;ILs2/g;)V"}
    3:3:void <init>(android.os.Handler,java.lang.String,boolean):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Z"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o1;"}
    1:1:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.android.HandlerContext getImmediate():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La3/c;"}
kotlinx.coroutines.android.HandlerDispatcher -> a3.d:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlinx.coroutines.android.HandlerDispatcherKt -> a3.e:
    kotlinx.coroutines.android.HandlerDispatcher Main -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.os.Handler asHandler(android.os.Looper,boolean):0:0 -> a
kotlinx.coroutines.channels.BufferOverflow -> b3.a:
    kotlinx.coroutines.channels.BufferOverflow SUSPEND -> e
    kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST -> f
    kotlinx.coroutines.channels.BufferOverflow DROP_LATEST -> g
    kotlinx.coroutines.channels.BufferOverflow[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.channels.BufferOverflow[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb3/a;"}
    1:1:kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lb3/a;"}
    1:1:kotlinx.coroutines.channels.BufferOverflow[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb3/a;"}
kotlinx.coroutines.channels.BufferedChannel -> b3.b:
    int capacity -> e
    kotlin.jvm.functions.Function1 onUndeliveredElement -> f
    kotlin.jvm.functions.Function3 onUndeliveredElementReceiveCancellationConstructor -> g
    java.util.concurrent.atomic.AtomicLongFieldUpdater sendersAndCloseStatus$FU -> h
    java.util.concurrent.atomic.AtomicLongFieldUpdater receivers$FU -> i
    java.util.concurrent.atomic.AtomicLongFieldUpdater bufferEnd$FU -> j
    java.util.concurrent.atomic.AtomicLongFieldUpdater completedExpandBuffersAndPauseFlag$FU -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater sendSegment$FU -> l
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater receiveSegment$FU -> m
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater bufferEndSegment$FU -> n
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _closeCause$FU -> o
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater closeHandler$FU -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILr2/l;)V"}
    1:1:void completeCloseOrCancel():0:0 -> A
    1:1:void waitExpandBufferCompletion$kotlinx_coroutines_core(long):0:0 -> A0
    1:1:void dropFirstElementUntilTheSpecifiedCellIsInTheBuffer(long):0:0 -> B
    1:1:void expandBuffer():0:0 -> C
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentBufferEnd(long,kotlinx.coroutines.channels.ChannelSegment,long):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;J)Lb3/j;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentReceive(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;)Lb3/j;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentSend(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;)Lb3/j;"}
    1:1:long getBufferEndCounter():0:0 -> G
    1:1:java.lang.Throwable getCloseCause():0:0 -> H
    1:1:java.lang.Throwable getReceiveException():0:0 -> I
    1:1:long getReceiversCounter$kotlinx_coroutines_core():0:0 -> J
    1:1:java.lang.Throwable getSendException():0:0 -> K
    1:1:long getSendersCounter$kotlinx_coroutines_core():0:0 -> L
    1:1:boolean hasElements$kotlinx_coroutines_core():0:0 -> M
    1:1:void incCompletedExpandBufferAttempts(long):0:0 -> N
    1:1:void incCompletedExpandBufferAttempts$default(kotlinx.coroutines.channels.BufferedChannel,long,int,java.lang.Object):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;JILjava/lang/Object;)V"}
    1:1:void invokeCloseHandler():0:0 -> P
    1:1:boolean isCellNonEmpty(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;IJ)Z"}
    1:1:boolean isClosed(long,boolean):0:0 -> R
    1:1:boolean isClosedForReceive():0:0 -> S
    1:1:boolean isClosedForReceive0(long):0:0 -> T
    1:1:boolean isClosedForSend0(long):0:0 -> U
    1:1:boolean isConflatedDropOldest():0:0 -> V
    1:1:boolean isRendezvousOrUnlimited():0:0 -> W
    1:1:long markAllEmptyCellsAsClosed(kotlinx.coroutines.channels.ChannelSegment):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;)J"}
    1:1:void markCancellationStarted():0:0 -> Y
    1:1:void markCancelled():0:0 -> Z
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> a
    1:1:void markClosed():0:0 -> a0
    1:1:kotlinx.coroutines.channels.ChannelSegment access$findSegmentReceive(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;JLb3/j;)Lb3/j;"}
    1:1:void moveSegmentBufferEndToSpecifiedOrLast(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;)V"}
    1:1:kotlinx.coroutines.channels.ChannelSegment access$findSegmentSend(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;JLb3/j;)Lb3/j;"}
    1:1:void onClosedIdempotent():0:0 -> c0
    1:1:java.lang.Throwable access$getReceiveException(kotlinx.coroutines.channels.BufferedChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;)Ljava/lang/Throwable;"}
    1:1:java.lang.Object onClosedSend(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getReceiveSegment$FU$p():0:0 -> e
    1:1:void onClosedSendOnNoWaiterSuspend(java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/j;)V"}
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getReceivers$FU$p():0:0 -> f
    1:1:void onReceiveDequeued():0:0 -> f0
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getSendSegment$FU$p():0:0 -> g
    1:1:void onReceiveEnqueued():0:0 -> g0
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSendersAndCloseStatus$FU$p():0:0 -> h
    1:1:void prepareReceiverForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/z1;Lb3/j;I)V"}
    1:1:boolean access$isClosedForSend0(kotlinx.coroutines.channels.BufferedChannel,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;J)Z"}
    1:1:void prepareSenderForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/z1;Lb3/j;I)V"}
    1:1:kotlinx.coroutines.channels.ChannelIterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/f;"}
    1:1:void access$onClosedSendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Ljava/lang/Object;Lz2/j;)V"}
    1:1:void removeUnprocessedElements(kotlinx.coroutines.channels.ChannelSegment):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;)V"}
    1:1:void access$prepareReceiverForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Lz2/z1;Lb3/j;I)V"}
    1:1:void resumeReceiverOnClosedChannel(kotlinx.coroutines.Waiter):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/z1;)V"}
    1:1:void access$prepareSenderForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Lz2/z1;Lb3/j;I)V"}
    1:1:void resumeSenderOnCancelledChannel(kotlinx.coroutines.Waiter):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/z1;)V"}
    1:1:boolean close(java.lang.Throwable):0:0 -> m
    1:1:void resumeWaiterOnClosedChannel(kotlinx.coroutines.Waiter,boolean):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/z1;Z)V"}
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> n
    1:1:java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object access$updateCellReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Lb3/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:java.lang.Object sendOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;ILjava/lang/Object;JLi2/d;)Ljava/lang/Object;"}
    1:1:int access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Lb3/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:boolean shouldSendSuspend(long):0:0 -> p0
    1:1:boolean bufferOrRendezvousSend(long):0:0 -> q
    1:1:boolean tryResumeReceiver(java.lang.Object,java.lang.Object):0:0 -> q0
    1:1:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> r
    1:1:boolean tryResumeSender(java.lang.Object,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lb3/j;I)Z"}
    1:1:void cancelSuspendedReceiveRequests(kotlinx.coroutines.channels.ChannelSegment,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;J)V"}
    1:1:boolean updateCellExpandBuffer(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;IJ)Z"}
    1:1:kotlinx.coroutines.channels.ChannelSegment closeLinkedList():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/j;"}
    1:1:boolean updateCellExpandBufferSlow(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;IJ)Z"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:boolean closeOrCancelImpl(java.lang.Throwable,boolean):0:0 -> u
    1:1:java.lang.Object updateCellReceive(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:void invokeOnClose(kotlin.jvm.functions.Function1):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;)V"}
    1:1:java.lang.Object updateCellReceiveSlow(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean isClosedForSend():0:0 -> w
    1:1:int updateCellSend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:void completeCancel(long):0:0 -> x
    1:1:int updateCellSendSlow(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:kotlinx.coroutines.channels.ChannelSegment completeClose(long):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lb3/j;"}
    1:1:void updateReceiversCounterIfLower(long):0:0 -> y0
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
    1:1:void updateSendersCounterIfLower(long):0:0 -> z0
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator -> b3.b$a:
    java.lang.Object receiveResult -> e
    kotlinx.coroutines.CancellableContinuationImpl continuation -> f
    kotlinx.coroutines.channels.BufferedChannel this$0 -> g
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;)V"}
    1:1:java.lang.Object hasNext(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Ljava/lang/Object;"}
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e0;I)V"}
    1:1:void access$onClosedHasNextNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b$a;)V"}
    1:1:void access$setContinuation$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.CancellableContinuationImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b$a;Lz2/k;)V"}
    1:1:void access$setReceiveResult$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b$a;Ljava/lang/Object;)V"}
    1:1:java.lang.Object hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/j;IJLi2/d;)Ljava/lang/Object;"}
    1:1:boolean onClosedHasNext():0:0 -> g
    1:1:void onClosedHasNextNoWaiterSuspend():0:0 -> h
    1:1:boolean tryResumeHasNext(java.lang.Object):0:0 -> i
    1:1:void tryResumeHasNextOnClosedChannel():0:0 -> j
    1:1:java.lang.Object next():0:0 -> next
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1 -> b3.b$b:
    kotlinx.coroutines.channels.BufferedChannel this$0 -> f
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;)V"}
kotlinx.coroutines.channels.BufferedChannelKt -> b3.c:
    kotlinx.coroutines.channels.ChannelSegment NULL_SEGMENT -> a
    int SEGMENT_SIZE -> b
    int EXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS -> c
    kotlinx.coroutines.internal.Symbol BUFFERED -> d
    kotlinx.coroutines.internal.Symbol IN_BUFFER -> e
    kotlinx.coroutines.internal.Symbol RESUMING_BY_RCV -> f
    kotlinx.coroutines.internal.Symbol RESUMING_BY_EB -> g
    kotlinx.coroutines.internal.Symbol POISONED -> h
    kotlinx.coroutines.internal.Symbol DONE_RCV -> i
    kotlinx.coroutines.internal.Symbol INTERRUPTED_SEND -> j
    kotlinx.coroutines.internal.Symbol INTERRUPTED_RCV -> k
    kotlinx.coroutines.internal.Symbol CHANNEL_CLOSED -> l
    kotlinx.coroutines.internal.Symbol SUSPEND -> m
    kotlinx.coroutines.internal.Symbol SUSPEND_NO_WAITER -> n
    kotlinx.coroutines.internal.Symbol FAILED -> o
    kotlinx.coroutines.internal.Symbol NO_RECEIVE_RESULT -> p
    kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_CLOSED -> q
    kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_INVOKED -> r
    kotlinx.coroutines.internal.Symbol NO_CLOSE_CAUSE -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:long initialBufferEnd(int):0:0 -> A
    1:1:boolean tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;Ljava/lang/Object;Lr2/l;)Z"}
    1:1:boolean tryResume0$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;Ljava/lang/Object;Lr2/l;ILjava/lang/Object;)Z"}
    1:1:long access$constructEBCompletedAndPauseFlag(long,boolean):0:0 -> a
    1:1:long access$constructSendersAndCloseStatus(long,int):0:0 -> b
    1:1:kotlinx.coroutines.channels.ChannelSegment access$createSegment(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;)Lb3/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_CLOSED$p():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_INVOKED$p():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getDONE_RCV$p():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:int access$getEXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS$p():0:0 -> g
    1:1:kotlinx.coroutines.internal.Symbol access$getFAILED$p():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_RCV$p():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_SEND$p():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getIN_BUFFER$p():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNO_CLOSE_CAUSE$p():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNO_RECEIVE_RESULT$p():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment access$getNULL_SEGMENT$p():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getPOISONED$p():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_EB$p():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_RCV$p():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSUSPEND$p():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSUSPEND_NO_WAITER$p():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:long access$initialBufferEnd(int):0:0 -> t
    1:1:boolean access$tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;Ljava/lang/Object;Lr2/l;)Z"}
    1:1:long constructEBCompletedAndPauseFlag(long,boolean):0:0 -> v
    1:1:long constructSendersAndCloseStatus(long,int):0:0 -> w
    1:1:kotlinx.coroutines.channels.ChannelSegment createSegment(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;)Lb3/j;"}
    1:1:kotlin.reflect.KFunction createSegmentFunction():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/e;"}
    1:1:kotlinx.coroutines.internal.Symbol getCHANNEL_CLOSED():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 -> b3.c$a:
    kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 INSTANCE -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:kotlinx.coroutines.channels.ChannelSegment invoke(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;)Lb3/j;"}
kotlinx.coroutines.channels.Channel -> b3.d:
    kotlinx.coroutines.channels.Channel$Factory Factory -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.channels.Channel$Factory -> b3.d$a:
    kotlinx.coroutines.channels.Channel$Factory $$INSTANCE -> a
    int CHANNEL_DEFAULT_CAPACITY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core():0:0 -> a
kotlinx.coroutines.channels.ChannelCoroutine -> b3.e:
    kotlinx.coroutines.channels.Channel _channel -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Lb3/d;ZZ)V"}
    1:1:void cancelInternal(java.lang.Throwable):0:0 -> I
    1:1:kotlinx.coroutines.channels.Channel get_channel():0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/d;"}
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> a
    1:1:kotlinx.coroutines.channels.ChannelIterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/f;"}
    1:1:boolean close(java.lang.Throwable):0:0 -> m
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> n
    1:1:void invokeOnClose(kotlin.jvm.functions.Function1):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;)V"}
    1:1:boolean isClosedForSend():0:0 -> w
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.channels.ChannelIterator -> b3.f:
    java.lang.Object hasNext(kotlin.coroutines.Continuation) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Ljava/lang/Object;"}
    java.lang.Object next() -> next
kotlinx.coroutines.channels.ChannelKt -> b3.g:
    1:1:kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILb3/a;Lr2/l;)Lb3/d;"}
    1:1:kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILb3/a;Lr2/l;ILjava/lang/Object;)Lb3/d;"}
kotlinx.coroutines.channels.ChannelResult -> b3.h:
    kotlinx.coroutines.channels.ChannelResult$Companion Companion -> a
    kotlinx.coroutines.channels.ChannelResult$Failed failed -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/h$c;"}
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> b
    1:1:java.lang.Throwable exceptionOrNull-impl(java.lang.Object):0:0 -> c
    1:1:boolean isClosed-impl(java.lang.Object):0:0 -> d
    1:1:boolean isSuccess-impl(java.lang.Object):0:0 -> e
kotlinx.coroutines.channels.ChannelResult$Closed -> b3.h$a:
    java.lang.Throwable cause -> a
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelResult$Companion -> b3.h$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:java.lang.Object closed-JP2dKIU(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object failure-PtdJZtk():0:0 -> b
    1:1:java.lang.Object success-JP2dKIU(java.lang.Object):0:0 -> c
kotlinx.coroutines.channels.ChannelResult$Failed -> b3.h$c:
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelSegment -> b3.j:
    kotlinx.coroutines.channels.BufferedChannel _channel -> i
    java.util.concurrent.atomic.AtomicReferenceArray data -> j
    1:1:void <init>(long,kotlinx.coroutines.channels.ChannelSegment,kotlinx.coroutines.channels.BufferedChannel,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb3/j;Lb3/b;I)V"}
    1:1:void setState$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> A
    1:1:void storeElement$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> B
    1:1:int getNumberOfSlots():0:0 -> n
    1:1:void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Li2/g;)V"}
    1:1:boolean casState$kotlinx_coroutines_core(int,java.lang.Object,java.lang.Object):0:0 -> r
    1:1:void cleanElement$kotlinx_coroutines_core(int):0:0 -> s
    1:1:java.lang.Object getAndSetState$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> t
    1:1:kotlinx.coroutines.channels.BufferedChannel getChannel():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/b;"}
    1:1:java.lang.Object getElement$kotlinx_coroutines_core(int):0:0 -> v
    1:1:java.lang.Object getState$kotlinx_coroutines_core(int):0:0 -> w
    1:1:void onCancelledRequest(int,boolean):0:0 -> x
    1:1:java.lang.Object retrieveElement$kotlinx_coroutines_core(int):0:0 -> y
    1:1:void setElementLazy(int,java.lang.Object):0:0 -> z
kotlinx.coroutines.channels.ChannelSegment$$ExternalSyntheticBackportWithForwarding0 -> b3.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean kotlinx.coroutines.channels.ChannelSegment$$InternalSyntheticBackportWithForwarding$1$6f7cae9946c5b86424e4e5c7a6884a900669cd56eb800ecaba91e55e82091194$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.channels.ChannelsKt -> b3.k:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/s;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt -> b3.l:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/s;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.channels.ClosedReceiveChannelException -> b3.m:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlinx.coroutines.channels.ClosedSendChannelException -> b3.n:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlinx.coroutines.channels.ConflatedBufferedChannel -> b3.o:
    int capacity -> q
    kotlinx.coroutines.channels.BufferOverflow onBufferOverflow -> r
    1:1:void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILb3/a;Lr2/l;)V"}
    1:1:java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/o;Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object,boolean):0:0 -> C0
    1:1:java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object):0:0 -> D0
    1:1:java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean):0:0 -> E0
    1:1:boolean isConflatedDropOldest():0:0 -> V
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> n
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.channels.ProduceKt -> b3.p:
    1:1:java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Lr2/a;Li2/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;ILb3/a;Lz2/f0;Lr2/l;Lr2/p;)Lb3/s;"}
    1:1:kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/g;ILb3/a;Lz2/f0;Lr2/l;Lr2/p;ILjava/lang/Object;)Lb3/s;"}
kotlinx.coroutines.channels.ProduceKt$awaitClose$1 -> b3.p$a:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    java.lang.Object result -> j
    int label -> k
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1 -> b3.p$b:
    kotlinx.coroutines.CancellableContinuation $cont -> f
    1:1:void <init>(kotlinx.coroutines.CancellableContinuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
kotlinx.coroutines.channels.ProducerCoroutine -> b3.q:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Lb3/d;)V"}
    1:1:void onCancelled(java.lang.Throwable,boolean):0:0 -> F0
    1:1:void onCompleted(java.lang.Object):0:0 -> G0
    1:1:void onCompleted(kotlin.Unit):0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/q;)V"}
    1:1:boolean isActive():0:0 -> b
kotlinx.coroutines.channels.ProducerScope -> b3.r:
kotlinx.coroutines.channels.ReceiveChannel -> b3.s:
    void cancel(java.util.concurrent.CancellationException) -> a
    kotlinx.coroutines.channels.ChannelIterator iterator() -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb3/f;"}
kotlinx.coroutines.channels.SendChannel -> b3.t:
    boolean close(java.lang.Throwable) -> m
    java.lang.Object trySend-JP2dKIU(java.lang.Object) -> n
    void invokeOnClose(kotlin.jvm.functions.Function1) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;)V"}
    boolean isClosedForSend() -> w
    java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.channels.SendChannel$DefaultImpls -> b3.t$a:
    1:1:boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/t;Ljava/lang/Throwable;ILjava/lang/Object;)Z"}
kotlinx.coroutines.channels.WaiterEB -> b3.u:
    kotlinx.coroutines.Waiter waiter -> a
    1:1:void <init>(kotlinx.coroutines.Waiter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/z1;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.CallbackFlowBuilder -> c3.a:
    kotlin.jvm.functions.Function2 block -> e
    1:1:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Li2/g;ILb3/a;)V"}
    2:2:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Li2/g;ILb3/a;ILs2/g;)V"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Li2/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)Ld3/d;"}
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1 -> c3.a$a:
    java.lang.Object L$0 -> h
    java.lang.Object result -> i
    kotlinx.coroutines.flow.CallbackFlowBuilder this$0 -> j
    int label -> k
    1:1:void <init>(kotlinx.coroutines.flow.CallbackFlowBuilder,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/a;Li2/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
kotlinx.coroutines.flow.ChannelFlowBuilder -> c3.b:
    kotlin.jvm.functions.Function2 block -> d
    1:1:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Li2/g;ILb3/a;)V"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.ChannelFlowBuilder,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/b;Lb3/r;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.Flow -> c3.c:
    java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowCollector -> c3.d:
    java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowKt -> c3.e:
    1:1:kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;)Lc3/c;"}
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Lb3/s;Li2/d;)Ljava/lang/Object;"}
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;)V"}
    1:1:kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/c;Li2/g;)Lc3/c;"}
kotlinx.coroutines.flow.FlowKt__BuildersKt -> c3.f:
    1:1:kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;)Lc3/c;"}
kotlinx.coroutines.flow.FlowKt__ChannelsKt -> c3.g:
    1:1:java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Lb3/s;ZLi2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Lb3/s;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Lb3/s;ZLi2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1 -> c3.g$a:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    java.lang.Object L$2 -> j
    boolean Z$0 -> k
    java.lang.Object result -> l
    int label -> m
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
kotlinx.coroutines.flow.FlowKt__ContextKt -> c3.h:
    1:1:void checkFlowContext$FlowKt__ContextKt(kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)V"}
    1:1:kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/c;Li2/g;)Lc3/c;"}
kotlinx.coroutines.flow.FlowKt__EmittersKt -> c3.i:
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;)V"}
kotlinx.coroutines.flow.MutableStateFlow -> c3.j:
    void setValue(java.lang.Object) -> setValue
kotlinx.coroutines.flow.SharedFlow -> c3.k:
kotlinx.coroutines.flow.SharedFlowKt -> c3.l:
    kotlinx.coroutines.internal.Symbol NO_VALUE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.Flow fuseSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/k;Li2/g;ILb3/a;)Lc3/c;"}
kotlinx.coroutines.flow.StateFlow -> c3.m:
kotlinx.coroutines.flow.StateFlowImpl -> c3.n:
    int sequence -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)Lc3/c;"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld3/c;"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld3/c;"}
    1:1:kotlinx.coroutines.flow.StateFlowSlot createSlot():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc3/p;"}
    1:1:kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc3/p;"}
    1:1:boolean updateState(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:void setValue(java.lang.Object):0:0 -> setValue
kotlinx.coroutines.flow.StateFlowImpl$collect$1 -> c3.n$a:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    java.lang.Object L$2 -> j
    java.lang.Object L$3 -> k
    java.lang.Object L$4 -> l
    java.lang.Object result -> m
    kotlinx.coroutines.flow.StateFlowImpl this$0 -> n
    int label -> o
    1:1:void <init>(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/n;Li2/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
kotlinx.coroutines.flow.StateFlowKt -> c3.o:
    kotlinx.coroutines.internal.Symbol NONE -> a
    kotlinx.coroutines.internal.Symbol PENDING -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc3/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNONE$p():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getPENDING$p():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.flow.Flow fuseStateFlow(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/m;Li2/g;ILb3/a;)Lc3/c;"}
kotlinx.coroutines.flow.StateFlowSlot -> c3.p:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean allocateLocked(java.lang.Object):0:0 -> a
    1:1:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)[Li2/d;"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_state$FU$p():0:0 -> c
    1:1:boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/n;)Z"}
    1:1:java.lang.Object awaitPending(kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/n;)[Li2/d;"}
    1:1:void makePending():0:0 -> g
    1:1:boolean takePending():0:0 -> h
kotlinx.coroutines.flow.internal.AbstractSharedFlow -> d3.a:
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] slots -> a
    int nCollectors -> b
    int nextIndex -> c
    void <init>() -> <init>
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld3/c;"}
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld3/c;"}
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld3/c;"}
    1:1:void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/c;)V"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ld3/c;"}
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt -> d3.b:
    kotlin.coroutines.Continuation[] EMPTY_RESUMES -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot -> d3.c:
    void <init>() -> <init>
    boolean allocateLocked(java.lang.Object) -> a
    kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)[Li2/d;"}
kotlinx.coroutines.flow.internal.ChannelFlow -> d3.d:
    kotlin.coroutines.CoroutineContext context -> a
    int capacity -> b
    kotlinx.coroutines.channels.BufferOverflow onBufferOverflow -> c
    1:1:void <init>(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)V"}
    1:1:java.lang.String additionalToStringProps():0:0 -> a
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)Lc3/c;"}
    1:1:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/d;Lc3/d;Li2/d;)Ljava/lang/Object;"}
    java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Li2/d;)Ljava/lang/Object;"}
    kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)Ld3/d;"}
    1:1:kotlin.jvm.functions.Function2 getCollectToFun$kotlinx_coroutines_core():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr2/p;"}
    1:1:int getProduceCapacity$kotlinx_coroutines_core():0:0 -> h
    1:1:kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;)Lb3/s;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2 -> d3.d$a:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.FlowCollector $collector -> k
    kotlinx.coroutines.flow.internal.ChannelFlow this$0 -> l
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Ld3/d;Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/d0;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1 -> d3.d$b:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.internal.ChannelFlow this$0 -> k
    1:1:void <init>(kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/d;Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlowKt -> d3.e:
    1:1:kotlinx.coroutines.flow.FlowCollector access$withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/g;)Lc3/d;"}
    1:1:java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Object;Ljava/lang/Object;Lr2/p;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Object;Ljava/lang/Object;Lr2/p;Li2/d;ILjava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.FlowCollector withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/g;)Lc3/d;"}
kotlinx.coroutines.flow.internal.ChannelFlowOperator -> d3.f:
    kotlinx.coroutines.flow.Flow flow -> d
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/c;Li2/g;ILb3/a;)V"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/r;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/f;Lc3/d;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/f;Lb3/r;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/g;Li2/d;)Ljava/lang/Object;"}
    java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2 -> d3.f$a:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.internal.ChannelFlowOperator this$0 -> k
    1:1:void <init>(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/f;Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
    1:1:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl -> d3.g:
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/c;Li2/g;ILb3/a;)V"}
    2:2:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/c;Li2/g;ILb3/a;ILs2/g;)V"}
    1:1:kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)Ld3/d;"}
    1:1:java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.FusibleFlow -> d3.h:
    kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;ILb3/a;)Lc3/c;"}
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls -> d3.h$a:
    1:1:kotlinx.coroutines.flow.Flow fuse$default(kotlinx.coroutines.flow.internal.FusibleFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/h;Li2/g;ILb3/a;ILjava/lang/Object;)Lc3/c;"}
kotlinx.coroutines.flow.internal.NullSurrogateKt -> d3.i:
    kotlinx.coroutines.internal.Symbol NULL -> a
    kotlinx.coroutines.internal.Symbol UNINITIALIZED -> b
    kotlinx.coroutines.internal.Symbol DONE -> c
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.flow.internal.SendingCollector -> d3.j:
    kotlinx.coroutines.channels.SendChannel channel -> a
    1:1:void <init>(kotlinx.coroutines.channels.SendChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/t;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.StackFrameContinuation -> d3.k:
    kotlin.coroutines.Continuation uCont -> e
    kotlin.coroutines.CoroutineContext context -> f
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Li2/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/e;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> s
kotlinx.coroutines.flow.internal.UndispatchedContextCollector -> d3.l:
    kotlin.coroutines.CoroutineContext emitContext -> a
    java.lang.Object countOrElement -> b
    kotlin.jvm.functions.Function2 emitRef -> c
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/g;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1 -> d3.l$a:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.FlowCollector $downstream -> k
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc3/d;Li2/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Li2/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> j
    1:1:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/d;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.AtomicKt -> e3.a:
    java.lang.Object NO_DECISION -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> e3.b:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object perform(java.lang.Object):0:0 -> a
    void complete(java.lang.Object,java.lang.Object) -> b
    1:1:java.lang.Object decide(java.lang.Object):0:0 -> c
    java.lang.Object prepare(java.lang.Object) -> d
kotlinx.coroutines.internal.ConcurrentKt -> e3.c:
    java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean removeFutureOnCancel(java.util.concurrent.Executor):0:0 -> a
kotlinx.coroutines.internal.ConcurrentLinkedListKt -> e3.d:
    kotlinx.coroutines.internal.Symbol CLOSED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode close(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e;)Le3/e;"}
    1:1:java.lang.Object findSegmentInternal(kotlinx.coroutines.internal.Segment,long,kotlin.jvm.functions.Function2):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e0;JLr2/p;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.ConcurrentLinkedListNode -> e3.e:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e;)V"}
    1:1:java.lang.Object access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e;)Ljava/lang/Object;"}
    1:1:void cleanPrev():0:0 -> b
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentLeft():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/e;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentRight():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/e;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getNext():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/e;"}
    1:1:java.lang.Object getNextOrClosed():0:0 -> f
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getPrev():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/e;"}
    boolean isRemoved() -> h
    1:1:boolean isTail():0:0 -> i
    1:1:boolean markAsClosed():0:0 -> j
    1:1:void remove():0:0 -> k
    1:1:boolean trySetNext(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e;)Z"}
kotlinx.coroutines.internal.ContextScope -> e3.f:
    kotlin.coroutines.CoroutineContext coroutineContext -> e
    1:1:void <init>(kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getCoroutineContext():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt -> e3.g:
    java.util.Collection platformExceptionHandlers -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.Collection getPlatformExceptionHandlers():0:0 -> a
    1:1:void propagateExceptionFinalResort(java.lang.Throwable):0:0 -> b
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt -> e3.h:
    1:1:void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.internal.DiagnosticCoroutineContextException -> e3.i:
    kotlin.coroutines.CoroutineContext context -> e
    1:1:void <init>(kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)V"}
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:java.lang.String getLocalizedMessage():0:0 -> getLocalizedMessage
kotlinx.coroutines.internal.DispatchedContinuation -> e3.j:
    kotlinx.coroutines.CoroutineDispatcher dispatcher -> h
    kotlin.coroutines.Continuation continuation -> i
    java.lang.Object _state -> j
    java.lang.Object countOrElement -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a0;Li2/d;)V"}
    1:1:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable):0:0 -> a
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/g;"}
    1:1:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li2/d;"}
    1:1:java.lang.Object takeState$kotlinx_coroutines_core():0:0 -> h
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/e;"}
    1:1:void awaitReusability():0:0 -> j
    1:1:kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/k;"}
    1:1:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/k;"}
    1:1:boolean isReusable():0:0 -> m
    1:1:boolean postponeCancellation(java.lang.Throwable):0:0 -> n
    1:1:void release():0:0 -> o
    1:1:java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;)Ljava/lang/Throwable;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> s
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.DispatchedContinuationKt -> e3.k:
    kotlinx.coroutines.internal.Symbol UNDEFINED -> a
    kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/h0;"}
    1:1:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Ljava/lang/Object;Lr2/l;)V"}
    1:1:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Ljava/lang/Object;Lr2/l;ILjava/lang/Object;)V"}
kotlinx.coroutines.internal.FastServiceLoader -> e3.l:
    kotlinx.coroutines.internal.FastServiceLoader INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class):0:0 -> a
    1:1:java.util.List load(java.lang.Class,java.lang.ClassLoader):0:0 -> b
    1:1:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():0:0 -> c
    1:1:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):0:0 -> d
    1:1:java.util.List parse(java.net.URL):0:0 -> e
    1:1:java.util.List parseFile(java.io.BufferedReader):0:0 -> f
kotlinx.coroutines.internal.FastServiceLoaderKt -> e3.m:
    boolean ANDROID_DETECTED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean getANDROID_DETECTED():0:0 -> a
kotlinx.coroutines.internal.InlineList -> e3.n:
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILs2/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.LimitedDispatcher -> e3.o:
    kotlinx.coroutines.CoroutineDispatcher dispatcher -> g
    int parallelism -> h
    kotlinx.coroutines.Delay $$delegate_0 -> i
    kotlinx.coroutines.internal.LockFreeTaskQueue queue -> j
    java.lang.Object workerAllocationLock -> k
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater runningWorkers$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.CoroutineDispatcher,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a0;I)V"}
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/o;)Lz2/a0;"}
    1:1:java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/o;)Ljava/lang/Runnable;"}
    1:1:java.lang.Runnable obtainTaskOrDeallocateWorker():0:0 -> s
    1:1:boolean tryAllocateWorker():0:0 -> v
kotlinx.coroutines.internal.LimitedDispatcher$Worker -> e3.o$a:
    java.lang.Runnable currentTask -> e
    kotlinx.coroutines.internal.LimitedDispatcher this$0 -> f
    1:1:void <init>(kotlinx.coroutines.internal.LimitedDispatcher,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/o;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
kotlinx.coroutines.internal.LimitedDispatcherKt -> e3.p:
    1:1:void checkParallelism(int):0:0 -> a
kotlinx.coroutines.internal.LockFreeLinkedListHead -> e3.q:
    void <init>() -> <init>
    1:1:boolean isRemoved():0:0 -> r
kotlinx.coroutines.internal.LockFreeLinkedListKt -> e3.r:
    java.lang.Object CONDITION_FALSE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object getCONDITION_FALSE():0:0 -> a
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Le3/s;"}
kotlinx.coroutines.internal.LockFreeLinkedListNode -> e3.s:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;Le3/s;)V"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_next$FU$p():0:0 -> j
    1:1:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)Z"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/a0;)Le3/s;"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)Le3/s;"}
    1:1:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)V"}
    1:1:java.lang.Object getNext():0:0 -> o
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/s;"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/s;"}
    1:1:boolean isRemoved():0:0 -> r
    1:1:boolean remove():0:0 -> s
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/s;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.internal.Removed removed():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/b0;"}
    1:1:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;Le3/s;Le3/s$a;)I"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> e3.s$a:
    kotlinx.coroutines.internal.LockFreeLinkedListNode newNode -> b
    kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext -> c
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)V"}
    1:1:void complete(java.lang.Object,java.lang.Object):0:0 -> b
    1:1:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;Ljava/lang/Object;)V"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1 -> e3.s$b:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object get():0:0 -> get
kotlinx.coroutines.internal.LockFreeTaskQueue -> e3.t:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean addLast(java.lang.Object):0:0 -> a
    1:1:void close():0:0 -> b
    1:1:int getSize():0:0 -> c
    1:1:java.lang.Object removeFirstOrNull():0:0 -> d
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> e3.u:
    int capacity -> a
    boolean singleConsumer -> b
    int mask -> c
    java.util.concurrent.atomic.AtomicReferenceArray array -> d
    kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> f
    java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU -> g
    kotlinx.coroutines.internal.Symbol REMOVE_FROZEN -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,boolean):0:0 -> <init>
    1:1:int addLast(java.lang.Object):0:0 -> a
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Le3/u;"}
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Le3/u;"}
    1:1:boolean close():0:0 -> d
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)Le3/u;"}
    1:1:int getSize():0:0 -> f
    1:1:boolean isEmpty():0:0 -> g
    1:1:long markFrozen():0:0 -> h
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore next():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/u;"}
    1:1:java.lang.Object removeFirstOrNull():0:0 -> j
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Le3/u;"}
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> e3.u$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
    1:1:int addFailReason(long):0:0 -> a
    1:1:long updateHead(long,int):0:0 -> b
    1:1:long updateTail(long,int):0:0 -> c
    1:1:long wo(long,long):0:0 -> d
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> e3.u$b:
    int index -> a
    1:1:void <init>(int):0:0 -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> e3.v:
    int getLoadPriority() -> a
    java.lang.String hintOnError() -> b
    kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lz2/o1;"}
kotlinx.coroutines.internal.MainDispatcherLoader -> e3.w:
    kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE -> a
    boolean FAST_SERVICE_LOADER_ENABLED -> b
    kotlinx.coroutines.MainCoroutineDispatcher dispatcher -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o1;"}
kotlinx.coroutines.internal.MainDispatchersKt -> e3.x:
    boolean SUPPORT_MISSING -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;)Le3/y;"}
    1:1:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Le3/y;"}
    1:1:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/o1;)Z"}
    1:1:java.lang.Void throwMissingMainDispatcherException():0:0 -> d
    1:1:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/v;Ljava/util/List;)Lz2/o1;"}
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> e3.y:
    java.lang.Throwable cause -> g
    java.lang.String errorHint -> h
    1:1:void <init>(java.lang.Throwable,java.lang.String):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Z"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/o1;"}
    1:1:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)Ljava/lang/Void;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.lang.Void missing():0:0 -> v
kotlinx.coroutines.internal.OnUndeliveredElementKt -> e3.z:
    1:1:kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Ljava/lang/Object;Li2/g;)Lr2/l;"}
    1:1:void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Ljava/lang/Object;Li2/g;)V"}
    1:1:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Ljava/lang/Object;Le3/q0;)Le3/q0;"}
    1:1:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Ljava/lang/Object;Le3/q0;ILjava/lang/Object;)Le3/q0;"}
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1 -> e3.z$a:
    kotlin.jvm.functions.Function1 $this_bindCancellationFun -> f
    java.lang.Object $element -> g
    kotlin.coroutines.CoroutineContext $context -> h
    1:1:void <init>(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/l;Ljava/lang/Object;Li2/g;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.OpDescriptor -> e3.a0:
    void <init>() -> <init>
    java.lang.Object perform(java.lang.Object) -> a
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.Removed -> e3.b0:
    kotlinx.coroutines.internal.LockFreeLinkedListNode ref -> a
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/s;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> e3.c0:
    1:1:void <init>(int):0:0 -> <init>
    1:1:int currentLength():0:0 -> a
    1:1:java.lang.Object get(int):0:0 -> b
    1:1:void setSynchronized(int,java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.ScopeCoroutine -> e3.d0:
    kotlin.coroutines.Continuation uCont -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Li2/d;)V"}
    1:1:void afterResume(java.lang.Object):0:0 -> E0
    1:1:void afterCompletion(java.lang.Object):0:0 -> F
    1:1:boolean isScopedCoroutine():0:0 -> f0
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/e;"}
kotlinx.coroutines.internal.Segment -> e3.e0:
    long id -> g
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater cleanedAndPointers$FU -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,kotlinx.coroutines.internal.Segment,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLe3/e0;I)V"}
    1:1:boolean isRemoved():0:0 -> h
    1:1:boolean decPointers$kotlinx_coroutines_core():0:0 -> m
    int getNumberOfSlots() -> n
    void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Li2/g;)V"}
    1:1:void onSlotCleaned():0:0 -> p
    1:1:boolean tryIncPointers$kotlinx_coroutines_core():0:0 -> q
kotlinx.coroutines.internal.SegmentOrClosed -> e3.f0:
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Le3/e0;"}
    1:1:boolean isClosed-impl(java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.StackTraceRecoveryKt -> e3.g0:
    java.lang.StackTraceElement ARTIFICIAL_FRAME -> a
    java.lang.String baseContinuationImplClassName -> b
    java.lang.String stackTraceRecoveryClassName -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Throwable recoverStackTrace(java.lang.Throwable):0:0 -> a
kotlinx.coroutines.internal.Symbol -> e3.h0:
    java.lang.String symbol -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.SystemPropsKt -> e3.i0:
    1:1:int getAVAILABLE_PROCESSORS():0:0 -> a
    1:1:int systemProp(java.lang.String,int,int,int):0:0 -> b
    1:1:long systemProp(java.lang.String,long,long,long):0:0 -> c
    1:1:java.lang.String systemProp(java.lang.String):0:0 -> d
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String):0:0 -> e
    1:1:boolean systemProp(java.lang.String,boolean):0:0 -> f
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object):0:0 -> g
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> e3.j0:
    int AVAILABLE_PROCESSORS -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int getAVAILABLE_PROCESSORS():0:0 -> a
    1:1:java.lang.String systemProp(java.lang.String):0:0 -> b
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> e3.k0:
    1:1:int systemProp(java.lang.String,int,int,int):0:0 -> a
    1:1:long systemProp(java.lang.String,long,long,long):0:0 -> b
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String):0:0 -> c
    1:1:boolean systemProp(java.lang.String,boolean):0:0 -> d
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object):0:0 -> e
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object):0:0 -> f
kotlinx.coroutines.internal.ThreadContextKt -> e3.l0:
    kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS -> a
    kotlin.jvm.functions.Function2 countAll -> b
    kotlin.jvm.functions.Function2 findOne -> c
    kotlin.jvm.functions.Function2 updateState -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Object;)V"}
    1:1:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Object;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> e3.l0$a:
    kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li2/g$b;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> e3.l0$b:
    kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/u1;Li2/g$b;)Lz2/u1;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> e3.l0$c:
    kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/p0;Li2/g$b;)Le3/p0;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> g
kotlinx.coroutines.internal.ThreadLocalKt -> e3.m0:
    1:1:java.lang.ThreadLocal commonThreadLocal(kotlinx.coroutines.internal.Symbol):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/h0;)Ljava/lang/ThreadLocal;"}
kotlinx.coroutines.internal.ThreadSafeHeap -> e3.n0:
    kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/o0;"}
    boolean isEmpty() -> b
    kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/o0;"}
    kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le3/o0;"}
kotlinx.coroutines.internal.ThreadSafeHeapNode -> e3.o0:
kotlinx.coroutines.internal.ThreadState -> e3.p0:
    kotlin.coroutines.CoroutineContext context -> a
    java.lang.Object[] values -> b
    kotlinx.coroutines.ThreadContextElement[] elements -> c
    int i -> d
    1:1:void <init>(kotlin.coroutines.CoroutineContext,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;I)V"}
    1:1:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/u1;Ljava/lang/Object;)V"}
    1:1:void restore(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;)V"}
kotlinx.coroutines.internal.UndeliveredElementException -> e3.q0:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.intrinsics.CancellableKt -> f3.a:
    1:1:void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Ljava/lang/Throwable;)V"}
    1:1:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/d;Li2/d;)V"}
    1:1:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;Lr2/l;)V"}
    1:1:void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;Lr2/l;ILjava/lang/Object;)V"}
kotlinx.coroutines.intrinsics.UndispatchedKt -> f3.b:
    1:1:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/p;Ljava/lang/Object;Li2/d;)V"}
    1:1:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/d0;Ljava/lang/Object;Lr2/p;)Ljava/lang/Object;"}
kotlinx.coroutines.scheduling.CoroutineScheduler -> g3.a:
    int corePoolSize -> e
    int maxPoolSize -> f
    long idleWorkerKeepAliveNs -> g
    java.lang.String schedulerName -> h
    kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue -> i
    kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue -> j
    kotlinx.coroutines.internal.ResizableAtomicArray workers -> k
    kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion -> l
    java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU -> m
    java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU -> n
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU -> o
    kotlinx.coroutines.internal.Symbol NOT_IN_STACK -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,long,java.lang.String):0:0 -> <init>
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p():0:0 -> a
    1:1:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/h;)Z"}
    1:1:int createNewWorker():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Lg3/i;)Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/a$c;"}
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Lg3/i;Z)V"}
    1:1:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a;Ljava/lang/Runnable;Lg3/i;ZILjava/lang/Object;)V"}
    1:1:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a$c;)I"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/a$c;"}
    1:1:boolean isTerminated():0:0 -> isTerminated
    1:1:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a$c;)Z"}
    1:1:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a$c;II)V"}
    1:1:void runSafely(kotlinx.coroutines.scheduling.Task):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/h;)V"}
    1:1:void shutdown(long):0:0 -> m
    1:1:void signalBlockingWork(long,boolean):0:0 -> n
    1:1:void signalCpuWork():0:0 -> o
    1:1:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a$c;Lg3/h;Z)Lg3/h;"}
    1:1:boolean tryCreateWorker(long):0:0 -> q
    1:1:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a;JILjava/lang/Object;)Z"}
    1:1:boolean tryUnpark():0:0 -> s
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> g3.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/g;)V"}
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> g3.a$b:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> g3.a$c:
    kotlinx.coroutines.scheduling.WorkQueue localQueue -> e
    kotlin.jvm.internal.Ref$ObjectRef stolenTask -> f
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state -> g
    long terminationDeadline -> h
    long minDelayUntilStealableTaskNs -> i
    int rngState -> j
    boolean mayHaveLocalTasks -> k
    kotlinx.coroutines.scheduling.CoroutineScheduler this$0 -> l
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a;)V"}
    2:2:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a;I)V"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a$c;)Lg3/a;"}
    1:1:void afterTask(int):0:0 -> b
    1:1:void beforeTask(int):0:0 -> c
    1:1:void executeTask(kotlinx.coroutines.scheduling.Task):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/h;)V"}
    1:1:kotlinx.coroutines.scheduling.Task findAnyTask(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task findBlockingTask():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task findTask(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg3/h;"}
    1:1:int getIndexInArray():0:0 -> h
    1:1:java.lang.Object getNextParkedWorker():0:0 -> i
    1:1:java.util.concurrent.atomic.AtomicIntegerFieldUpdater getWorkerCtl$FU():0:0 -> j
    1:1:void idleReset(int):0:0 -> k
    1:1:boolean inStack():0:0 -> l
    1:1:int nextInt(int):0:0 -> m
    1:1:void park():0:0 -> n
    1:1:kotlinx.coroutines.scheduling.Task pollGlobalQueues():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/h;"}
    1:1:void runWorker():0:0 -> p
    1:1:void setIndexInArray(int):0:0 -> q
    1:1:void setNextParkedWorker(java.lang.Object):0:0 -> r
    1:1:void run():0:0 -> run
    1:1:boolean tryAcquireCpuPermit():0:0 -> s
    1:1:void tryPark():0:0 -> t
    1:1:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/a$d;)Z"}
    1:1:kotlinx.coroutines.scheduling.Task trySteal(int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg3/h;"}
    1:1:void tryTerminateWorker():0:0 -> w
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> g3.a$d:
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED -> e
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING -> f
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING -> g
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT -> h
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED -> i
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lg3/a$d;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lg3/a$d;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lg3/a$d;"}
kotlinx.coroutines.scheduling.DefaultIoScheduler -> g3.b:
    kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE -> h
    kotlinx.coroutines.CoroutineDispatcher default -> i
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:void close():0:0 -> close
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.DefaultScheduler -> g3.c:
    kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void close():0:0 -> close
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.GlobalQueue -> g3.d:
    1:1:void <init>():0:0 -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> g3.e:
    kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:long nanoTime():0:0 -> a
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> g3.f:
    int corePoolSize -> h
    int maxPoolSize -> i
    long idleWorkerKeepAliveNs -> j
    java.lang.String schedulerName -> k
    kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler -> l
    1:1:void <init>(int,int,long,java.lang.String):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/a;"}
    1:1:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Lg3/i;Z)V"}
kotlinx.coroutines.scheduling.SchedulerTimeSource -> g3.g:
    void <init>() -> <init>
    long nanoTime() -> a
kotlinx.coroutines.scheduling.Task -> g3.h:
    long submissionTime -> e
    kotlinx.coroutines.scheduling.TaskContext taskContext -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(long,kotlinx.coroutines.scheduling.TaskContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLg3/i;)V"}
kotlinx.coroutines.scheduling.TaskContext -> g3.i:
    int getTaskMode() -> a
    void afterTask() -> b
kotlinx.coroutines.scheduling.TaskContextImpl -> g3.j:
    int taskMode -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getTaskMode():0:0 -> a
    1:1:void afterTask():0:0 -> b
kotlinx.coroutines.scheduling.TaskImpl -> g3.k:
    java.lang.Runnable block -> g
    1:1:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;JLg3/i;)V"}
    1:1:void run():0:0 -> run
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.TasksKt -> g3.l:
    java.lang.String DEFAULT_SCHEDULER_NAME -> a
    long WORK_STEALING_TIME_RESOLUTION_NS -> b
    int CORE_POOL_SIZE -> c
    int MAX_POOL_SIZE -> d
    long IDLE_WORKER_KEEP_ALIVE_NS -> e
    kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource -> f
    kotlinx.coroutines.scheduling.TaskContext NonBlockingContext -> g
    kotlinx.coroutines.scheduling.TaskContext BlockingContext -> h
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> g3.m:
    kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li2/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lz2/a0;"}
kotlinx.coroutines.scheduling.WorkQueue -> g3.n:
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU -> b
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU -> c
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/h;Z)Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/h;)Lg3/h;"}
    1:1:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/h;)V"}
    1:1:int getBufferSize():0:0 -> d
    1:1:int getSize$kotlinx_coroutines_core():0:0 -> e
    1:1:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/d;)V"}
    1:1:kotlinx.coroutines.scheduling.Task poll():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task pollBlocking():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task pollBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/h;"}
    1:1:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg3/d;)Z"}
    1:1:kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task stealWithExclusiveMode(int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg3/h;"}
    1:1:kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Lg3/h;"}
    1:1:long trySteal(int,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILs2/r;)J"}
    1:1:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILs2/r;)J"}
